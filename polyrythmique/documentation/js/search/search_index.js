var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddOn.html",[0,0.077,1,2.122]],["body/classes/AddOn.html",[0,0.102,1,3.6,2,1.122,3,0.283,4,0.251,5,0.251,6,3.694,7,1.627,8,1.65,9,3.648,10,2.129,11,3.648,12,3.183,13,0.333,14,1.111,15,3.146,16,2.153,17,5.109,18,0.624,19,3.126,20,4.022,21,3.672,22,3.672,23,0.424,24,3.076,25,2.565,26,0.775,27,3.672,28,1.423,29,0.031,30,0.493,31,0.993,32,1.423,33,2.498,34,3.076,35,3.076,36,3.076,37,3.076,38,2.498,39,0.743,40,2.498,41,3.076,42,2.498,43,0.939,44,3.076,45,2.498,46,0.283,47,1.627,48,2.093,49,0.416,50,3.183,51,2.615,52,2.955,53,3.648,54,3.648,55,3.648,56,3.648,57,2.437,58,2.093,59,2.093,60,1.467,61,2.348,62,2.093,63,1.627,64,1.627,65,2.327,66,1.796,67,2.391,68,2.093,69,2.704,70,2.093,71,2.093,72,1.826,73,2.093,74,2.093,75,1.335,76,1.034,77,3.076,78,2.093,79,1.343,80,1.627,81,2.19,82,2.093,83,2.093,84,2.093,85,2.093,86,0.949,87,2.093,88,2.093,89,2.093,90,2.093,91,1.826,92,1.826,93,2.093,94,3.076,95,2.093,96,1.221,97,1.034,98,2.093,99,1.627,100,1.027,101,3.648,102,2.093,103,2.093,104,2.093,105,3.076,106,2.093,107,3.648,108,2.093,109,2.093,110,2.093,111,2.093,112,1.539,113,2.093,114,2.093,115,2.093,116,3.076,117,2.093,118,2.093,119,2.093,120,3.076,121,2.093,122,2.093,123,2.093,124,0.011,125,0.017,126,0.011]],["title/components/AppComponent.html",[127,0.045,128,0.605]],["body/components/AppComponent.html",[0,0.071,3,0.342,4,0.304,5,0.304,13,0.232,14,1.274,25,1.743,26,0.591,29,0.03,30,0.477,31,0.782,46,0.342,49,0.477,69,2.059,96,2.059,112,1.488,124,0.014,125,0.019,126,0.014,127,0.067,128,0.973,129,1.005,130,0.782,131,0.782,132,0.782,133,0.782,134,2.534,135,0.782,136,1.665,137,1.417,138,2.742,139,1.089,140,4.845,141,1.089,142,4.211,143,4.845,144,4.845,145,1.178,146,1.089,147,4.211,148,4.211,149,4.211,150,4.211,151,4.211,152,4.211,153,4.211,154,4.211,155,4.211,156,4.211,157,4.211,158,4.211,159,4.211,160,4.211,161,4.211,162,4.211,163,4.211,164,4.211,165,4.211,166,4.211,167,4.211,168,4.211,169,4.211,170,4.211,171,4.211,172,4.211,173,4.211,174,4.211,175,4.211,176,4.211,177,4.211,178,4.211,179,4.211,180,4.211,181,4.211,182,4.211,183,4.211,184,4.211,185,4.211,186,4.211,187,4.211,188,4.211,189,4.211,190,4.211,191,4.211,192,1.892,193,4.211,194,4.211,195,4.211,196,4.211,197,4.211,198,4.211,199,4.211,200,4.211,201,5.239,202,4.211,203,4.211,204,4.211,205,4.211,206,4.211,207,4.211,208,4.211,209,4.211,210,4.211,211,4.211,212,4.211,213,4.211,214,3.025,215,3.528,216,3.025,217,0.612,218,3.025,219,3.025,220,0.989,221,1.479,222,1.777,223,1.252,224,1.252,225,1.479,226,1.479,227,0.666,228,1.089,229,1.005,230,0.782,231,1.355,232,0.782,233,0.782,234,0.562,235,0.612,236,0.782,237,0.514,238,0.782,239,0.562,240,1.253,241,0.562,242,0.722,243,0.562,244,0.782,245,0.514,246,0.782,247,0.562,248,0.666,249,0.782,250,0.562,251,0.782,252,0.562,253,0.782,254,0.514,255,0.782,256,0.562,257,0.722,258,0.562,259,0.782,260,0.562,261,0.782,262,0.562,263,0.612,264,0.782,265,0.782]],["title/modules/AppModule.html",[266,2.122,267,2.122]],["body/modules/AppModule.html",[0,0.074,3,0.357,4,0.317,5,0.317,29,0.031,46,0.738,49,0.491,124,0.014,125,0.02,126,0.014,128,1.17,137,0.694,217,0.639,227,0.694,234,1.073,235,0.639,237,0.981,239,1.073,241,1.073,242,0.753,243,1.073,245,0.981,247,1.073,248,0.694,250,1.073,252,1.073,254,0.981,256,1.073,257,0.753,258,1.073,260,1.073,262,1.073,266,2.055,267,4.371,268,1.854,269,2.055,270,4.151,271,4.151,272,3.633,273,2.306,274,2.643,275,2.643,276,2.643,277,2.643,278,3.395,279,3.633,280,2.643,281,2.055,282,3.155,283,3.633,284,4.336,285,2.643,286,2.055,287,3.633,288,4.336,289,2.643,290,3.155,291,3.155,292,2.306,293,4.954,294,2.643,295,3.155,296,2.643,297,2.306,298,3.155,299,3.155,300,2.306,301,2.306,302,3.155,303,3.155,304,2.643,305,3.155,306,3.155,307,2.306,308,3.155]],["title/classes/AppPage.html",[0,0.077,309,2.382]],["body/classes/AppPage.html",[0,0.109,2,2.086,3,0.526,4,0.467,5,0.467,13,0.355,18,0.944,26,0.78,29,0.03,39,0.86,46,0.526,49,0.526,57,2.302,124,0.021,125,0.025,126,0.021,138,3.023,229,1.108,286,3.023,309,4.064,310,3.889,311,6.404,312,6.17,313,6.17,314,4.642,315,6.17,316,4.642,317,3.889,318,4.642,319,4.642,320,1.774,321,4.642]],["title/modules/AppRoutingModule.html",[266,2.122,278,1.914]],["body/modules/AppRoutingModule.html",[0,0.105,3,0.507,4,0.45,5,0.45,29,0.031,46,0.707,49,0.507,124,0.02,125,0.025,126,0.02,127,0.087,217,0.906,237,0.924,245,0.924,248,0.985,254,1.035,268,2.63,273,3.273,278,3.196,283,3.751,287,4.558,294,3.751,296,3.751,304,3.751,322,4.477,323,4.477,324,3.816,325,5.44,326,3.751,327,4.477,328,4.642,329,4.558,330,2.63,331,4.558,332,4.477,333,4.477,334,4.477,335,4.477]],["title/components/CreateTrackComponent.html",[127,0.045,234,0.605]],["body/components/CreateTrackComponent.html",[0,0.075,3,0.362,4,0.321,5,0.321,10,1.563,13,0.245,18,0.743,23,0.847,26,0.752,29,0.03,30,0.495,31,0.593,39,0.677,43,0.911,46,0.362,49,0.495,79,0.894,100,1.224,124,0.015,125,0.02,126,0.015,127,0.069,128,0.593,129,1.044,130,0.826,131,0.826,132,0.826,133,0.826,135,0.826,136,1.677,137,1.427,139,1.131,141,1.131,217,0.647,222,1.877,223,2.065,224,1.323,225,1.563,227,0.703,228,1.131,229,1.044,230,0.826,231,1.387,232,0.826,233,0.826,234,0.996,235,1.268,236,0.826,237,0.543,238,0.826,239,0.593,240,1.29,241,0.593,242,0.763,243,0.593,244,0.826,245,0.543,246,0.826,247,0.593,248,0.703,249,0.826,250,0.593,251,0.826,252,0.593,253,0.826,254,0.543,255,0.826,256,0.593,257,0.763,258,0.593,259,0.826,260,0.593,261,0.826,262,0.593,263,1.009,264,0.826,265,0.826,297,4.106,320,1.672,336,4.706,337,2.677,338,1.224,339,1.395,340,4.178,341,3.664,342,5.363,343,1.5,344,3.197,345,4.374,346,3.92,347,3.195,348,3.195,349,3.197,350,3.195,351,4.374,352,3.197,353,4.374,354,4.374,355,3.195,356,5.617,357,2.336,358,2.747,359,1.877,360,1.436,361,2.139,362,1.708,363,3.197,364,2.848,365,1.877,366,1.877,367,2.081,368,2.57,369,2.081,370,1.563,371,2.336,372,2.848,373,2.081,374,2.139,375,1.877,376,4.374,377,4.374,378,2.677,379,2.081,380,1.436,381,2.439,382,1.877,383,3.195,384,3.197,385,2.57,386,1.877,387,2.336,388,2.677]],["title/components/DashboardComponent.html",[127,0.045,237,0.553]],["body/components/DashboardComponent.html",[0,0.078,3,0.373,4,0.332,5,0.332,13,0.252,18,0.759,23,0.861,26,0.627,29,0.03,30,0.506,39,0.51,43,0.759,46,0.373,49,0.506,76,1.365,100,1.25,124,0.015,125,0.02,126,0.015,127,0.07,128,0.612,129,1.067,130,0.853,131,0.853,132,0.853,133,0.853,135,0.853,136,1.683,137,1.432,139,1.156,141,1.156,217,0.667,220,1.078,221,1.613,223,2.098,224,2.098,225,2.657,226,1.613,227,0.726,228,1.156,229,1.067,230,0.853,231,1.405,232,0.853,233,0.853,234,0.612,235,0.667,236,0.853,237,0.923,238,0.853,239,0.612,240,1.311,241,0.612,242,0.787,243,0.612,244,0.853,245,0.56,246,0.853,247,0.612,248,0.726,249,0.853,250,0.612,251,0.853,252,0.612,253,0.853,254,0.56,255,0.853,256,0.612,257,0.787,258,0.612,259,0.853,260,0.612,261,0.853,262,0.612,263,0.667,264,0.853,265,0.853,320,1.708,331,3.744,338,1.25,339,1.418,343,1.52,358,2.479,359,1.937,360,2.008,361,1.613,362,2.388,364,2.147,365,1.937,366,1.937,369,2.147,370,1.613,374,2.185,380,2.008,381,1.613,389,2.763,390,5.069,391,4.469,392,3.298,393,3.298,394,4.469,395,4.469,396,4.469,397,4.469,398,5.434,399,5.434,400,4.469,401,4.469,402,4.469,403,3.744,404,4.469,405,4.469,406,3.744,407,4.469,408,4.469,409,2.763,410,2.411,411,3.298,412,4.469,413,3.298,414,3.298,415,2.91,416,2.91,417,2.411,418,2.147,419,2.147,420,2.147,421,1.762,422,2.411,423,2.388,424,1.937,425,2.411,426,3.744,427,2.411,428,3.267,429,2.763,430,4.469]],["title/components/ExportMenuComponent.html",[127,0.045,239,0.605]],["body/components/ExportMenuComponent.html",[0,0.089,3,0.426,4,0.378,5,0.378,13,0.288,18,0.828,23,0.919,26,0.684,29,0.03,30,0.552,39,0.582,43,0.828,46,0.426,49,0.718,75,2.011,124,0.017,125,0.022,126,0.017,127,0.075,128,0.699,129,1.164,130,0.973,131,0.973,132,0.973,133,0.973,135,0.973,136,1.707,137,1.453,139,1.261,141,1.261,217,0.762,220,1.23,227,0.828,228,1.261,229,1.164,230,0.973,231,1.48,232,0.973,233,0.973,234,0.699,235,0.762,236,0.973,237,0.639,238,0.973,239,1.063,240,1.399,241,0.699,242,0.898,243,0.699,244,0.973,245,0.639,246,0.973,247,0.699,248,0.828,249,0.973,250,0.699,251,0.973,252,0.699,253,0.973,254,0.639,255,0.973,256,0.699,257,0.898,258,0.699,259,0.973,260,0.699,261,0.973,262,0.699,263,0.762,264,0.973,265,0.973,301,3.956,338,1.365,339,1.514,343,1.602,431,4.534,432,2.451,433,3.566,434,3.956,435,3.566,436,3.153,437,2.751,438,2.451]],["title/components/MainMenuComponent.html",[127,0.045,241,0.605]],["body/components/MainMenuComponent.html",[0,0.059,3,0.283,4,0.251,5,0.251,10,2.128,13,0.409,16,1.806,18,0.623,23,0.739,26,0.673,28,0.816,29,0.03,30,0.493,31,0.681,32,0.816,39,0.568,43,0.815,46,0.283,49,0.415,76,1.519,96,1.22,100,1.72,112,1.695,124,0.011,125,0.017,126,0.011,127,0.061,128,0.463,129,0.876,130,0.645,131,0.645,132,0.645,133,0.645,135,0.645,136,1.622,137,1.381,139,0.949,141,0.949,145,0.698,146,0.645,192,1.121,217,0.505,220,0.816,221,1.22,223,2.288,224,1.986,225,3.084,226,2.5,227,0.549,228,0.949,229,0.876,230,0.645,231,1.241,232,0.645,233,0.645,234,0.463,235,0.505,236,0.645,237,0.424,238,0.645,239,0.463,240,1.125,241,0.891,242,1.354,243,0.463,244,0.645,245,0.424,246,0.645,247,0.463,248,0.549,249,0.645,250,0.463,251,0.645,252,0.463,253,0.645,254,0.424,255,0.645,256,0.463,257,0.596,258,0.463,259,0.645,260,0.463,261,0.645,262,0.463,263,0.505,264,0.645,265,0.645,292,3.737,320,1.954,338,1.026,339,1.217,343,1.342,352,3.908,359,1.466,360,1.955,361,1.794,363,2.682,364,2.389,370,1.22,372,3.481,373,1.625,374,2.128,375,2.557,378,4.283,379,2.389,380,2.402,381,2.614,386,2.156,387,1.824,406,3.074,410,1.824,415,1.625,416,1.625,417,1.824,418,1.625,419,1.625,421,3.093,423,3.145,427,1.824,428,2.682,429,2.09,432,1.625,433,3.507,434,3.181,435,2.682,437,2.682,439,4.283,440,3.669,441,2.682,442,5.526,443,3.669,444,2.495,445,3.669,446,2.495,447,2.682,448,2.495,449,4.02,450,4.02,451,3.669,452,3.669,453,4.351,454,2.495,455,2.495,456,4.351,457,2.495,458,3.669,459,2.09,460,3.669,461,1.625,462,3.074,463,3.669,464,2.389,465,5.346,466,1.466,467,2.09,468,4.351,469,5.112,470,1.824,471,4.93,472,1.824,473,1.824,474,1.466,475,2.495,476,2.09,477,2.495,478,2.09,479,2.495,480,2.495,481,4.351,482,1.824,483,2.495,484,3.074,485,2.09,486,2.682,487,2.495,488,1.824,489,2.495,490,2.495,491,2.495,492,2.495,493,2.495,494,2.495,495,2.495,496,2.495,497,2.495,498,1.466,499,1.625,500,2.495]],["title/components/MeasureComponent.html",[127,0.045,243,0.605]],["body/components/MeasureComponent.html",[0,0.091,3,0.436,4,0.387,5,0.387,13,0.295,18,0.841,23,0.929,26,0.695,29,0.03,30,0.561,39,0.596,43,0.841,46,0.436,49,0.561,124,0.018,125,0.023,126,0.018,127,0.076,128,0.715,129,1.182,130,0.996,131,0.996,132,0.996,133,0.996,135,0.996,136,1.712,137,1.456,139,1.281,141,1.281,217,0.78,227,0.848,228,1.281,229,1.182,230,0.996,231,1.494,232,0.996,233,0.996,234,0.715,235,0.78,236,0.996,237,0.654,238,0.996,239,0.715,240,1.415,241,0.715,242,0.92,243,1.073,244,0.996,245,0.654,246,0.996,247,0.715,248,0.848,249,0.996,250,0.715,251,0.996,252,0.715,253,0.996,254,0.654,255,0.996,256,0.715,257,0.92,258,0.715,259,0.996,260,0.715,261,0.996,262,0.715,263,0.78,264,0.996,265,0.996,338,1.385,339,1.531,343,1.616,501,3.228,502,3.394,503,5.473,504,4.952,505,3.853,506,3.853,507,4.149]],["title/components/MetronomeComponent.html",[127,0.045,245,0.553]],["body/components/MetronomeComponent.html",[0,0.061,3,0.296,4,0.262,5,0.262,8,1.173,13,0.2,14,1.147,16,1.877,18,0.644,23,0.443,26,0.762,28,0.853,29,0.031,30,0.635,31,0.829,32,0.853,39,0.758,43,0.832,46,0.506,49,0.429,51,1.276,57,1.57,61,1.276,66,1.854,79,0.73,81,0.922,100,0.73,124,0.012,125,0.017,126,0.012,127,0.062,128,0.485,129,0.905,130,0.675,131,0.675,132,0.675,133,0.675,135,0.675,136,1.633,137,1.39,139,0.98,141,0.98,145,0.73,146,1.267,217,0.528,225,1.854,226,1.854,227,0.574,228,0.98,229,0.905,230,0.675,231,1.267,232,0.675,233,0.675,234,0.485,235,0.528,236,0.675,237,0.443,238,0.675,239,0.485,240,1.155,241,0.485,242,0.623,243,0.485,244,0.675,245,0.832,246,0.675,247,0.485,248,1.418,249,0.675,250,0.485,251,0.675,252,0.485,253,0.675,254,0.443,255,0.675,256,0.485,257,0.623,258,0.485,259,0.675,260,0.485,261,0.675,262,0.485,263,0.528,264,0.675,265,0.675,281,1.7,320,1.449,338,1.061,339,1.249,343,0.73,368,1.533,372,2.469,373,1.7,375,1.533,379,1.7,380,1.704,381,2.184,382,1.533,384,2.772,385,3.439,386,2.228,388,4.551,459,3.742,498,2.88,508,2.187,509,4.466,510,3.792,511,4.904,512,4.466,513,4.902,514,3.792,515,4.107,516,2.61,517,4.902,518,2.469,519,3.792,520,3.792,521,3.792,522,3.792,523,3.792,524,2.61,525,2.772,526,4.107,527,3.177,528,3.177,529,3.792,530,2.61,531,3.177,532,2.61,533,3.792,534,3.177,535,2.61,536,2.61,537,1.276,538,1.7,539,2.187,540,2.187,541,2.61,542,2.61,543,2.61,544,2.61,545,2.61,546,4.902,547,2.61,548,4.466,549,2.187,550,2.61,551,2.61,552,2.61,553,2.61,554,3.792,555,2.61,556,2.61,557,2.61,558,3.177,559,4.902,560,2.61,561,5.431,562,2.61,563,4.551,564,2.61,565,5.206,566,3.792,567,3.792,568,2.61,569,3.792,570,3.177,571,2.61,572,2.61,573,2.61,574,2.61,575,2.61,576,2.61,577,2.61]],["title/components/MetronomeSoundComponent.html",[127,0.045,247,0.605]],["body/components/MetronomeSoundComponent.html",[0,0.048,3,0.231,4,0.205,5,0.205,8,0.915,13,0.156,14,0.952,16,1.029,18,0.535,23,0.346,25,1.593,26,0.767,28,0.666,29,0.031,30,0.436,31,0.958,32,0.666,39,0.67,43,0.929,46,0.49,49,0.357,51,0.996,52,2.057,61,2.42,66,1.54,75,1.089,79,1.384,81,1.749,91,2.302,96,0.996,97,0.843,100,1.53,112,1.749,124,0.009,125,0.014,126,0.009,127,0.085,128,0.378,129,0.752,130,0.527,131,0.527,132,0.527,133,0.527,135,0.527,136,1.57,137,1.336,139,0.814,141,0.814,145,1.211,146,1.12,192,2.224,217,0.412,220,0.666,227,0.448,228,0.814,229,0.752,230,0.527,231,1.12,232,0.527,233,0.527,234,0.378,235,0.412,236,0.527,237,0.346,238,0.527,239,0.378,240,0.995,241,0.378,242,0.486,243,0.378,244,0.527,245,0.346,246,0.527,247,0.804,248,1.386,249,0.527,250,0.378,251,0.527,252,0.378,253,0.527,254,0.346,255,0.527,256,0.378,257,0.486,258,0.378,259,0.527,260,0.378,261,0.527,262,0.378,263,0.412,264,0.527,265,0.527,307,4.085,330,3.635,338,0.881,339,1.077,343,0.57,438,1.327,441,2.302,447,2.302,464,1.327,476,2.638,498,2.544,502,1.85,515,3.225,518,3.36,531,1.707,537,2.675,538,1.327,539,1.707,578,4.682,579,1.707,580,3.849,581,3.849,582,3.149,583,5.33,584,3.149,585,4.33,586,4.33,587,4.33,588,5.16,589,2.849,590,2.314,591,2.037,592,3.149,593,3.149,594,3.149,595,4.146,596,5.47,597,4.949,598,5.33,599,5.47,600,4.583,601,2.638,602,2.037,603,2.302,604,2.037,605,3.149,606,4.681,607,2.037,608,2.638,609,2.638,610,4.33,611,4.681,612,2.037,613,3.149,614,3.149,615,3.922,616,3.149,617,2.638,618,2.037,619,2.037,620,3.149,621,2.037,622,2.037,623,3.849,624,3.149,625,3.849,626,1.489,627,2.037,628,2.037,629,1.707,630,3.149,631,2.037,632,2.037,633,2.037,634,2.037,635,3.849,636,3.149,637,2.037,638,2.037,639,2.037,640,2.037,641,3.149,642,2.037,643,2.037,644,2.037,645,2.037,646,3.149,647,3.149,648,3.149,649,2.037,650,3.149,651,2.037,652,2.037,653,1.707,654,1.707,655,1.707,656,1.707,657,1.707,658,1.707,659,2.037,660,2.037,661,2.037,662,2.037]],["title/classes/Note.html",[0,0.077,86,0.842]],["body/classes/Note.html",[0,0.121,2,1.521,3,0.383,4,0.34,5,0.34,8,1.521,13,0.259,14,1.376,15,3.407,16,2.153,18,0.773,23,0.575,25,1.883,26,0.88,28,1.679,29,0.031,30,0.582,31,1.165,32,1.679,39,0.887,43,0.933,46,0.515,49,0.383,57,2.274,60,2.673,61,2.225,63,3.732,64,3.732,86,1.42,97,1.883,124,0.015,125,0.021,126,0.015,145,0.947,146,0.876,663,2.837,664,4.549,665,5.201,666,5.138,667,4.407,668,5.493,669,5.493,670,5.493,671,4.549,672,4.549,673,4.549,674,4.549,675,3.386,676,3.386,677,3.386,678,3.386,679,3.386,680,3.386,681,4.549,682,3.386,683,4.549,684,3.386,685,3.386,686,3.386,687,5.138,688,5.138,689,2.837,690,2.837,691,3.386,692,3.386,693,3.386,694,2.837,695,3.386,696,3.386,697,3.386,698,3.386,699,3.386,700,3.386]],["title/components/NoteComponent.html",[127,0.045,250,0.605]],["body/components/NoteComponent.html",[0,0.091,3,0.436,4,0.387,5,0.387,13,0.295,18,0.841,23,0.929,26,0.695,29,0.03,30,0.561,39,0.596,43,0.841,46,0.436,49,0.561,86,1.494,124,0.018,125,0.023,126,0.018,127,0.076,128,0.715,129,1.182,130,0.996,131,0.996,132,0.996,133,0.996,135,0.996,136,1.712,137,1.456,139,1.281,141,1.281,217,0.78,227,0.848,228,1.281,229,1.182,230,0.996,231,1.494,232,0.996,233,0.996,234,0.715,235,0.78,236,0.996,237,0.654,238,0.996,239,0.715,240,1.415,241,0.715,242,0.92,243,0.715,244,0.996,245,0.654,246,0.996,247,0.715,248,0.848,249,0.996,250,1.073,251,0.996,252,0.715,253,0.996,254,0.654,255,0.996,256,0.715,257,0.92,258,0.715,259,0.996,260,0.715,261,0.996,262,0.715,263,0.78,264,0.996,265,0.996,338,1.385,339,1.531,343,1.616,507,4.149,701,3.228,702,5.473,703,4.952,704,3.853,705,3.853]],["title/classes/NoteRepresentation.html",[0,0.077,65,1.741]],["body/classes/NoteRepresentation.html",[0,0.104,1,3.844,2,0.955,3,0.241,4,0.214,5,0.214,6,3.885,7,1.384,8,1.461,9,3.311,10,1.933,11,3.311,12,2.889,13,0.385,14,0.984,15,3.117,16,2.124,17,4.735,18,0.552,19,1.384,20,1.78,23,0.361,24,1.78,25,2.38,26,0.828,28,1.712,29,0.031,30,0.593,31,1.05,32,1.712,34,1.78,35,1.78,36,1.78,37,1.78,39,0.874,41,1.78,43,0.941,44,1.78,46,0.241,47,1.384,48,1.78,49,0.368,50,3.829,51,2.461,52,2.8,53,3.311,54,3.311,55,3.311,56,3.311,57,2.34,58,2.725,59,2.725,60,1.911,61,2.642,62,2.725,63,2.118,64,2.118,65,2.69,66,1.591,67,2.118,68,1.78,69,3.029,70,1.78,71,1.78,72,1.553,73,2.725,74,2.725,75,1.739,76,1.347,77,3.709,78,3.311,79,1.465,80,2.118,81,2.253,82,2.725,83,2.725,84,2.725,85,2.725,86,1.145,87,2.725,88,2.725,89,1.78,90,2.725,91,2.378,92,2.378,93,2.725,94,3.709,95,2.725,96,1.591,97,1.347,98,2.725,99,1.384,100,0.91,101,3.311,102,1.78,103,3.709,104,2.725,105,2.725,106,1.78,107,3.311,108,1.78,109,2.725,110,1.78,111,1.78,112,1.396,113,2.725,114,2.725,115,1.78,116,2.725,117,1.78,118,1.78,119,3.709,120,2.725,121,1.78,122,3.709,123,1.78,124,0.01,125,0.015,126,0.01,145,0.91,146,0.841,706,3.253,707,3.253,708,3.253,709,3.952,710,3.253,711,3.253,712,3.253,713,3.253,714,2.125,715,2.125,716,3.952,717,2.125,718,2.125,719,2.125,720,2.125,721,2.125,722,2.125,723,2.125,724,2.125,725,2.125,726,2.125,727,2.125]],["title/components/PlaybarComponent.html",[127,0.045,252,0.605]],["body/components/PlaybarComponent.html",[0,0.088,3,0.421,4,0.374,5,0.374,13,0.285,18,0.822,23,0.914,26,0.679,29,0.03,30,0.548,39,0.575,43,0.822,46,0.421,49,0.548,75,1.988,124,0.017,125,0.022,126,0.017,127,0.075,128,0.691,129,1.156,130,0.962,131,0.962,132,0.962,133,0.962,135,0.962,136,1.705,137,1.451,139,1.252,141,1.252,217,0.753,220,1.216,222,2.186,223,1.54,224,1.54,227,0.819,228,1.252,229,1.156,230,0.962,231,1.474,232,0.962,233,0.962,234,0.691,235,0.753,236,0.962,237,0.632,238,0.962,239,0.691,240,1.392,241,0.691,242,0.888,243,0.691,244,0.962,245,0.632,246,0.962,247,0.691,248,0.819,249,0.962,250,0.691,251,0.962,252,1.059,253,0.962,254,0.632,255,0.962,256,0.691,257,0.888,258,0.691,259,0.962,260,0.691,261,0.962,262,0.691,263,0.753,264,0.962,265,0.962,320,1.422,338,1.354,339,1.506,343,1.595,358,2.368,360,1.671,386,2.186,416,2.422,420,2.422,438,2.422,461,3.153,499,2.422,728,3.117,729,4.841,730,5.382,731,4.841,732,3.72,733,3.72,734,3.72,735,2.719,736,2.186,737,4.841,738,3.117,739,3.72,740,3.72]],["title/components/RhythmComponent.html",[127,0.045,254,0.553]],["body/components/RhythmComponent.html",[0,0.04,3,0.193,4,0.171,5,0.171,8,1.229,10,1.338,13,0.329,14,0.828,16,1.964,18,0.465,23,0.289,25,1.995,26,0.837,28,1.575,29,0.031,30,0.585,31,1.09,32,1.575,39,0.821,43,0.977,46,0.486,49,0.31,51,0.834,66,1.338,76,0.706,79,1.61,80,3.263,81,1.915,86,0.441,92,2,97,0.706,99,1.11,100,1.283,112,1.621,124,0.008,125,0.012,126,0.008,127,0.048,128,0.317,129,0.653,130,0.441,131,0.441,132,0.441,133,0.441,135,0.441,136,1.518,137,1.303,139,0.708,141,0.708,145,1.484,146,1.371,192,0.766,217,0.345,220,0.557,221,0.834,222,1.001,223,1.779,224,2.285,225,2.45,226,2.101,227,0.375,228,0.708,229,0.653,230,0.441,231,1.014,232,0.441,233,0.441,234,0.317,235,0.345,236,0.441,237,0.289,238,0.441,239,0.317,240,0.886,241,0.317,242,0.407,243,0.317,244,0.441,245,0.289,246,0.441,247,0.317,248,0.375,249,0.441,250,0.317,251,0.441,252,0.317,253,0.441,254,0.666,255,0.441,256,0.317,257,0.407,258,0.317,259,0.441,260,0.317,261,0.441,262,0.317,263,1.177,264,0.441,265,0.441,320,1.31,329,2.292,330,1.001,338,0.765,339,0.959,343,1.098,352,2,358,2.243,360,1.54,361,1.338,362,1.462,367,1.782,368,1.607,370,1.338,374,1.338,375,1.001,380,2.061,385,1.001,409,1.428,410,1.246,415,1.782,416,1.782,417,1.246,418,1.782,419,1.782,420,1.11,421,1.462,423,2.296,424,1.001,426,1.428,449,2.292,450,2.292,461,1.11,462,1.428,464,2.798,466,1.607,467,1.428,472,1.246,473,1.246,474,1.607,478,1.428,488,2,498,2.305,499,2.987,502,1.607,518,2.232,537,2.594,538,1.11,589,2.576,590,2.296,595,2.292,600,3.843,601,2.292,603,2,608,1.428,617,1.428,626,1.246,629,3.287,653,1.428,654,1.428,655,1.428,656,1.428,657,1.428,658,1.428,665,2.292,667,1.246,735,1.246,736,1.001,738,1.428,741,1.428,742,3.428,743,2.736,744,3.428,745,3.428,746,3.428,747,3.428,748,3.428,749,3.428,750,3.923,751,5.304,752,2.736,753,2.736,754,2.736,755,2.736,756,2.736,757,2.736,758,2.736,759,3.923,760,2.736,761,1.705,762,2.292,763,2.736,764,4.819,765,1.705,766,2.736,767,2.736,768,1.705,769,4.586,770,2.736,771,2.736,772,4.541,773,2.736,774,2.736,775,2.736,776,2.736,777,2.736,778,2.736,779,1.705,780,2.736,781,1.705,782,2.736,783,1.705,784,1.705,785,1.705,786,1.428,787,1.428,788,1.246,789,1.246,790,2.292,791,1.705,792,1.705,793,2.736,794,1.705,795,1.705,796,5.816,797,1.705,798,1.705,799,1.705,800,1.705,801,1.705,802,1.705,803,1.705,804,1.705,805,1.705,806,1.705,807,1.428,808,1.428,809,1.705,810,1.705,811,1.705,812,2.736,813,1.705,814,1.705,815,1.705,816,1.705,817,1.705,818,1.705,819,2.736,820,1.705,821,2.736,822,1.705,823,1.705,824,1.705,825,1.705,826,1.705,827,1.705,828,1.705,829,1.428,830,2.736,831,2.292,832,1.705,833,2.736,834,1.705,835,1.705,836,3.923,837,3.923,838,1.705,839,3.428,840,3.428,841,1.428,842,2.872,843,2.736,844,1.705,845,1.705,846,1.705,847,1.705,848,1.705,849,1.705,850,1.705,851,1.705,852,2.292,853,2.736,854,2.736,855,1.705,856,1.705,857,1.705,858,1.705,859,1.705,860,1.428,861,1.705,862,1.428,863,1.428]],["title/components/SaveMenuComponent.html",[127,0.045,256,0.605]],["body/components/SaveMenuComponent.html",[0,0.089,3,0.426,4,0.378,5,0.378,13,0.288,18,0.828,23,0.919,26,0.684,29,0.03,30,0.552,39,0.582,43,0.828,46,0.426,49,0.552,75,2.011,124,0.017,125,0.022,126,0.017,127,0.075,128,0.699,129,1.164,130,0.973,131,0.973,132,0.973,133,0.973,135,0.973,136,1.707,137,1.453,139,1.261,141,1.261,217,0.762,220,1.23,227,0.828,228,1.261,229,1.164,230,0.973,231,1.48,232,0.973,233,0.973,234,0.699,235,0.762,236,0.973,237,0.639,238,0.973,239,0.699,240,1.399,241,0.699,242,0.898,243,0.699,244,0.973,245,0.639,246,0.973,247,0.699,248,0.828,249,0.973,250,0.699,251,0.973,252,0.699,253,0.973,254,0.639,255,0.973,256,1.063,257,1.497,258,0.699,259,0.973,260,0.699,261,0.973,262,0.699,263,0.762,264,0.973,265,0.973,300,3.956,338,1.365,339,1.514,343,1.602,432,2.451,433,3.566,434,3.956,435,3.566,436,3.153,437,2.751,438,2.451,864,4.534]],["title/classes/Signature.html",[0,0.077,589,1.741]],["body/classes/Signature.html",[0,0.097,2,1.017,3,0.256,4,0.228,5,0.228,8,2.055,10,3.002,13,0.173,14,1.032,15,3.013,16,2.093,18,0.579,23,0.384,25,1.413,26,0.829,28,1.604,29,0.031,30,0.584,31,0.994,32,1.604,39,0.934,43,0.833,46,0.256,49,0.256,51,2.236,52,3.441,57,2.216,61,1.669,69,2.236,79,1.279,81,1.947,86,1.334,97,0.937,112,1.451,124,0.01,125,0.016,126,0.01,145,0.955,146,1.486,235,0.691,328,3.002,382,1.33,474,3.782,502,2.005,518,2.222,525,3.77,589,3.386,590,1.21,609,2.859,865,1.896,866,2.859,867,4.573,868,4.573,869,4.573,870,4.573,871,4.573,872,3.412,873,3.412,874,3.412,875,3.412,876,3.412,877,3.691,878,3.412,879,2.494,880,2.494,881,3.412,882,2.859,883,2.494,884,2.859,885,2.263,886,3.412,887,2.263,888,3.412,889,2.263,890,3.77,891,2.263,892,2.263,893,2.263,894,3.412,895,3.412,896,2.263,897,2.859,898,3.412,899,3.412,900,3.412,901,2.263,902,3.412,903,2.263,904,3.412,905,2.263,906,3.412,907,2.859,908,1.474,909,1.896,910,4.906,911,5.51,912,3.412,913,4.573,914,2.263,915,4.906,916,3.412,917,3.412,918,3.412,919,2.263,920,2.859,921,4.107,922,4.107,923,2.263,924,2.859,925,2.263,926,2.859,927,2.263]],["title/components/SignatureComponent.html",[127,0.045,258,0.605]],["body/components/SignatureComponent.html",[0,0.077,3,0.371,4,0.33,5,0.33,13,0.251,14,1.346,23,0.557,26,0.46,29,0.031,30,0.504,31,0.609,43,0.557,46,0.572,49,0.504,52,1.752,61,1.603,66,2.177,79,1.245,86,0.848,100,1.414,124,0.015,125,0.02,126,0.015,127,0.079,128,0.609,129,1.063,130,0.848,131,0.848,132,0.848,133,0.848,135,0.848,136,1.682,137,1.431,138,2.135,139,1.151,141,1.151,145,0.917,146,0.848,217,0.664,220,1.072,221,1.603,223,1.357,224,1.843,227,0.721,228,1.151,229,1.063,230,0.848,231,1.402,232,0.848,233,0.848,234,0.609,235,0.664,236,0.848,237,0.557,238,0.848,239,0.609,240,1.307,241,0.609,242,0.783,243,0.609,244,0.848,245,0.557,246,0.848,247,0.609,248,0.721,249,0.848,250,0.609,251,0.848,252,0.609,253,0.848,254,0.557,255,0.848,256,0.609,257,0.783,258,1.007,259,0.848,260,0.609,261,0.848,262,0.609,263,0.664,264,0.848,265,0.848,320,1.253,338,1.245,339,1.414,343,0.917,357,2.397,358,2.177,359,1.926,360,1.473,361,2.471,362,1.752,365,1.926,366,1.926,367,2.135,368,1.926,369,2.135,370,2.177,371,2.397,374,2.177,381,1.603,418,2.135,419,2.135,421,1.752,422,2.397,423,1.752,424,1.926,425,2.397,466,1.926,474,1.926,486,2.397,502,1.926,540,2.747,589,3.389,626,2.397,735,2.397,736,2.615,877,1.926,880,3.254,890,3.254,908,2.135,928,2.747,929,5.054,930,4.451,931,4.451,932,3.278,933,2.747,934,3.278,935,4.451,936,4.451,937,3.278,938,3.254,939,3.278]],["title/classes/Tempo.html",[0,0.077,537,1.593]],["body/classes/Tempo.html",[0,0.104,2,1.154,3,0.291,4,0.258,5,0.258,8,2.186,13,0.197,14,1.134,15,2.887,16,2.02,18,0.636,23,0.436,25,1.552,26,0.831,28,1.446,29,0.031,30,0.551,31,0.961,32,1.446,39,0.939,43,0.636,46,0.291,49,0.291,51,2.379,52,3.449,57,2.309,69,2.379,79,1.511,81,1.908,86,1.629,97,1.063,100,0.719,112,1.324,124,0.012,125,0.017,126,0.012,145,1.048,146,0.969,235,0.759,328,3.235,382,1.509,511,5.249,525,3.556,526,4.076,527,3.14,528,3.14,534,3.14,537,3.165,590,1.373,866,3.14,877,3.601,879,2.74,880,2.74,882,3.14,883,2.74,890,4.262,908,1.673,909,2.152,920,3.14,924,3.14,926,3.14,940,2.152,941,4.865,942,4.865,943,4.865,944,4.865,945,4.865,946,3.14,947,3.748,948,3.748,949,3.748,950,2.568,951,3.748,952,2.568,953,2.568,954,2.568,955,2.568,956,2.568,957,3.748,958,2.568,959,5.577,960,3.748,961,2.568,962,2.568,963,6.003,964,2.568,965,5.173,966,2.568,967,4.425,968,3.748,969,4.425,970,2.568,971,2.568,972,2.568]],["title/components/TempoComponent.html",[127,0.045,260,0.605]],["body/components/TempoComponent.html",[0,0.076,3,0.365,4,0.324,5,0.324,13,0.247,14,1.332,18,0.748,23,0.548,26,0.755,29,0.031,30,0.499,31,0.818,39,0.681,43,0.851,46,0.568,49,0.499,66,1.578,76,2.075,79,1.402,81,1.556,86,0.834,100,1.402,124,0.015,125,0.02,126,0.015,127,0.07,128,0.599,129,1.051,130,0.834,131,0.834,132,0.834,133,0.834,135,0.834,136,1.679,137,1.429,138,2.102,139,1.139,141,1.139,145,0.903,146,0.834,217,0.653,220,1.055,221,1.578,223,1.336,224,1.336,227,0.71,228,1.139,229,1.051,230,0.834,231,1.392,232,0.834,233,0.834,234,0.599,235,0.653,236,0.834,237,0.548,238,0.834,239,0.599,240,1.296,241,0.599,242,0.77,243,0.599,244,0.834,245,0.548,246,0.834,247,0.599,248,0.71,249,0.834,250,0.599,251,0.834,252,0.599,253,0.834,254,0.548,255,0.834,256,0.599,257,0.77,258,0.599,259,0.834,260,1,261,0.834,262,0.599,263,0.653,264,0.834,265,0.834,320,1.233,338,1.232,339,1.402,343,1.507,344,3.219,346,3.937,349,3.219,357,2.359,358,1.578,360,1.45,361,2.451,362,1.725,365,1.896,366,1.896,367,2.102,368,1.896,369,2.102,370,2.154,371,2.359,374,2.154,380,1.45,381,1.578,421,1.725,422,2.359,423,1.725,424,1.896,425,3.219,466,1.896,537,3.069,538,2.102,603,3.219,736,2.587,877,1.896,908,2.102,938,2.359,946,4.512,973,2.704,974,5.013,975,4.404,976,5.013,977,3.227,978,3.227,979,3.227,980,3.227,981,4.404,982,4.404,983,3.227,984,3.227]],["title/classes/Track.html",[0,0.077,263,0.659]],["body/classes/Track.html",[0,0.064,2,1.219,3,0.307,4,0.273,5,0.273,13,0.208,14,1.179,15,3.279,16,2.146,18,0.662,23,0.461,26,0.899,28,1.897,29,0.031,30,0.657,31,1.158,32,1.897,39,0.949,43,1.004,46,0.307,49,0.307,57,2.189,60,3.409,67,3.584,69,2.933,79,0.759,80,1.767,81,1.378,86,1.649,99,2.539,100,1.586,112,1.945,124,0.012,125,0.018,126,0.012,145,1.091,146,1.008,192,2.242,263,0.789,667,2.851,772,3.825,788,4.32,790,4.181,985,2.273,986,4.751,987,4.565,988,4.565,989,3.899,990,4.565,991,3.899,992,4.181,993,4.991,994,3.899,995,3.899,996,4.991,997,4.991,998,3.899,999,3.899,1000,3.899,1001,3.899,1002,3.899,1003,2.713,1004,2.713,1005,2.713,1006,2.713,1007,2.713,1008,3.899,1009,4.181,1010,2.713,1011,2.713,1012,2.713,1013,3.899,1014,2.713,1015,2.713,1016,2.713,1017,3.899,1018,2.713,1019,3.899,1020,2.713,1021,2.713,1022,2.713,1023,3.899,1024,2.713,1025,2.713,1026,2.713,1027,3.899,1028,2.713,1029,3.899,1030,3.899,1031,4.565,1032,4.565,1033,3.899,1034,2.713]],["title/components/TrackComponent.html",[127,0.045,262,0.605]],["body/components/TrackComponent.html",[0,0.045,3,0.219,4,0.374,5,0.194,10,1.82,12,1.413,13,0.148,14,0.914,16,1.712,18,0.513,23,0.632,25,2.095,26,0.856,28,0.988,29,0.031,30,0.477,31,1.023,32,0.988,39,0.833,43,1.004,46,0.477,49,0.342,57,0.8,65,1.989,67,1.259,69,1.478,76,1.251,79,1.355,81,1.068,86,0.5,96,0.945,97,0.8,100,1.683,112,1.788,124,0.009,125,0.014,126,0.009,127,0.052,128,0.359,129,0.722,130,0.5,131,0.5,132,0.5,133,0.5,135,0.5,136,1.555,137,1.324,139,0.782,141,0.782,145,1.465,146,1.309,192,0.868,217,0.391,220,0.632,221,0.945,222,1.136,223,1.891,224,1.891,225,2.744,226,2.475,227,0.425,228,0.782,229,0.722,230,0.5,231,1.088,232,0.5,233,0.5,234,0.359,235,0.925,236,0.5,237,0.328,238,0.5,239,0.359,240,0.963,241,0.359,242,0.461,243,0.359,244,0.5,245,0.328,246,0.5,247,0.359,248,0.425,249,0.5,250,0.359,251,0.5,252,0.359,253,0.5,254,0.328,255,0.5,256,0.359,257,0.461,258,0.359,259,0.5,260,0.359,261,0.5,262,0.782,263,1.154,264,0.5,265,0.5,320,0.739,330,2.187,338,0.846,339,1.041,340,3.119,341,2.532,343,1.178,344,2.21,346,3.699,349,2.721,358,1.82,359,1.136,360,0.868,361,1.478,362,1.989,363,1.413,364,1.968,365,1.776,366,1.136,370,0.945,372,2.424,373,1.968,374,1.478,375,1.776,379,1.259,380,2.521,381,1.478,382,2.845,384,1.413,385,1.776,386,1.136,387,1.413,403,1.619,415,1.259,420,1.259,421,2.705,423,2.943,424,2.473,427,1.413,428,1.413,441,2.21,447,3.077,461,2.741,464,1.259,466,1.136,471,1.619,472,1.413,473,1.413,474,1.776,484,1.619,486,1.413,488,3.077,499,1.259,558,1.619,563,3.119,570,1.619,590,2.589,689,2.532,694,1.619,736,1.136,762,2.532,787,1.619,788,1.413,789,2.721,807,1.619,808,2.532,829,1.619,831,3.119,841,1.619,842,2.532,852,1.619,860,1.619,862,1.619,938,1.413,986,1.619,992,3.527,1009,3.827,1035,1.619,1036,3.722,1037,3.722,1038,3.119,1039,4.568,1040,4.209,1041,4.209,1042,3.023,1043,3.023,1044,3.722,1045,4.209,1046,3.722,1047,3.722,1048,3.722,1049,3.023,1050,1.933,1051,1.933,1052,1.933,1053,1.933,1054,1.933,1055,1.933,1056,1.933,1057,1.933,1058,1.933,1059,3.023,1060,1.933,1061,3.023,1062,1.933,1063,1.933,1064,1.933,1065,1.933,1066,1.933,1067,1.933,1068,3.023,1069,1.933,1070,1.933,1071,3.023,1072,1.933,1073,1.933,1074,1.933,1075,1.933,1076,1.933,1077,3.023,1078,3.023,1079,1.933,1080,1.933,1081,3.023,1082,1.933,1083,3.722,1084,1.933,1085,1.933,1086,1.933,1087,3.023,1088,1.933,1089,1.933,1090,1.933,1091,1.933,1092,3.023,1093,3.023,1094,3.722,1095,1.933,1096,4.209,1097,4.843,1098,1.933,1099,3.722,1100,3.722,1101,1.933,1102,1.933,1103,1.413,1104,1.933,1105,3.722,1106,1.933,1107,3.023,1108,1.933,1109,1.933,1110,1.933,1111,1.933,1112,1.933,1113,1.933,1114,1.933,1115,1.933,1116,1.933,1117,1.933,1118,1.933,1119,3.023,1120,1.933,1121,1.933]],["title/coverage.html",[1122,3.713]],["body/coverage.html",[0,0.143,1,2.294,5,0.354,6,3.042,7,3.042,19,2.294,29,0.031,31,0.654,47,3.042,65,1.883,79,0.986,86,0.911,100,1.849,124,0.016,125,0.021,126,0.016,127,0.091,128,0.654,134,2.952,226,2.285,234,0.654,237,0.598,239,0.654,241,0.654,243,0.654,245,0.598,247,0.654,250,0.654,252,0.654,254,0.598,256,0.654,258,0.654,260,0.654,262,0.654,263,0.713,292,2.575,297,2.575,300,2.575,301,2.575,307,2.575,309,2.575,310,2.952,336,2.952,337,2.952,385,2.07,389,2.952,431,2.952,432,3.413,439,2.952,470,2.575,482,2.575,501,2.952,508,2.952,537,1.723,549,2.952,578,2.952,579,2.952,589,1.883,663,2.952,701,2.952,728,2.952,741,2.952,786,4.865,864,2.952,865,2.952,928,2.952,940,2.952,973,2.952,985,2.952,1035,2.952,1103,2.575,1122,2.952,1123,3.523,1124,3.523,1125,3.523,1126,6.183,1127,3.523,1128,3.523,1129,3.523,1130,3.523,1131,3.523,1132,3.523,1133,3.523,1134,3.523,1135,4.671,1136,4.08,1137,4.245,1138,2.952,1139,6.257,1140,2.952,1141,2.952,1142,2.575,1143,2.952,1144,3.523,1145,3.523,1146,3.523,1147,3.523,1148,3.523,1149,3.523,1150,3.523,1151,3.523,1152,2.952,1153,5.581,1154,2.952,1155,3.914,1156,2.952,1157,2.952,1158,3.523,1159,3.523]],["title/dependencies.html",[269,2.549,1160,2.728]],["body/dependencies.html",[29,0.031,124,0.022,125,0.026,126,0.022,217,0.98,269,3.152,285,4.776,286,3.712,289,4.056,326,4.056,1161,4.841,1162,5.509,1163,4.841,1164,4.841,1165,4.841,1166,4.841,1167,4.841,1168,4.841,1169,4.841,1170,4.841,1171,4.841]],["title/miscellaneous/enumerations.html",[1172,1.226,1173,3.28]],["body/miscellaneous/enumerations.html",[13,0.178,16,1.985,29,0.031,30,0.563,31,0.648,60,2.456,63,2.272,64,2.272,76,2.057,86,1.685,96,1.14,112,1.233,124,0.011,125,0.016,126,0.011,146,1.661,192,1.567,330,2.049,380,1.567,470,1.704,482,1.704,485,2.922,498,3.064,615,3.502,690,3.502,877,2.049,884,2.922,907,4.369,1103,1.704,1136,1.704,1137,3.812,1142,1.704,1172,1.047,1173,1.953,1174,1.953,1175,1.953,1176,3.488,1177,2.331,1178,3.488,1179,1.953,1180,3.488,1181,2.331,1182,2.331,1183,2.331,1184,4.64,1185,4.969,1186,2.331,1187,4.969,1188,2.331,1189,4.969,1190,2.331,1191,2.331,1192,2.331,1193,3.488,1194,4.18,1195,4.18,1196,4.18,1197,4.18,1198,4.18,1199,5.215,1200,4.18,1201,4.18,1202,4.18,1203,4.18,1204,4.18,1205,4.18,1206,3.488,1207,3.488,1208,3.488,1209,4.18,1210,4.18,1211,4.18,1212,5.951,1213,4.18,1214,4.18,1215,4.18,1216,4.18,1217,4.18,1218,4.18,1219,4.18,1220,4.18,1221,4.18,1222,4.18,1223,3.488,1224,3.488,1225,3.488,1226,4.18,1227,3.488,1228,1.953,1229,3.488,1230,1.953,1231,3.488,1232,3.488,1233,3.488,1234,3.488,1235,2.331,1236,3.488,1237,2.331,1238,4.18,1239,2.331,1240,4.18,1241,2.331,1242,2.331,1243,2.331,1244,2.331,1245,2.331,1246,2.331,1247,2.331,1248,2.331,1249,2.331,1250,2.331,1251,2.331,1252,2.331,1253,2.331,1254,2.331,1255,2.331,1256,2.331,1257,2.331,1258,2.331,1259,2.331,1260,2.331,1261,2.331,1262,2.331,1263,2.331,1264,2.331,1265,2.331,1266,2.331,1267,2.331,1268,2.331,1269,2.331,1270,2.331,1271,2.331,1272,2.331,1273,2.331,1274,2.331,1275,2.331,1276,2.331,1277,2.331,1278,2.331,1279,2.331,1280,2.331,1281,2.331,1282,2.331,1283,2.331,1284,2.331,1285,2.331,1286,2.331,1287,2.331,1288,2.331,1289,2.331,1290,2.331,1291,2.331,1292,2.331,1293,2.331,1294,2.331,1295,2.331,1296,2.331,1297,2.331,1298,2.331,1299,2.331,1300,2.331,1301,2.331,1302,2.331,1303,2.331,1304,2.331,1305,2.331,1306,2.331,1307,2.331,1308,2.331,1309,2.331,1310,2.331,1311,2.331,1312,2.331,1313,2.331,1314,2.331,1315,2.331,1316,2.331,1317,2.331,1318,2.331,1319,2.331,1320,2.331,1321,2.331,1322,2.331,1323,2.331,1324,2.331,1325,2.331,1326,2.331,1327,2.331,1328,2.331,1329,2.331,1330,2.331,1331,2.331,1332,2.331,1333,2.331,1334,2.331,1335,2.331,1336,2.331,1337,2.331,1338,2.331,1339,2.331,1340,2.331,1341,2.331,1342,2.331,1343,2.331,1344,2.331,1345,2.331,1346,2.331,1347,2.331,1348,2.331,1349,2.331,1350,2.331,1351,2.331,1352,2.331,1353,2.331,1354,2.331,1355,2.331,1356,2.331,1357,2.331,1358,2.331,1359,2.331,1360,2.331,1361,2.331,1362,2.331,1363,2.331,1364,2.331,1365,2.331,1366,2.331,1367,2.331,1368,2.331,1369,2.331,1370,2.331,1371,2.331,1372,3.488,1373,3.488,1374,2.331,1375,3.488,1376,3.488,1377,3.488,1378,3.488,1379,3.488,1380,3.488,1381,3.488,1382,3.488,1383,3.488,1384,3.488,1385,3.488,1386,3.488,1387,3.488,1388,3.488,1389,3.488,1390,3.488,1391,3.488,1392,2.331,1393,2.331,1394,2.331,1395,2.331,1396,3.488,1397,2.331,1398,2.331,1399,2.331,1400,2.331,1401,2.331]],["title/miscellaneous/functions.html",[1172,1.226,1402,3.28]],["body/miscellaneous/functions.html",[13,0.352,19,3.599,28,2.056,29,0.03,30,0.712,32,2.056,39,0.711,65,2.456,81,1.624,86,1.627,124,0.021,125,0.025,126,0.021,1136,3.359,1137,4.723,1138,4.63,1140,4.63,1141,4.63,1142,3.359,1143,4.63,1172,2.065,1174,5.152,1175,3.85,1402,3.85,1403,4.595,1404,4.595,1405,4.595,1406,4.595,1407,4.595]],["title/index.html",[13,0.209,1408,2.728,1409,2.728]],["body/index.html",[4,0.433,29,0.024,30,0.488,79,1.205,124,0.02,125,0.024,126,0.02,127,0.08,137,0.948,215,3.608,220,1.883,281,2.805,317,3.608,789,3.148,863,5.039,883,3.148,897,3.608,933,4.451,1038,3.608,1162,3.608,1410,4.307,1411,5.76,1412,5.76,1413,4.307,1414,4.307,1415,5.312,1416,6.177,1417,6.375,1418,4.307,1419,4.307,1420,4.307,1421,4.307,1422,4.307,1423,4.307,1424,4.307,1425,4.307,1426,4.307,1427,5.76,1428,4.307,1429,6.177,1430,4.307,1431,4.307,1432,4.307,1433,4.307,1434,4.307,1435,4.307,1436,3.608,1437,5.312,1438,5.312,1439,6.014,1440,5.312,1441,5.312,1442,4.307,1443,4.307,1444,4.307,1445,5.76,1446,4.307,1447,3.148,1448,4.307,1449,4.307,1450,4.307]],["title/modules.html",[268,2.604]],["body/modules.html",[29,0.027,72,3.755,124,0.023,125,0.027,126,0.023,267,3.345,268,3.018,278,3.018,286,3.345,1451,5.137,1452,5.9,1453,5.137,1454,5.137]],["title/overview.html",[1447,3.24]],["body/overview.html",[2,1.821,29,0.031,124,0.019,125,0.023,126,0.019,128,1.168,129,0.968,192,1.821,227,0.892,234,1.041,237,0.952,239,1.041,241,1.041,243,1.041,245,0.952,247,1.041,250,1.041,252,1.041,254,0.952,256,1.041,258,1.041,260,1.041,262,1.041,266,2.639,267,4.423,268,2.381,269,2.639,270,3.395,271,3.395,272,3.395,273,2.963,274,3.395,275,3.395,276,3.395,277,3.395,278,3.292,279,4.285,280,3.395,281,2.639,324,2.639,1228,3.395,1230,3.395,1447,2.963,1455,4.053]],["title/routes.html",[324,2.886]],["body/routes.html",[29,0.027,124,0.024,125,0.027,126,0.024,324,3.415]],["title/miscellaneous/typealiases.html",[1172,1.226,1456,3.915]],["body/miscellaneous/typealiases.html",[6,3.33,7,3.832,13,0.392,29,0.027,31,1.093,50,4.302,124,0.023,125,0.027,126,0.023,1172,2.298,1179,4.285,1457,5.114,1458,4.285]],["title/miscellaneous/variables.html",[1172,1.226,1459,3.28]],["body/miscellaneous/variables.html",[13,0.355,29,0.031,31,1.146,47,4.018,76,1.922,97,2.302,124,0.021,125,0.025,126,0.021,145,1.665,146,1.539,590,2.481,879,4.064,1152,3.889,1154,3.889,1155,3.889,1156,4.658,1157,4.658,1172,2.086,1436,4.658,1458,3.889,1459,3.889,1460,5.56,1461,4.642,1462,4.642,1463,4.642,1464,4.642,1465,4.642,1466,4.642,1467,4.642,1468,4.642,1469,4.642,1470,4.642]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":100,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["0.10.2",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["0.1688888",{"_index":556,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["0.25rem",{"_index":938,"title":{},"body":{"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["0.5rem",{"_index":499,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["0.75",{"_index":500,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["0.75rem",{"_index":736,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["0.8373333",{"_index":555,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["0.85",{"_index":457,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["0/1",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0|1)|47|mc|nd|ri)|sgh",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":112,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1.3",{"_index":377,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.3em",{"_index":357,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["1.5em",{"_index":984,"title":{},"body":{"components/TempoComponent.html":{}}}],["1.5rem",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["1.6",{"_index":376,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.6em",{"_index":355,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.8em",{"_index":859,"title":{},"body":{"components/RhythmComponent.html":{}}}],["1.wav",{"_index":1397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1/11",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":470,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["100",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["1000",{"_index":821,"title":{},"body":{"components/RhythmComponent.html":{}}}],["100vh",{"_index":462,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["11",{"_index":1235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["11.0.4",{"_index":1162,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11/11",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["112.5",{"_index":550,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["12",{"_index":1237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["120.6",{"_index":455,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["12000",{"_index":652,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["120000",{"_index":657,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["1207|6310|6590|3gso|4thp|50[1",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["12rem",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{}}}],["13",{"_index":1239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["13/13",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["15",{"_index":1455,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["16n",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1n",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1rem",{"_index":359,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["2",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.0.0",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["2.4em",{"_index":861,"title":{},"body":{"components/RhythmComponent.html":{}}}],["2.wav",{"_index":1399,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2/20",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["20|go|ma)|i230|iac",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["21",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":568,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["275px",{"_index":494,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["28n",{"_index":1221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2]|n20[2",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["2n",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2rem",{"_index":852,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["2s",{"_index":575,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["2|po(ck|rt|se)|prox|psio|pt",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":96,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["3.5rem",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["3/14",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["30rem",{"_index":547,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["37",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["3rem",{"_index":841,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["4",{"_index":884,"title":{},"body":{"classes/Signature.html":{},"miscellaneous/enumerations.html":{}}}],["40",{"_index":493,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["45deg",{"_index":567,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["49.1",{"_index":454,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["4n",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5",{"_index":1103,"title":{},"body":{"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/7",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":385,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["500",{"_index":495,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["5rem",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5|g",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":1228,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.6.0",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":534,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["60000",{"_index":650,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["60vw",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["6]i|770s|802s|a",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["6rem",{"_index":857,"title":{},"body":{"components/RhythmComponent.html":{}}}],["7",{"_index":1230,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["71",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":572,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["7]0|os|wa|ze)|fetc|fly",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["7]|i",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":485,"title":{},"body":{"components/MainMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":1121,"title":{},"body":{"components/TrackComponent.html":{}}}],["87",{"_index":1104,"title":{},"body":{"components/TrackComponent.html":{}}}],["8]|c))|phil|pire|pl(ay|uc)|pn",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["8n",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8rem",{"_index":838,"title":{},"body":{"components/RhythmComponent.html":{}}}],["9",{"_index":482,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["9/10",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":549,"title":{},"body":{"components/MetronomeComponent.html":{},"coverage.html":{}}}],["9rem",{"_index":1095,"title":{},"body":{"components/TrackComponent.html":{}}}],["9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["_",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_)|g1",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["_16n_8n_16n",{"_index":1227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_16n_r",{"_index":1240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_1n_r",{"_index":1233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n",{"_index":1226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_2_8n",{"_index":1384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_8n",{"_index":1231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_8n_2_16n",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_8n",{"_index":1225,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_8n_2_16n",{"_index":1383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2n_r",{"_index":1234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_3_16n_d_8n",{"_index":1386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_3_8n",{"_index":1377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_16n",{"_index":1232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_16n_8n",{"_index":1380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_8n",{"_index":1224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n",{"_index":1222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n_r",{"_index":1236,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n_tr",{"_index":1223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_6_16n",{"_index":1378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n",{"_index":1376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_16n_8n",{"_index":1382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_2_16n",{"_index":1229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_2_16n_8n",{"_index":1381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_4_16n",{"_index":1379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_r",{"_index":1238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_tr",{"_index":1374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_2n_r",{"_index":1389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_4n",{"_index":1375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_4n_r",{"_index":1390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_8n_3_16n",{"_index":1385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_8n_r",{"_index":1391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_du",{"_index":1388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_|a|g|p|s|t)|tp)|hu(aw|tc)|i",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":379,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["absvertcenteredinteractive",{"_index":1105,"title":{},"body":{"components/TrackComponent.html":{}}}],["according",{"_index":616,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["accordion",{"_index":1264,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_bass",{"_index":1275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_grand_piano",{"_index":1243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_guitar_nylon",{"_index":1267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_guitar_steel",{"_index":1268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["active",{"_index":442,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["actual_component",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["add",{"_index":9,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addnote",{"_index":989,"title":{},"body":{"classes/Track.html":{}}}],["addnote(evt",{"_index":814,"title":{},"body":{"components/RhythmComponent.html":{}}}],["addnote(note",{"_index":1010,"title":{},"body":{"classes/Track.html":{}}}],["addon",{"_index":1,"title":{"classes/AddOn.html":{}},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{}}}],["addon#number",{"_index":53,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon#usehook",{"_index":54,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon(addon.number",{"_index":117,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon.usehook",{"_index":118,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addonjson",{"_index":50,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/typealiases.html":{}}}],["addonjson|null",{"_index":89,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addtoimgspaths",{"_index":706,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["addtoimgspaths(imgname",{"_index":104,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addtrack",{"_index":752,"title":{},"body":{"components/RhythmComponent.html":{}}}],["addtrack(bool",{"_index":760,"title":{},"body":{"components/RhythmComponent.html":{}}}],["agogo",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["ajouter",{"_index":351,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["aliases",{"_index":1457,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":370,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["allows",{"_index":627,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["along",{"_index":623,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["alto_sax",{"_index":1308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["anacrouse",{"_index":856,"title":{},"body":{"components/RhythmComponent.html":{}}}],["android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|android|silk|lge",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1411,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":573,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["animation($name",{"_index":560,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["animation(rotating",{"_index":564,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["app",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["app.component",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["appareil",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{}}}],["appcomponent",{"_index":128,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applause",{"_index":1369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["appmodule",{"_index":267,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":309,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":278,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":80,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["article",{"_index":1113,"title":{},"body":{"components/TrackComponent.html":{}}}],["artifacts",{"_index":1430,"title":{},"body":{"index.html":{}}}],["aside",{"_index":458,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["assets/images",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/images/notes",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/images/rythms",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/sounds/metronome/clock",{"_index":1396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assets/sounds/metronome/toc.wav",{"_index":1394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":890,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{}}}],["async",{"_index":311,"title":{},"body":{"classes/AppPage.html":{}}}],["attribute",{"_index":600,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["attributes",{"_index":91,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{}}}],["auto",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["automatically",{"_index":1422,"title":{},"body":{"index.html":{}}}],["available",{"_index":1454,"title":{},"body":{"modules.html":{}}}],["avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["a|qc(07|12|21|32|60",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":381,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["bagpipe",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["banjo",{"_index":1348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["baritone_sax",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":881,"title":{},"body":{"classes/Signature.html":{}}}],["base.svg",{"_index":552,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["basicnote",{"_index":877,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"miscellaneous/enumerations.html":{}}}],["basicnote#imgpath|image",{"_index":926,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote#name|name",{"_index":924,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote#number|number",{"_index":920,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote.getimgpath(this.bottom",{"_index":927,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getimgpath(this.note",{"_index":971,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.getname(this.bottom",{"_index":925,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getname(this.note",{"_index":972,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.getnumber(this.bottom",{"_index":923,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getnumber(this.note",{"_index":970,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.quarter_note",{"_index":880,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{}}}],["basicnote|basicnote",{"_index":909,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote|note",{"_index":921,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote|null",{"_index":962,"title":{},"body":{"classes/Tempo.html":{}}}],["bassoon",{"_index":1313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beat",{"_index":526,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["beats",{"_index":517,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["before",{"_index":378,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{}}}],["behavior",{"_index":848,"title":{},"body":{"components/RhythmComponent.html":{}}}],["behaviour",{"_index":1077,"title":{},"body":{"components/TrackComponent.html":{}}}],["between",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["binarynote",{"_index":63,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/enumerations.html":{}}}],["binarynote._4n",{"_index":699,"title":{},"body":{"classes/Note.html":{}}}],["binded",{"_index":599,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["bird_tweet",{"_index":1366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["block",{"_index":364,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["blown_bottle",{"_index":1319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bool",{"_index":762,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TrackComponent.html":{}}}],["bootstrap",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bord",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["border",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["border_width",{"_index":1097,"title":{},"body":{"components/TrackComponent.html":{}}}],["both",{"_index":906,"title":{},"body":{"classes/Signature.html":{}}}],["bottom",{"_index":474,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["bottom's",{"_index":888,"title":{},"body":{"classes/Signature.html":{}}}],["box",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["bpm",{"_index":511,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["brass_section",{"_index":1304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breath_noise",{"_index":1364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bright_acoustic_piano",{"_index":1244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":1452,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":318,"title":{},"body":{"classes/AppPage.html":{}}}],["browsermodule",{"_index":284,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1429,"title":{},"body":{"index.html":{}}}],["button",{"_index":464,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["button:first",{"_index":734,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["button:nth",{"_index":737,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["button_size",{"_index":840,"title":{},"body":{"components/RhythmComponent.html":{}}}],["calc(100",{"_index":467,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["calc(100vh",{"_index":850,"title":{},"body":{"components/RhythmComponent.html":{}}}],["called",{"_index":608,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["celesta",{"_index":1251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cello",{"_index":1285,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cell|chtm|cldc|cmd",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":361,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["ce|phone)|xda|xiino/i.test(navigator.useragent",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":789,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["changes",{"_index":611,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["changesoundplan",{"_index":1040,"title":{},"body":{"components/TrackComponent.html":{}}}],["check",{"_index":897,"title":{},"body":{"classes/Signature.html":{},"index.html":{}}}],["child",{"_index":735,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["child(1",{"_index":855,"title":{},"body":{"components/RhythmComponent.html":{}}}],["child(1)>img",{"_index":739,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["child(2",{"_index":738,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{}}}],["child::after",{"_index":479,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["child::before",{"_index":477,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["choir_aahs",{"_index":1295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["church_organ",{"_index":1262,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clarinet",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AddOn.html":{},"classes/AppPage.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{}},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddOn.html":{},"classes/AppPage.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"overview.html":{}}}],["classes/metronome",{"_index":539,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["classes/note",{"_index":808,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["classes/signature",{"_index":626,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["classes/tempo",{"_index":538,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{}}}],["classes/track",{"_index":807,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["clavinet",{"_index":1250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clearnotes",{"_index":990,"title":{},"body":{"classes/Track.html":{}}}],["cli",{"_index":1412,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1117,"title":{},"body":{"components/TrackComponent.html":{}}}],["clock_1",{"_index":1395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clock_2",{"_index":1398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co(mp|nd)|craw|da(it|ll|ng)|dbte|dc",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["code",{"_index":1425,"title":{},"body":{"index.html":{}}}],["color",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["column",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["command",{"_index":1448,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":898,"title":{},"body":{"classes/Signature.html":{}}}],["compoenent's",{"_index":774,"title":{},"body":{"components/RhythmComponent.html":{}}}],["componenet",{"_index":617,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["componenet's",{"_index":770,"title":{},"body":{"components/RhythmComponent.html":{}}}],["component",{"_index":127,"title":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":629,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["component_template",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["components",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"overview.html":{}}}],["const",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["constructor(imgsnames",{"_index":98,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["constructor(instrument",{"_index":1001,"title":{},"body":{"classes/Track.html":{}}}],["constructor(note",{"_index":948,"title":{},"body":{"classes/Tempo.html":{}}}],["constructor(number",{"_index":24,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["constructor(timecode",{"_index":673,"title":{},"body":{"classes/Note.html":{}}}],["constructor(top",{"_index":876,"title":{},"body":{"classes/Signature.html":{}}}],["contain",{"_index":553,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["content",{"_index":320,"title":{},"body":{"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["context",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contrabass",{"_index":1286,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controls",{"_index":851,"title":{},"body":{"components/RhythmComponent.html":{}}}],["controls_height",{"_index":839,"title":{},"body":{"components/RhythmComponent.html":{}}}],["convertimgnametopath",{"_index":707,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["convertimgnametopath(imgname",{"_index":717,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["correspond",{"_index":631,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["coverage",{"_index":1122,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["created",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createtrack",{"_index":342,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["createtrackcomponent",{"_index":234,"title":{"components/CreateTrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["créer",{"_index":449,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["cursor",{"_index":365,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["c|ht(c",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["d",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["dark",{"_index":483,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["dashboard",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dashboard.component.html",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.sass",{"_index":390,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":237,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":796,"title":{},"body":{"components/RhythmComponent.html":{}}}],["de",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{}}}],["declarations",{"_index":270,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":540,"title":{},"body":{"components/MetronomeComponent.html":{},"components/SignatureComponent.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["deletenotesbetweentimecodes",{"_index":991,"title":{},"body":{"classes/Track.html":{}}}],["deletenotesbetweentimecodes(from",{"_index":1013,"title":{},"body":{"classes/Track.html":{}}}],["dependencies",{"_index":269,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depuis",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{}}}],["details",{"_index":951,"title":{},"body":{"classes/Tempo.html":{}}}],["dev",{"_index":1419,"title":{},"body":{"index.html":{}}}],["development",{"_index":1414,"title":{},"body":{"index.html":{}}}],["different",{"_index":74,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["direction",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["directive",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["directives",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1428,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1433,"title":{},"body":{"index.html":{}}}],["dirpath",{"_index":68,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["display",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dist",{"_index":1432,"title":{},"body":{"index.html":{}}}],["distortion_guitar",{"_index":1273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":362,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["div:nth",{"_index":854,"title":{},"body":{"components/RhythmComponent.html":{}}}],["documentation",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dotted",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawbar_organ",{"_index":1259,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["du",{"_index":1372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["due",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dulcimer",{"_index":1258,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplet",{"_index":1373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duration",{"_index":665,"title":{},"body":{"classes/Note.html":{},"components/RhythmComponent.html":{}}}],["dynamic",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["défaut",{"_index":1093,"title":{},"body":{"components/TrackComponent.html":{}}}],["e2e",{"_index":1443,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":310,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":316,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":314,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":609,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/Signature.html":{}}}],["ease",{"_index":576,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["eight",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_bass_finger",{"_index":1276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_bass_pick",{"_index":1277,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_grand_piano",{"_index":1245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_clean",{"_index":1270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_jazz",{"_index":1269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_muted",{"_index":1271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_piano_1",{"_index":1247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_piano_2",{"_index":1248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["element(by.css('app",{"_index":319,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":1071,"title":{},"body":{"components/TrackComponent.html":{}}}],["empty",{"_index":624,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["encapsulation",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":863,"title":{},"body":{"components/RhythmComponent.html":{},"index.html":{}}}],["endtap",{"_index":753,"title":{},"body":{"components/RhythmComponent.html":{}}}],["endtap(evt",{"_index":763,"title":{},"body":{"components/RhythmComponent.html":{}}}],["endtapvar",{"_index":744,"title":{},"body":{"components/RhythmComponent.html":{}}}],["english_horn",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1173,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":62,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["enums/basic",{"_index":908,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["enums/binary",{"_index":685,"title":{},"body":{"classes/Note.html":{}}}],["enums/ternary",{"_index":686,"title":{},"body":{"classes/Note.html":{}}}],["environment",{"_index":47,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.pathsfromapp.rythmsimg",{"_index":70,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["environments/environment",{"_index":48,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["evenly",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["event",{"_index":764,"title":{},"body":{"components/RhythmComponent.html":{}}}],["eventemitter",{"_index":346,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["evt",{"_index":766,"title":{},"body":{"components/RhythmComponent.html":{}}}],["ex",{"_index":1220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":92,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{}}}],["execute",{"_index":1440,"title":{},"body":{"index.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["exportmenucomponent",{"_index":239,"title":{"components/ExportMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["exports",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":1119,"title":{},"body":{"components/TrackComponent.html":{}}}],["extension",{"_index":71,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["extention",{"_index":88,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["exterior",{"_index":1099,"title":{},"body":{"components/TrackComponent.html":{}}}],["fact",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":590,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["fiddle",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["files",{"_index":1424,"title":{},"body":{"index.html":{}}}],["find",{"_index":773,"title":{},"body":{"components/RhythmComponent.html":{}}}],["finished",{"_index":899,"title":{},"body":{"classes/Signature.html":{}}}],["first",{"_index":476,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["fixed",{"_index":490,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flag",{"_index":1435,"title":{},"body":{"index.html":{}}}],["flex",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["flute",{"_index":1316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followed",{"_index":1215,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following",{"_index":690,"title":{},"body":{"classes/Note.html":{},"miscellaneous/enumerations.html":{}}}],["fond",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["font",{"_index":367,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["font_size",{"_index":354,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["for(const",{"_index":638,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["for(let",{"_index":99,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["form",{"_index":85,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["formsmodule",{"_index":288,"title":{},"body":{"modules/AppModule.html":{}}}],["french_horn",{"_index":1303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fretless_bass",{"_index":1278,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["full",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":786,"title":{},"body":{"components/RhythmComponent.html":{},"coverage.html":{}}}],["functions",{"_index":1402,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1444,"title":{},"body":{"index.html":{}}}],["fx_1_rain",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_2_soundtrack",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_3_crystal",{"_index":1341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_4_atmosphere",{"_index":1342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_5_brightness",{"_index":1343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_6_goblins",{"_index":1344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_7_echoes",{"_index":1345,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_8_scifi",{"_index":1346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generals",{"_index":853,"title":{},"body":{"components/RhythmComponent.html":{}}}],["generate",{"_index":1427,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1410,"title":{},"body":{"index.html":{}}}],["getaddonnumber",{"_index":119,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getaddonusehook",{"_index":122,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getbottom",{"_index":867,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomimgpath",{"_index":868,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomname",{"_index":869,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomnumber",{"_index":870,"title":{},"body":{"classes/Signature.html":{}}}],["getbpm",{"_index":941,"title":{},"body":{"classes/Tempo.html":{}}}],["getduration",{"_index":668,"title":{},"body":{"classes/Note.html":{}}}],["getid",{"_index":992,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["getimgpath",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getimgpath(note",{"_index":1403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getimgpathat",{"_index":708,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgpathat(i",{"_index":721,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgspaths",{"_index":709,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgspathslength",{"_index":103,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getinstrument",{"_index":993,"title":{},"body":{"classes/Track.html":{}}}],["getjson",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getjson(note",{"_index":1404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmetronomemovementlengthinsec",{"_index":513,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["getname",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getname(note",{"_index":1405,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getnote",{"_index":942,"title":{},"body":{"classes/Tempo.html":{}}}],["getnoteatindex",{"_index":994,"title":{},"body":{"classes/Track.html":{}}}],["getnoteatindex(i",{"_index":1017,"title":{},"body":{"classes/Track.html":{}}}],["getnoteattimecode",{"_index":995,"title":{},"body":{"classes/Track.html":{}}}],["getnoteattimecode(timecode",{"_index":1019,"title":{},"body":{"classes/Track.html":{}}}],["getnoteimgpath",{"_index":943,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotename",{"_index":944,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotenumber",{"_index":945,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotes",{"_index":996,"title":{},"body":{"classes/Track.html":{}}}],["getnumber",{"_index":19,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnumber(note",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getplan",{"_index":997,"title":{},"body":{"classes/Track.html":{}}}],["getrepresentation",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrepresentation(note",{"_index":1407,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettimecode",{"_index":669,"title":{},"body":{"classes/Note.html":{}}}],["getting",{"_index":1408,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":312,"title":{},"body":{"classes/AppPage.html":{}}}],["gettop",{"_index":871,"title":{},"body":{"classes/Signature.html":{}}}],["gettrackindex",{"_index":754,"title":{},"body":{"components/RhythmComponent.html":{}}}],["gettrackindex(id",{"_index":767,"title":{},"body":{"components/RhythmComponent.html":{}}}],["gettrackindex(track.getid",{"_index":775,"title":{},"body":{"components/RhythmComponent.html":{}}}],["getusehook",{"_index":20,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["given",{"_index":777,"title":{},"body":{"components/RhythmComponent.html":{}}}],["glockenspiel",{"_index":1252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go",{"_index":1446,"title":{},"body":{"index.html":{}}}],["gradient($property",{"_index":1098,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(background",{"_index":1114,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(border",{"_index":1107,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(to",{"_index":1102,"title":{},"body":{"components/TrackComponent.html":{}}}],["graph",{"_index":1453,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":842,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["guitar_fret_noise",{"_index":1363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guitar_harmonics",{"_index":1274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gunshot",{"_index":1370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g|\\/(k|l|u)|50|54",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["g|qa",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h3",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{}}}],["half",{"_index":1187,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["half_note",{"_index":1186,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["harmonica",{"_index":1265,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["harpsichord",{"_index":1249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":380,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["height_note",{"_index":1190,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["helicopter",{"_index":1368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["help",{"_index":1445,"title":{},"body":{"index.html":{}}}],["hi(pt|ta)|hp",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["hidden",{"_index":846,"title":{},"body":{"components/RhythmComponent.html":{}}}],["honkytonk_piano",{"_index":1246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hook",{"_index":37,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["host",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["html",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["http://localhost:4200",{"_index":1421,"title":{},"body":{"index.html":{}}}],["i.test(navigator.useragent.substr(0,4",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["icon_width",{"_index":456,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["id",{"_index":772,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["identifier",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["if(!this.recording",{"_index":827,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(addon",{"_index":115,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(bool",{"_index":809,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(bottom",{"_index":914,"title":{},"body":{"classes/Signature.html":{}}}],["if(bpm",{"_index":968,"title":{},"body":{"classes/Tempo.html":{}}}],["if(changes.hasownproperty(propname",{"_index":640,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(changes[\"isplaying\"].currentvalue",{"_index":642,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(changes[\"isplaying\"].previousvalue",{"_index":644,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(id",{"_index":832,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(index",{"_index":105,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(note",{"_index":966,"title":{},"body":{"classes/Tempo.html":{}}}],["if(propname",{"_index":641,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(this.addon",{"_index":120,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(this.isbinary",{"_index":698,"title":{},"body":{"classes/Note.html":{}}}],["if(this.iscompatible(this.top",{"_index":919,"title":{},"body":{"classes/Signature.html":{}}}],["if(this.iscompatible(top",{"_index":917,"title":{},"body":{"classes/Signature.html":{}}}],["if(this.isselected",{"_index":1088,"title":{},"body":{"components/TrackComponent.html":{}}}],["if(this.mode",{"_index":648,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(this.selectedtrackid",{"_index":811,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(this.track.getplan",{"_index":1078,"title":{},"body":{"components/TrackComponent.html":{}}}],["if(top",{"_index":912,"title":{},"body":{"classes/Signature.html":{}}}],["if(volume",{"_index":1084,"title":{},"body":{"components/TrackComponent.html":{}}}],["ignore",{"_index":66,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["image",{"_index":382,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TrackComponent.html":{}}}],["images",{"_index":84,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["img",{"_index":76,"title":{},"body":{"classes/AddOn.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["img+span",{"_index":982,"title":{},"body":{"components/TempoComponent.html":{}}}],["img_size",{"_index":356,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["imgname",{"_index":716,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["imgsnames",{"_index":82,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["imgspaths",{"_index":78,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["implements",{"_index":338,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["import",{"_index":46,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["imports",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":563,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index:number",{"_index":110,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["infinite",{"_index":577,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["inline",{"_index":363,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["input",{"_index":447,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TrackComponent.html":{}}}],["input(\"isplaying",{"_index":634,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["input(\"signature",{"_index":633,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["input(\"tempo",{"_index":632,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["inputs",{"_index":441,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TrackComponent.html":{}}}],["input|input",{"_index":637,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["inside",{"_index":769,"title":{},"body":{"components/RhythmComponent.html":{}}}],["instr_input_height",{"_index":1096,"title":{},"body":{"components/TrackComponent.html":{}}}],["instrument",{"_index":986,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["instrument_width",{"_index":1094,"title":{},"body":{"components/TrackComponent.html":{}}}],["integration",{"_index":695,"title":{},"body":{"classes/Note.html":{}}}],["interior",{"_index":1100,"title":{},"body":{"components/TrackComponent.html":{}}}],["intrument",{"_index":1176,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intrumentinput",{"_index":1073,"title":{},"body":{"components/TrackComponent.html":{}}}],["isbinary",{"_index":666,"title":{},"body":{"classes/Note.html":{}}}],["iscompatible",{"_index":872,"title":{},"body":{"classes/Signature.html":{}}}],["iscompatible(top",{"_index":895,"title":{},"body":{"classes/Signature.html":{}}}],["ismobile",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["isplaying",{"_index":588,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["isselected",{"_index":831,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["issolo",{"_index":1047,"title":{},"body":{"components/TrackComponent.html":{}}}],["it's",{"_index":595,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["items",{"_index":466,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["i|ip)|hs",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["justify",{"_index":360,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["kalimba",{"_index":1351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1442,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":559,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["klon|kpt",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["know",{"_index":594,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["knowing",{"_index":771,"title":{},"body":{"components/RhythmComponent.html":{}}}],["koto",{"_index":1350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kwc",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["kyo(c|k)|le(no|xi)|lg",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["last",{"_index":478,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["lead_1_square",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_2_sawtooth",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_3_calliope",{"_index":1325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_4_chiff",{"_index":1326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_5_charang",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_6_voice",{"_index":1328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_7_fifths",{"_index":1329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_8_bass_and_lead",{"_index":1330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left",{"_index":375,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["legend",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"overview.html":{}}}],["librairy",{"_index":694,"title":{},"body":{"classes/Note.html":{},"components/TrackComponent.html":{}}}],["line",{"_index":691,"title":{},"body":{"classes/Note.html":{}}}],["linear",{"_index":570,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["link",{"_index":52,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{}}}],["linked",{"_index":1218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["list",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":1458,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["m(ob|in)i|palm",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["m)|sk",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["m3|m5)|tx",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["maemo|midp|mmp|netfront|opera",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["mainmenucomponent",{"_index":241,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":358,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["marimba",{"_index":1255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":125,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":488,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["measure",{"_index":502,"title":{},"body":{"components/MeasureComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{}}}],["measure'},{'name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["measure.component.html",{"_index":504,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure.component.sass",{"_index":503,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure/measure.component",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["measurecomponent",{"_index":243,"title":{"components/MeasureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["measures",{"_index":625,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["media",{"_index":487,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["melodic_tom",{"_index":1360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["menu",{"_index":433,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu'},{'name",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["menu.component",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.html",{"_index":435,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu.component.sass",{"_index":434,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu.component.ts",{"_index":432,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:12",{"_index":437,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu.component.ts:16",{"_index":444,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":446,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:8",{"_index":436,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu/export",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"components/ExportMenuComponent.html":{},"coverage.html":{}}}],["menu/main",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu/save",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/AddOn.html":{},"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["metronome",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["metronome'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["metronome(this.bpm",{"_index":542,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome(this.tempo.getbpm",{"_index":636,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["metronome.component.html",{"_index":510,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome.component.sass",{"_index":509,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome.stop",{"_index":660,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["metronome/metronome.component",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["metronome_height",{"_index":546,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome_width",{"_index":548,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronomecomponent",{"_index":245,"title":{"components/MetronomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metronomesoundcomponent",{"_index":247,"title":{"components/MetronomeSoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metronomesoundcomponent#mode|mode",{"_index":646,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["middle",{"_index":480,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["min",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["minute",{"_index":528,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["miscellaneous",{"_index":1172,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":558,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["mode",{"_index":583,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["modifiableinstrument",{"_index":1036,"title":{},"body":{"components/TrackComponent.html":{}}}],["modifyinstrument",{"_index":1037,"title":{},"body":{"components/TrackComponent.html":{}}}],["module",{"_index":266,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":268,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":883,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{},"index.html":{}}}],["mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["mo|to(pl|sh)|ts(70|m",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["ms",{"_index":651,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["music_box",{"_index":1253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["musical",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{},"components/TrackComponent.html":{}}}],["musique",{"_index":451,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["mute",{"_index":1009,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["muted_trumpet",{"_index":1302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwbp|mywa|n10[0",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["m|p|t)|hei",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["m|r",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["métronome",{"_index":452,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["n",{"_index":1216,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":83,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["nav",{"_index":463,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["navigate",{"_index":1420,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":313,"title":{},"body":{"classes/AppPage.html":{}}}],["nbofsolotracks",{"_index":745,"title":{},"body":{"components/RhythmComponent.html":{}}}],["nc|nw)|wmlb|wonu|x700|yas",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":79,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"index.html":{}}}],["nextid",{"_index":987,"title":{},"body":{"classes/Track.html":{}}}],["ng",{"_index":1417,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":584,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ngonchanges(changes",{"_index":605,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ngoninit",{"_index":343,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["none",{"_index":465,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["normal",{"_index":1008,"title":{},"body":{"classes/Track.html":{}}}],["not(.active",{"_index":492,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["not(.active)+nav",{"_index":491,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["notation",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":86,"title":{"classes/Note.html":{}},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["note's",{"_index":11,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["note'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["note(timecode",{"_index":824,"title":{},"body":{"components/RhythmComponent.html":{}}}],["note.component.html",{"_index":703,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.sass",{"_index":702,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.svg",{"_index":1185,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["note/note.component",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["notecomponent",{"_index":250,"title":{"components/NoteComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noterepresentation",{"_index":65,"title":{"classes/NoteRepresentation.html":{}},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noterepresentation([\"4n",{"_index":94,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["noterepresentation([\"8n",{"_index":1068,"title":{},"body":{"components/TrackComponent.html":{}}}],["notes",{"_index":60,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Track.html":{},"miscellaneous/enumerations.html":{}}}],["notesimg",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notetype",{"_index":1178,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nouveau",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":81,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["number|null",{"_index":964,"title":{},"body":{"classes/Tempo.html":{}}}],["n|u)|c55\\/|capi|ccwa|cdm",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":879,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{},"miscellaneous/variables.html":{}}}],["oboe",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ocarina",{"_index":1322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onchanges",{"_index":580,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ondex",{"_index":776,"title":{},"body":{"components/RhythmComponent.html":{}}}],["oninit",{"_index":339,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["oo|p",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["opacity",{"_index":496,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["orchestra_hit",{"_index":1298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orchestral_harp",{"_index":1289,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order",{"_index":77,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["origin",{"_index":557,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/MetronomeComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":349,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["outputs",{"_index":344,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["ouvrir",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{}}}],["overdriven_guitar",{"_index":1272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":843,"title":{},"body":{"components/RhythmComponent.html":{}}}],["overview",{"_index":1447,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["o|v)|zz)|mt(50|p1|v",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["p",{"_index":371,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["package",{"_index":1160,"title":{"dependencies.html":{}},"body":{}}],["pad_1_new_age",{"_index":1331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_2_warm",{"_index":1332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_3_polysynth",{"_index":1333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_4_choir",{"_index":1334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_5_bowed",{"_index":1335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_6_metallic",{"_index":1336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_7_halo",{"_index":1337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_8_sweep",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["padding",{"_index":374,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["page",{"_index":1450,"title":{},"body":{"index.html":{}}}],["pan_flute",{"_index":1318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":51,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{}}}],["parameter",{"_index":778,"title":{},"body":{"components/RhythmComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":596,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["parent's",{"_index":598,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["part",{"_index":1086,"title":{},"body":{"components/TrackComponent.html":{}}}],["parts",{"_index":75,"title":{},"body":{"classes/AddOn.html":{},"components/ExportMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/SaveMenuComponent.html":{}}}],["pass",{"_index":630,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["path",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Signature.html":{},"classes/Tempo.html":{}}}],["pathmatch",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":73,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["pathsfromapp",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":527,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["percussive_organ",{"_index":1260,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["piccolo",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["piste",{"_index":353,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["pizzicato_strings",{"_index":1288,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["plan",{"_index":788,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["plans",{"_index":988,"title":{},"body":{"classes/Track.html":{}}}],["play",{"_index":613,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["playbar",{"_index":729,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar'},{'name",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["playbar.component.html",{"_index":731,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar.component.sass",{"_index":730,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar/playbar.component",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["playbarcomponent",{"_index":252,"title":{"components/PlaybarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playing",{"_index":593,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["playmetronome",{"_index":585,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["pointer",{"_index":366,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["polyrythm",{"_index":693,"title":{},"body":{"classes/Note.html":{}}}],["polyrythmie",{"_index":450,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["polyrythmique",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["polyrytmie",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":372,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["possess",{"_index":90,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["prefix",{"_index":561,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["private",{"_index":15,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{}}}],["prod",{"_index":1434,"title":{},"body":{"index.html":{}}}],["production",{"_index":1436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":933,"title":{},"body":{"components/SignatureComponent.html":{},"index.html":{}}}],["projet",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{}}}],["promise",{"_index":315,"title":{},"body":{"classes/AppPage.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["property",{"_index":1101,"title":{},"body":{"components/TrackComponent.html":{}}}],["property($name",{"_index":562,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["property(transform",{"_index":565,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["propname",{"_index":639,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["protractor",{"_index":317,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["providers",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["put",{"_index":828,"title":{},"body":{"components/RhythmComponent.html":{}}}],["qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["quarter",{"_index":1189,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarter_note",{"_index":1188,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarternoterep",{"_index":93,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["quarternotetripletrep",{"_index":95,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["r",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["ratio",{"_index":529,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["recorder",{"_index":1317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recording",{"_index":746,"title":{},"body":{"components/RhythmComponent.html":{}}}],["recording>article",{"_index":1111,"title":{},"body":{"components/TrackComponent.html":{}}}],["redirectto",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reed_organ",{"_index":1263,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reference",{"_index":1449,"title":{},"body":{"index.html":{}}}],["references",{"_index":58,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["relative",{"_index":373,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["reload",{"_index":1423,"title":{},"body":{"index.html":{}}}],["removefromimgspaths",{"_index":710,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["removefromimgspaths(imgname",{"_index":109,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["removefromimgspathsat",{"_index":711,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["removefromimgspathsat(index",{"_index":113,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["repeat",{"_index":384,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["replace",{"_index":692,"title":{},"body":{"classes/Note.html":{}}}],["represent",{"_index":866,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["representation",{"_index":12,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{}}}],["representation.ts",{"_index":7,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["representation.ts:100",{"_index":723,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:103",{"_index":722,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:108",{"_index":724,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:111",{"_index":715,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:118",{"_index":725,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:124",{"_index":726,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:128",{"_index":727,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:13",{"_index":33,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:135",{"_index":719,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:141",{"_index":720,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:17",{"_index":27,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:32",{"_index":38,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:38",{"_index":42,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:45",{"_index":40,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:51",{"_index":45,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:74",{"_index":714,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:78",{"_index":713,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:96",{"_index":718,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["reput",{"_index":835,"title":{},"body":{"components/RhythmComponent.html":{}}}],["require",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["result",{"_index":124,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":126,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrievenotetype",{"_index":670,"title":{},"body":{"classes/Note.html":{}}}],["return",{"_index":57,"title":{},"body":{"classes/AddOn.html":{},"classes/AppPage.html":{},"components/MetronomeComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/AddOn.html":{},"classes/AppPage.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse_cymbal",{"_index":1362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rhythm",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RhythmComponent.html":{}}}],["rhythm'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["rhythm.component.html",{"_index":743,"title":{},"body":{"components/RhythmComponent.html":{}}}],["rhythm.component.sass",{"_index":742,"title":{},"body":{"components/RhythmComponent.html":{}}}],["rhythm/rhythm.component",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rhythmcomponent",{"_index":254,"title":{"components/RhythmComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":461,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["rock_organ",{"_index":1261,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["root'},{'name",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["rotate",{"_index":566,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotate(0deg",{"_index":569,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotate(45deg",{"_index":571,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotatey(180deg",{"_index":740,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["rotating",{"_index":574,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["routermodule",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":324,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":290,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1416,"title":{},"body":{"index.html":{}}}],["running",{"_index":1437,"title":{},"body":{"index.html":{}}}],["runningmetronome",{"_index":512,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rxjs",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["rythmsimg",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["sass/vars",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["save",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["savemenucomponent",{"_index":256,"title":{"components/SaveMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scaffolding",{"_index":1426,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":847,"title":{},"body":{"components/RhythmComponent.html":{}}}],["sdk\\/|se(c",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["seashore",{"_index":1365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sec",{"_index":522,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["seconds",{"_index":818,"title":{},"body":{"components/RhythmComponent.html":{}}}],["section",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{}}}],["section>div",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":882,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["select",{"_index":628,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["selected",{"_index":829,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["selected>article",{"_index":1106,"title":{},"body":{"components/TrackComponent.html":{}}}],["selectedtrack",{"_index":1048,"title":{},"body":{"components/TrackComponent.html":{}}}],["selectedtrackid",{"_index":747,"title":{},"body":{"components/RhythmComponent.html":{}}}],["selectedtrackindex",{"_index":748,"title":{},"body":{"components/RhythmComponent.html":{}}}],["selector",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["selecttrack",{"_index":1041,"title":{},"body":{"components/TrackComponent.html":{}}}],["serve",{"_index":1418,"title":{},"body":{"index.html":{}}}],["server",{"_index":1415,"title":{},"body":{"index.html":{}}}],["set",{"_index":525,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{}}}],["setactive",{"_index":440,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["setactive(active",{"_index":445,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["setaddon",{"_index":712,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["setaddon(addon",{"_index":114,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setbottom",{"_index":873,"title":{},"body":{"classes/Signature.html":{}}}],["setbottom(bottom",{"_index":900,"title":{},"body":{"classes/Signature.html":{}}}],["setbpm",{"_index":946,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["setbpm(bpm",{"_index":957,"title":{},"body":{"classes/Tempo.html":{}}}],["setduration",{"_index":671,"title":{},"body":{"classes/Note.html":{}}}],["setduration(duration",{"_index":681,"title":{},"body":{"classes/Note.html":{}}}],["setinstrument",{"_index":998,"title":{},"body":{"classes/Track.html":{}}}],["setinstrument(instrument",{"_index":1023,"title":{},"body":{"classes/Track.html":{}}}],["setmetronomebpm",{"_index":514,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["setmetronomebpm(bpm",{"_index":523,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["setnote",{"_index":947,"title":{},"body":{"classes/Tempo.html":{}}}],["setnote(note",{"_index":960,"title":{},"body":{"classes/Tempo.html":{}}}],["setnotes",{"_index":999,"title":{},"body":{"classes/Track.html":{}}}],["setnotes(notes",{"_index":1025,"title":{},"body":{"classes/Track.html":{}}}],["setnumber",{"_index":21,"title":{},"body":{"classes/AddOn.html":{}}}],["setnumber(number",{"_index":41,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setplan",{"_index":1000,"title":{},"body":{"classes/Track.html":{}}}],["setplan(plan",{"_index":1027,"title":{},"body":{"classes/Track.html":{}}}],["setselectedtrackid",{"_index":755,"title":{},"body":{"components/RhythmComponent.html":{}}}],["setselectedtrackid(id",{"_index":780,"title":{},"body":{"components/RhythmComponent.html":{}}}],["setsolomuted",{"_index":1042,"title":{},"body":{"components/TrackComponent.html":{}}}],["setsolomuted(bool",{"_index":1059,"title":{},"body":{"components/TrackComponent.html":{}}}],["settempo",{"_index":756,"title":{},"body":{"components/RhythmComponent.html":{}}}],["settempo(tempo",{"_index":782,"title":{},"body":{"components/RhythmComponent.html":{}}}],["settimecode",{"_index":672,"title":{},"body":{"classes/Note.html":{}}}],["settimecode(timecode",{"_index":683,"title":{},"body":{"classes/Note.html":{}}}],["settimeout(function(metronome",{"_index":659,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["settimeout(function(starttapvar",{"_index":815,"title":{},"body":{"components/RhythmComponent.html":{}}}],["settop",{"_index":874,"title":{},"body":{"classes/Signature.html":{}}}],["settop(top",{"_index":902,"title":{},"body":{"classes/Signature.html":{}}}],["settopandbottom",{"_index":875,"title":{},"body":{"classes/Signature.html":{}}}],["settopandbottom(top",{"_index":904,"title":{},"body":{"classes/Signature.html":{}}}],["setusehook",{"_index":22,"title":{},"body":{"classes/AddOn.html":{}}}],["setusehook(usehook",{"_index":44,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setvolume",{"_index":1043,"title":{},"body":{"components/TrackComponent.html":{}}}],["setvolume(volume",{"_index":1061,"title":{},"body":{"components/TrackComponent.html":{}}}],["shakuhachi",{"_index":1320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shamisen",{"_index":1349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shanai",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shar|sie",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["shrink",{"_index":858,"title":{},"body":{"components/RhythmComponent.html":{}}}],["sig",{"_index":937,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature",{"_index":589,"title":{"classes/Signature.html":{}},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"coverage.html":{}}}],["signature's",{"_index":922,"title":{},"body":{"classes/Signature.html":{}}}],["signature'},{'name",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["signature(4",{"_index":931,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature(null",{"_index":601,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["signature.component.html",{"_index":930,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.component.sass",{"_index":929,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.getbottomnumber",{"_index":936,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.gettop",{"_index":935,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature/signature.component",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["signaturecomponent",{"_index":258,"title":{"components/SignatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signaturecomponent#bottom|bottom",{"_index":911,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#bottom|bottom}'s",{"_index":918,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#top|top",{"_index":910,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#top|top}'s",{"_index":916,"title":{},"body":{"classes/Signature.html":{}}}],["signature|signature",{"_index":934,"title":{},"body":{"components/SignatureComponent.html":{}}}],["simple",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["simplechanges",{"_index":606,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sitar",{"_index":1347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteen",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteen_note",{"_index":1191,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteenth",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":368,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["sizing",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{}}}],["slap_bass_1",{"_index":1279,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slap_bass_2",{"_index":1280,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice",{"_index":1109,"title":{},"body":{"components/TrackComponent.html":{}}}],["slope",{"_index":453,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["smooth",{"_index":849,"title":{},"body":{"components/RhythmComponent.html":{}}}],["solid",{"_index":473,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["solo",{"_index":790,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["soloed",{"_index":791,"title":{},"body":{"components/RhythmComponent.html":{}}}],["soloedtrack",{"_index":757,"title":{},"body":{"components/RhythmComponent.html":{}}}],["soloedtrack(bool",{"_index":784,"title":{},"body":{"components/RhythmComponent.html":{}}}],["solomuted",{"_index":1046,"title":{},"body":{"components/TrackComponent.html":{}}}],["soprano_sax",{"_index":1307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sound",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sound'},{'name",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["sound.component",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["sound.component.html",{"_index":582,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.sass",{"_index":581,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts",{"_index":579,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["sound.component.ts:108",{"_index":618,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:25",{"_index":622,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:30",{"_index":604,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:34",{"_index":602,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:38",{"_index":591,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:43",{"_index":621,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:63",{"_index":607,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:84",{"_index":619,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:91",{"_index":612,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound/metronome",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["soundplan",{"_index":1118,"title":{},"body":{"components/TrackComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["sown",{"_index":36,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["space",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{}}}],["span",{"_index":486,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["span')).gettext",{"_index":321,"title":{},"body":{"classes/AppPage.html":{}}}],["span:first",{"_index":939,"title":{},"body":{"components/SignatureComponent.html":{}}}],["span>span",{"_index":983,"title":{},"body":{"components/TempoComponent.html":{}}}],["spec\\.ts",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":1217,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../basic",{"_index":1174,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../binary",{"_index":1175,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../instrument.ts",{"_index":1177,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../metronome.ts",{"_index":1181,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../note",{"_index":1179,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../ternary",{"_index":1182,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":282,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/metronome.ts",{"_index":1392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/classes/note",{"_index":6,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/classes/note.ts",{"_index":663,"title":{},"body":{"classes/Note.html":{},"coverage.html":{}}}],["src/app/classes/note.ts:11",{"_index":677,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:13",{"_index":674,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:25",{"_index":679,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:28",{"_index":684,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:32",{"_index":678,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:35",{"_index":682,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:40",{"_index":680,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:8",{"_index":676,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:9",{"_index":675,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/signature.ts",{"_index":865,"title":{},"body":{"classes/Signature.html":{},"coverage.html":{}}}],["src/app/classes/signature.ts:10",{"_index":885,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:100",{"_index":892,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:109",{"_index":891,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:118",{"_index":889,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:15",{"_index":878,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:37",{"_index":893,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:45",{"_index":903,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:56",{"_index":887,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:65",{"_index":901,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:75",{"_index":905,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:87",{"_index":896,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/tempo.ts",{"_index":940,"title":{},"body":{"classes/Tempo.html":{},"coverage.html":{}}}],["src/app/classes/tempo.ts:10",{"_index":950,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:14",{"_index":949,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:36",{"_index":953,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:44",{"_index":961,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:53",{"_index":952,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:61",{"_index":958,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:74",{"_index":956,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:82",{"_index":954,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:90",{"_index":955,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/track.ts",{"_index":985,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/app/classes/track.ts:11",{"_index":1007,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:13",{"_index":1003,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:14",{"_index":1004,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:15",{"_index":1006,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:16",{"_index":1002,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:27",{"_index":1015,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:31",{"_index":1016,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:34",{"_index":1024,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:38",{"_index":1022,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:4",{"_index":1005,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:41",{"_index":1028,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:45",{"_index":1021,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:48",{"_index":1018,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:52",{"_index":1020,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:61",{"_index":1026,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:65",{"_index":1011,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:69",{"_index":1012,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:73",{"_index":1014,"title":{},"body":{"classes/Track.html":{}}}],["src/app/create",{"_index":336,"title":{},"body":{"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":389,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:12",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:8",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/enums/basic",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/enums/binary",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/enums/instrument.ts",{"_index":1242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/note",{"_index":1371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/ternary",{"_index":1400,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/export",{"_index":431,"title":{},"body":{"components/ExportMenuComponent.html":{},"coverage.html":{}}}],["src/app/main",{"_index":439,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/measure/measure.component.ts",{"_index":501,"title":{},"body":{"components/MeasureComponent.html":{},"coverage.html":{}}}],["src/app/measure/measure.component.ts:12",{"_index":506,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/app/measure/measure.component.ts:8",{"_index":505,"title":{},"body":{"components/MeasureComponent.html":{}}}],["src/app/metronome",{"_index":578,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["src/app/metronome/metronome.component.ts",{"_index":508,"title":{},"body":{"components/MetronomeComponent.html":{},"coverage.html":{}}}],["src/app/metronome/metronome.component.ts:16",{"_index":535,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:21",{"_index":536,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:41",{"_index":524,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:50",{"_index":516,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:57",{"_index":530,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:64",{"_index":532,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/note/note.component.ts",{"_index":701,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["src/app/note/note.component.ts:12",{"_index":705,"title":{},"body":{"components/NoteComponent.html":{}}}],["src/app/note/note.component.ts:8",{"_index":704,"title":{},"body":{"components/NoteComponent.html":{}}}],["src/app/playbar/playbar.component.ts",{"_index":728,"title":{},"body":{"components/PlaybarComponent.html":{},"coverage.html":{}}}],["src/app/playbar/playbar.component.ts:12",{"_index":733,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["src/app/playbar/playbar.component.ts:8",{"_index":732,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts",{"_index":741,"title":{},"body":{"components/RhythmComponent.html":{},"coverage.html":{}}}],["src/app/rhythm/rhythm.component.ts:107",{"_index":768,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:121",{"_index":785,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:15",{"_index":806,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:17",{"_index":802,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:18",{"_index":805,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:21",{"_index":800,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:22",{"_index":801,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:23",{"_index":799,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:25",{"_index":798,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:27",{"_index":803,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:28",{"_index":804,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:29",{"_index":797,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:36",{"_index":779,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:39",{"_index":761,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:45",{"_index":795,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:59",{"_index":794,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:67",{"_index":765,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:77",{"_index":783,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:82",{"_index":781,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/save",{"_index":864,"title":{},"body":{"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["src/app/signature/signature.component.ts",{"_index":928,"title":{},"body":{"components/SignatureComponent.html":{},"coverage.html":{}}}],["src/app/signature/signature.component.ts:19",{"_index":932,"title":{},"body":{"components/SignatureComponent.html":{}}}],["src/app/tempo/tempo.component.ts",{"_index":973,"title":{},"body":{"components/TempoComponent.html":{},"coverage.html":{}}}],["src/app/tempo/tempo.component.ts:13",{"_index":980,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:15",{"_index":977,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:22",{"_index":978,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:25",{"_index":979,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/track/track.component.ts",{"_index":1035,"title":{},"body":{"components/TrackComponent.html":{},"coverage.html":{}}}],["src/app/track/track.component.ts:14",{"_index":1051,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:16",{"_index":1066,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:17",{"_index":1067,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:20",{"_index":1069,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:21",{"_index":1050,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:22",{"_index":1052,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:24",{"_index":1065,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:25",{"_index":1053,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:29",{"_index":1049,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:34",{"_index":1057,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:38",{"_index":1054,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:53",{"_index":1064,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:56",{"_index":1060,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:60",{"_index":1056,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:64",{"_index":1062,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:73",{"_index":1063,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:89",{"_index":1058,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:98",{"_index":1055,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":498,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1409,"title":{"index.html":{}},"body":{}}],["startrecord",{"_index":749,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starts",{"_index":531,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["starttap",{"_index":758,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starttap(evt",{"_index":793,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starttapvar",{"_index":750,"title":{},"body":{"components/RhythmComponent.html":{}}}],["statements",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":67,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["steel_drums",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stick",{"_index":554,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["sticky",{"_index":460,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["stop",{"_index":515,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["stopmetronome",{"_index":586,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["stops",{"_index":533,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["store",{"_index":664,"title":{},"body":{"classes/Note.html":{}}}],["stored",{"_index":1431,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":1110,"title":{},"body":{"components/TrackComponent.html":{}}}],["string",{"_index":69,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["string_ensemble_1",{"_index":1291,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string_ensemble_2",{"_index":1292,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["style",{"_index":472,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["styles",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["styles/menu",{"_index":438,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/PlaybarComponent.html":{},"components/SaveMenuComponent.html":{}}}],["styleurls",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["support",{"_index":1451,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["svg",{"_index":72,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"modules.html":{}}}],["sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["synth_bass_1",{"_index":1281,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_bass_2",{"_index":1282,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_brass_1",{"_index":1305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_brass_2",{"_index":1306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_choir",{"_index":1297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_drum",{"_index":1361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_strings_1",{"_index":1293,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_strings_2",{"_index":1294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s|devi|dica|dmob|do(c|p)o|ds(12",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["t",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["tab",{"_index":443,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["table",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["taiko_drum",{"_index":1359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["takes",{"_index":519,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["tango_accordion",{"_index":1266,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tap",{"_index":836,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tap_button_size",{"_index":837,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tdg",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["tel(i|m)|tim",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["telephone_ring",{"_index":1367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["templateurl",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tempo",{"_index":537,"title":{"classes/Tempo.html":{}},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"coverage.html":{}}}],["tempo#bpm|bpm",{"_index":965,"title":{},"body":{"classes/Tempo.html":{}}}],["tempo#note|note",{"_index":963,"title":{},"body":{"classes/Tempo.html":{}}}],["tempo's",{"_index":959,"title":{},"body":{"classes/Tempo.html":{}}}],["tempo'},{'name",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tempo(null",{"_index":603,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{}}}],["tempo):void",{"_index":825,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tempo.component.html",{"_index":975,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo.component.sass",{"_index":974,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo.getbpm",{"_index":981,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo/tempo.component",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["tempocomponent",{"_index":260,"title":{"components/TempoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tempooutput",{"_index":976,"title":{},"body":{"components/TempoComponent.html":{}}}],["tenor_sax",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ternary",{"_index":1401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ternarynote",{"_index":64,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/enumerations.html":{}}}],["ternarynote._4n",{"_index":700,"title":{},"body":{"classes/Note.html":{}}}],["test",{"_index":1038,"title":{},"body":{"components/TrackComponent.html":{},"index.html":{}}}],["tests",{"_index":1439,"title":{},"body":{"index.html":{}}}],["text",{"_index":369,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["themselves",{"_index":1219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.active",{"_index":448,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.addon",{"_index":116,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.addon.getnumber",{"_index":121,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.addon.getusehook",{"_index":123,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.bottom",{"_index":915,"title":{},"body":{"classes/Signature.html":{}}}],["this.bpm",{"_index":969,"title":{},"body":{"classes/Tempo.html":{}}}],["this.convertimgnametopath(imgname",{"_index":108,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.create.emit(true",{"_index":350,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["this.duration",{"_index":688,"title":{},"body":{"classes/Note.html":{}}}],["this.endtapvar",{"_index":817,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.endtapvar.gettime",{"_index":822,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.gettrackindex(id",{"_index":834,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.id",{"_index":1029,"title":{},"body":{"classes/Track.html":{}}}],["this.imgspaths.indexof(imgname",{"_index":111,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.length",{"_index":101,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.push(this.convertimgnametopath(imgname",{"_index":106,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.splice(index",{"_index":107,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths[i",{"_index":102,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.instrument",{"_index":1031,"title":{},"body":{"classes/Track.html":{}}}],["this.intrumentinput.nativeelement.focus",{"_index":1085,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.isplaying",{"_index":661,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.isselected",{"_index":1087,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.issolo.emit(false",{"_index":1080,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.issolo.emit(true",{"_index":1082,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.metronome",{"_index":635,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.metronome.start",{"_index":649,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.metronome.stop",{"_index":662,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.mode",{"_index":647,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.modifiableinstrument",{"_index":1074,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.mute",{"_index":1079,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.note",{"_index":967,"title":{},"body":{"classes/Tempo.html":{}}}],["this.notes",{"_index":1033,"title":{},"body":{"classes/Track.html":{}}}],["this.notes[i",{"_index":1034,"title":{},"body":{"classes/Track.html":{}}}],["this.number",{"_index":55,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.plan",{"_index":1032,"title":{},"body":{"classes/Track.html":{}}}],["this.playmetronome",{"_index":643,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.recording",{"_index":812,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.retrievenotetype",{"_index":697,"title":{},"body":{"classes/Note.html":{}}}],["this.runningmetronome",{"_index":541,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.getbpm()/30",{"_index":544,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.setbpm(bpm",{"_index":543,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.start",{"_index":545,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.selectedtrack.emit(null",{"_index":1090,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.selectedtrack.emit(this.track.getid",{"_index":1089,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.selectedtrackid",{"_index":830,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.selectedtrackindex",{"_index":833,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.signature.getbottomnumber",{"_index":655,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.signature.gettop",{"_index":653,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.solomuted",{"_index":1083,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.startrecord",{"_index":813,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.startrecord.gettime",{"_index":820,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.starttapvar",{"_index":816,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.starttapvar.gettime",{"_index":819,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.stopmetronome",{"_index":645,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.tempo",{"_index":826,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.tempo.getbpm",{"_index":656,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.tempo.getnotenumber",{"_index":654,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.timecode",{"_index":687,"title":{},"body":{"classes/Note.html":{}}}],["this.top",{"_index":913,"title":{},"body":{"classes/Signature.html":{}}}],["this.track.getid",{"_index":1091,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.track.getinstrument",{"_index":1075,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.track.setplan((this.track.getplan",{"_index":1076,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.tracks.push(new",{"_index":810,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.tracks[this.selectedtrackindex].addnote(new",{"_index":823,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.type",{"_index":696,"title":{},"body":{"classes/Note.html":{}}}],["this.usehook",{"_index":56,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.volume",{"_index":1081,"title":{},"body":{"components/TrackComponent.html":{}}}],["tick",{"_index":520,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["time",{"_index":518,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{}}}],["timecode",{"_index":667,"title":{},"body":{"classes/Note.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["timer",{"_index":658,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["times",{"_index":886,"title":{},"body":{"classes/Signature.html":{}}}],["timpani",{"_index":1290,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tinkle_bell",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["title",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["toc",{"_index":1393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":689,"title":{},"body":{"classes/Note.html":{},"components/TrackComponent.html":{}}}],["toggle",{"_index":620,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["togglemode",{"_index":587,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["togglemodifyinstrument",{"_index":1044,"title":{},"body":{"components/TrackComponent.html":{}}}],["togglerecording",{"_index":759,"title":{},"body":{"components/RhythmComponent.html":{}}}],["togglesolomuted",{"_index":1045,"title":{},"body":{"components/TrackComponent.html":{}}}],["top",{"_index":10,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/TrackComponent.html":{}}}],["top's",{"_index":894,"title":{},"body":{"classes/Signature.html":{}}}],["tr",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":263,"title":{"classes/Track.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["track's",{"_index":787,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["track'},{'name",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["track.component",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["track.component.html",{"_index":341,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TrackComponent.html":{}}}],["track.component.sass",{"_index":340,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TrackComponent.html":{}}}],["track.component.ts",{"_index":337,"title":{},"body":{"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["track.component.ts:10",{"_index":345,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["track.component.ts:14",{"_index":348,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["track.component.ts:17",{"_index":347,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["track.getinstrument",{"_index":1092,"title":{},"body":{"components/TrackComponent.html":{}}}],["track.nextid",{"_index":1030,"title":{},"body":{"classes/Track.html":{}}}],["track/create",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["track/track.component",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["trackcomponent",{"_index":262,"title":{"components/TrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trackcontent",{"_index":1120,"title":{},"body":{"components/TrackComponent.html":{}}}],["tracks",{"_index":751,"title":{},"body":{"components/RhythmComponent.html":{}}}],["transform",{"_index":386,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/TrackComponent.html":{}}}],["translatex",{"_index":388,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{}}}],["translatey",{"_index":387,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["translatey(100",{"_index":475,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["transparent",{"_index":471,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["tree",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tremolo_strings",{"_index":1287,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["triplet",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trombone",{"_index":1300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["true",{"_index":97,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["trumpet",{"_index":1299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslib",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["tuba",{"_index":1301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tubular_bells",{"_index":1257,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twice",{"_index":521,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["two",{"_index":615,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.ts",{"_index":1180,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":1456,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["un",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undetermined",{"_index":614,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["une",{"_index":352,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["unit",{"_index":1438,"title":{},"body":{"index.html":{}}}],["unsoloed",{"_index":792,"title":{},"body":{"components/RhythmComponent.html":{}}}],["update",{"_index":610,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["updated",{"_index":597,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["url(\"../../assets/images/metronome/metronome",{"_index":551,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["url(\"../../assets/images/plus.svg",{"_index":383,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["use",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["used",{"_index":61,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{}}}],["usehook",{"_index":17,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["u|g560|gene|gf",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["v",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":907,"title":{},"body":{"classes/Signature.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["variable",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1459,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars.$dark_gray",{"_index":481,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$deep_dark_gray",{"_index":484,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$disabled_opacity",{"_index":497,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$gray",{"_index":468,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$light_gray",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["vars.$middle_dark_gray",{"_index":1116,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$orange",{"_index":860,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$phone_max_width",{"_index":489,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$red",{"_index":862,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$transparent_middle_dark_gray",{"_index":1115,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$transparent_orange",{"_index":1108,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$transparent_red",{"_index":1112,"title":{},"body":{"components/TrackComponent.html":{}}}],["version",{"_index":1413,"title":{},"body":{"index.html":{}}}],["via",{"_index":1441,"title":{},"body":{"index.html":{}}}],["vibraphone",{"_index":1254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1070,"title":{},"body":{"components/TrackComponent.html":{}}}],["viewchild('instruinput",{"_index":1072,"title":{},"body":{"components/TrackComponent.html":{}}}],["viewencapsulation.none",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["viola",{"_index":1284,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["violin",{"_index":1283,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visual",{"_index":59,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["visually",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["voice_oohs",{"_index":1296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["volume",{"_index":1039,"title":{},"body":{"components/TrackComponent.html":{}}}],["votre",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["w])|libw|lynx|m1",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["wa|abac|ac(er|oo|s",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["webc|whit|wi(g",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["webkit",{"_index":459,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{}}}],["wether",{"_index":35,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["whether",{"_index":592,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["whistle",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whole",{"_index":1184,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whole_note",{"_index":1183,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["width",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["without",{"_index":87,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["woodblock",{"_index":1358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["works",{"_index":507,"title":{},"body":{"components/MeasureComponent.html":{},"components/NoteComponent.html":{}}}],["write",{"_index":34,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["x",{"_index":845,"title":{},"body":{"components/RhythmComponent.html":{}}}],["xylophone",{"_index":1256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["y",{"_index":844,"title":{},"body":{"components/RhythmComponent.html":{}}}],["your|zeto|zte",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["z",{"_index":469,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["zone.js",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddOn.html":{"url":"classes/AddOn.html","title":"class - AddOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note-representation.ts\n        \n\n            \n                Description\n            \n            \n                The add on on top of a note's representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                number\n                            \n                            \n                                    Private\n                                useHook\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumber\n                            \n                            \n                                getUseHook\n                            \n                            \n                                setNumber\n                            \n                            \n                                setUseHook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, useHook: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note-representation.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {\n\n                                                        \n                                                \n                                                \n                                                        useHook\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:13\n                            \n                        \n\n                \n                    \n                        The number to write\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            useHook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:17\n                            \n                        \n\n                \n                    \n                        Wether or not the number should be sown with an hook\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUseHook\n                        \n                        \n                    \n                \n            \n            \n                \ngetUseHook()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetNumber(number: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUseHook\n                        \n                        \n                    \n                \n            \n            \n                \nsetUseHook(useHook: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    useHook\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"./../../environments/environment\";\n\nexport type AddOnJson = {number: number, useHook: boolean};\n\n\n/**\n * The add on on top of a note's representation\n */\nclass AddOn {\n  /**\n   * The number to write\n   */\n  private number: number;\n  /**\n   * Wether or not the number should be sown with an hook\n   */\n  private useHook: boolean;\n\n\n  /**\n   * @param {number} number {@link AddOn#number}\n   * @param {boolean} useHook {@link AddOn#useHook}\n   */\n  constructor(number: number, useHook: boolean) {\n    this.number = number;\n    this.useHook = useHook;\n  }\n\n  /**\n   * @return {@link AddOn#number}\n   */\n  getNumber(): number {\n    return this.number;\n  }\n  /**\n   * @param {number} {@link AddOn#number}\n   */\n  setNumber(number: number): void {\n    this.number = number;\n  }\n\n  /**\n   * @return {@link AddOn#useHook}\n   */\n  getUseHook(): boolean {\n    return this.useHook;\n  }\n  /**\n   * @param {boolean} {@link AddOn#useHook}\n   */\n  setUseHook(useHook: boolean): void {\n    this.useHook = useHook;\n  }\n}\n\n/**\n * This class references the visual representation of any notes.\n *\n * Used in the enums BinaryNote and TernaryNote.\n */\nexport class NoteRepresentation {\n  /**\n   * @ignore\n  */\n  private static dirPath: string = \"../\" + environment.pathsFromApp.rythmsImg;\n  /**\n   * @ignore\n  */\n  private static extension: string = \".svg\";\n\n  /**\n   * The paths to the different parts of the note's Img, in order\n   */\n  private imgsPaths: string[] = new Array();\n  /**\n   * {@link AddOn}\n   */\n  private addOn: AddOn | null = null;\n\n\n  /**\n   * @param {string[]} imgsNames The names of the images, in order, used to form the note without the extention.\n   * @param {AddOnJson|null} addOn Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n   *\n   * @example\n   * let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\n   * let quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n   */\n  constructor(imgsNames: string[], addOn: AddOnJson | null) {\n    for(let i = 0 ; i = this.imgsPaths.length) {\n    //}\n    return this.imgsPaths[i];\n  }\n  getImgsPathsLength(): number {\n    return this.imgsPaths.length;\n  }\n  addToImgsPaths(imgName: string, index: number | null): void {\n    if(index == null || index == this.imgsPaths.length) {\n      this.imgsPaths.push(this.convertImgNameToPath(imgName));\n    } else {\n      this.imgsPaths.splice(index, 0, this.convertImgNameToPath(imgName));\n    }\n  }\n  removeFromImgsPaths(imgName: string): void {\n    let index:number = this.imgsPaths.indexOf(imgName);\n    if(index != -1) {\n      this.imgsPaths.splice(index, 1);\n    }\n  }\n  removeFromImgsPathsAt(index: number): void {\n    this.imgsPaths.splice(index, 1);\n  }\n\n  setAddOn(addOn: AddOnJson | null) {\n    if(addOn != null) {\n      this.addOn = new AddOn(addOn.number, addOn.useHook);\n    } else {\n      this.addOn = null;\n    }\n  }\n  getAddOnNumber(): number | null {\n    if(this.addOn != null) {\n      return this.addOn.getNumber();\n    }\n    return null;\n  }\n  getAddOnUseHook(): boolean | null {\n    if(this.addOn != null) {\n      return this.addOn.getUseHook();\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n      || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Polyrythmique'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']//,\n  //encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title: string = 'Polyrythmique';\n  isMobile: boolean = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n      || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4));\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                @use \"~sass/vars\"\n\n:host\n  display: flex\n  width: 100%\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateTrackComponent\n\nCreateTrackComponent\n\nAppModule -->\n\nCreateTrackComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nExportMenuComponent\n\nExportMenuComponent\n\nAppModule -->\n\nExportMenuComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\nAppModule -->\n\nMeasureComponent->AppModule\n\n\n\n\n\nMetronomeComponent\n\nMetronomeComponent\n\nAppModule -->\n\nMetronomeComponent->AppModule\n\n\n\n\n\nMetronomeSoundComponent\n\nMetronomeSoundComponent\n\nAppModule -->\n\nMetronomeSoundComponent->AppModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nAppModule -->\n\nNoteComponent->AppModule\n\n\n\n\n\nPlaybarComponent\n\nPlaybarComponent\n\nAppModule -->\n\nPlaybarComponent->AppModule\n\n\n\n\n\nRhythmComponent\n\nRhythmComponent\n\nAppModule -->\n\nRhythmComponent->AppModule\n\n\n\n\n\nSaveMenuComponent\n\nSaveMenuComponent\n\nAppModule -->\n\nSaveMenuComponent->AppModule\n\n\n\n\n\nSignatureComponent\n\nSignatureComponent\n\nAppModule -->\n\nSignatureComponent->AppModule\n\n\n\n\n\nTempoComponent\n\nTempoComponent\n\nAppModule -->\n\nTempoComponent->AppModule\n\n\n\n\n\nTrackComponent\n\nTrackComponent\n\nAppModule -->\n\nTrackComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CreateTrackComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            ExportMenuComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            MeasureComponent\n                        \n                        \n                            MetronomeComponent\n                        \n                        \n                            MetronomeSoundComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            PlaybarComponent\n                        \n                        \n                            RhythmComponent\n                        \n                        \n                            SaveMenuComponent\n                        \n                        \n                            SignatureComponent\n                        \n                        \n                            TempoComponent\n                        \n                        \n                            TrackComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { RhythmComponent } from './rhythm/rhythm.component';\nimport { TrackComponent } from './track/track.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateTrackComponent } from './create-track/create-track.component';\nimport { SignatureComponent } from './signature/signature.component';\nimport { SaveMenuComponent } from './save-menu/save-menu.component';\nimport { ExportMenuComponent } from './export-menu/export-menu.component';\nimport { PlaybarComponent } from './playbar/playbar.component';\nimport { TempoComponent } from './tempo/tempo.component';\nimport { MetronomeComponent } from './metronome/metronome.component';\nimport { MeasureComponent } from './measure/measure.component';\nimport { NoteComponent } from './note/note.component';\nimport { MetronomeSoundComponent } from './metronome-sound/metronome-sound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainMenuComponent,\n    RhythmComponent,\n    TrackComponent,\n    DashboardComponent,\n    CreateTrackComponent,\n    SignatureComponent,\n    SaveMenuComponent,\n    ExportMenuComponent,\n    PlaybarComponent,\n    TempoComponent,\n    MetronomeComponent,\n    MeasureComponent,\n    NoteComponent,\n    MetronomeSoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getTitleText\n                            \n                            \n                                    Async\n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { RhythmComponent } from \"./rhythm/rhythm.component\";\nimport { MetronomeComponent } from \"./metronome/metronome.component\";\n\nconst routes: Routes = [{path: \"rhythm\", component: RhythmComponent},\n                        {path: \"rhythm-sound\", component: RhythmComponent},\n                        {path: \"metronome\", component: MetronomeComponent},\n                        {path: \"dashboard\", component: DashboardComponent},\n                        {path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\"},\n                        {path: \"**\", component: RhythmComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTrackComponent.html":{"url":"components/CreateTrackComponent.html","title":"component - CreateTrackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTrackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/create-track/create-track.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-track\n            \n\n            \n                styleUrls\n                ./create-track.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./create-track.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTrack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/create-track/create-track.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        create\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/create-track/create-track.component.ts:10\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTrack\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTrack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/create-track/create-track.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/create-track/create-track.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-create-track',\n  templateUrl: './create-track.component.html',\n  styleUrls: ['./create-track.component.sass']\n})\nexport class CreateTrackComponent implements OnInit {\n\n  @Output() create: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  createTrack(): void {\n    this.create.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n  Ajouter une piste\n\n\n    \n\n    \n                \n                    ./create-track.component.sass\n                \n                $FONT_SIZE:   1.6em\n$IMG_SIZE:    1.3em\n$MARGIN:      1rem\n\n:host\n  display: flex\n  justify-content: center\n\n\ndiv\n  display: inline-block\n  cursor: pointer\n  font-size: $FONT_SIZE\n  text-align: center\n\np\n  margin: 0\n  position: relative\n  padding: $MARGIN 0\n  padding-left: $MARGIN + 1.6 * 1.3\n\n  &::before\n    content: \"\"\n    position: absolute\n    display: inline-block\n    height: $IMG_SIZE\n    width: $IMG_SIZE\n    background-size: $IMG_SIZE $IMG_SIZE\n    background-image: url(\"../../assets/images/plus.svg\")\n    background-repeat: no-repeat\n    top: 50%\n    transform: translateY(-50%) translateX(-$MARGIN - 1.6 * 1.3)\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ajouter une piste'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTrackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/dashboard/dashboard.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Tableau de bord\n\n\n  Nouveau projet\n\n  \n    \n      Polyrytmie simple\n      \n    \n\n    \n      Polyrytmie sur fond musical\n      \n    \n  \n\n\n\n  Ouvrir un projet\n  \n    \n      Depuis votre appareil\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.sass\n                \n                @use \"~sass/vars\"\n\nsection\n  width: 100%\n  padding: 3.5rem 0\n\nh2, h3\n  text-align: center\n\nh3\n  margin: 0\n\nsection>div\n  width: 60vw\n  margin: auto\n  display: flex\n  justify-content: space-evenly\n\n  &>a, &>div\n    display: flex\n    flex-direction: column\n    justify-content: space-between\n    background-color: vars.$LIGHT_GRAY\n    border-radius: 1.5rem\n    width : 12rem\n    min-height : 12rem\n    padding: 1rem\n    box-sizing: border-box\n\n  &>div\n    cursor: pointer\n\nimg\n  display: block\n  height: 5rem\n  width: 5rem\n  margin: auto\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tableau de bord  Nouveau projet            Polyrytmie simple                    Polyrytmie sur fond musical              Ouvrir un projet            Depuis votre appareil            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportMenuComponent.html":{"url":"components/ExportMenuComponent.html","title":"component - ExportMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExportMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/export-menu/export-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-menu\n            \n\n            \n                styleUrls\n                ./export-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./export-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/export-menu/export-menu.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/export-menu/export-menu.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-export-menu',\n  templateUrl: './export-menu.component.html',\n  styleUrls: ['./export-menu.component.sass']\n})\nexport class ExportMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./export-menu.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-menu/main-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n            \n                styleUrls\n                ./main-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/main-menu/main-menu.component.ts:12\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-menu/main-menu.component.ts:12\n                            \n                        \n                \n                    \n                        The number of the active tab\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-menu/main-menu.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setActive\n                        \n                        \n                    \n                \n            \n            \n                \nsetActive(active: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-menu/main-menu.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.sass']\n})\nexport class MainMenuComponent implements OnInit {\n  /**\n    The number of the active tab\n  */\n  @Input() active: number = 1;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setActive(active: number): void {\n    this.active = active;\n  }\n}\n\n    \n\n    \n        \n  MENU\n  \n    \n      \n      Créer une polyrythmie\n    \n\n    \n      \n      Créer une polyrythmie depuis une musique\n    \n    \n      \n      Métronome\n    \n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.sass\n                \n                @use \"~sass/vars\"\n\n$WIDTH: 3.5rem\n$SLOPE: ($WIDTH * 49.1) / 120.6\n$ICON_WIDTH: $WIDTH * 0.85\n\naside\n  position: -webkit-sticky\n  position: sticky\n  top: 0\n  right: 0\n  height: 100vh\n  width: $WIDTH\n\nnav\n  height: 100%\n  width: 100%\n  display: flex\n  flex-direction: column\n\nbutton\n  display: none\n\na\n  position: relative\n  display: flex\n  align-items: center\n  justify-content: center\n  padding: 0\n  height: calc(100% / 3)\n  width: 100%\n  background-color: vars.$GRAY\n  z-index: 10\n\n  &::before, &::after\n    content: \"\"\n    position: absolute\n    border-color: transparent transparent transparent vars.$GRAY\n    border-style: solid\n    height: 0\n    width: 0\n  &::before\n    top: 0\n    border-width: $SLOPE 0 0 $WIDTH\n    transform: translateY(-100%)\n  &::after\n    bottom: 0\n    border-width: 0 0 $SLOPE $WIDTH\n    transform: translateY(100%)\n\n  &:first-child::before\n    border: none\n  &:last-child::after\n    border: none\n\n\n.middle\n  background-color: vars.$DARK_GRAY\n  z-index: 9\n\n  &::before, &::after\n    border-color: transparent transparent transparent vars.$DARK_GRAY\n.dark\n  background-color: vars.$DEEP_DARK_GRAY\n  z-index: 8\n\n  &::before, &::after\n    border-color: transparent transparent transparent vars.$DEEP_DARK_GRAY\n\n\nspan\n  display: none\nimg\n  width: $ICON_WIDTH\n\n\n@media (max-width: vars.$PHONE_MAX_WIDTH)\n  aside\n    position: fixed\n    left: 0\n    background-color: vars.$GRAY\n\n  button\n    display: inline-block\n    &:not(.active)+nav\n      display: none\n    //&:not(.active)\n\n  nav\n    width: 40%\n    min-width: 275px\n    justify-content: space-evenly\n    z-index: 2\n\n    &::after\n      content: \"\"\n      width: 500%\n      height: 100vh\n      position: absolute\n      top: 0\n      left: 100%\n      z-index: 1\n      background-color: vars.$DARK_GRAY\n      opacity: 1 - vars.$DISABLED_OPACITY\n\n    a\n      background-color: transparent\n      height: auto\n      justify-content: flex-start\n      padding-left: 1rem\n      box-sizing: border-box\n\n      &::before, &::after\n        border: none\n\n      span\n        display: inline-block\n        padding: 0 0.5rem\n      img\n        width: $ICON_WIDTH * 0.75\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  MENU                  Créer une polyrythmie                    Créer une polyrythmie depuis une musique                    Métronome      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasureComponent.html":{"url":"components/MeasureComponent.html","title":"component - MeasureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/measure/measure.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-measure\n            \n\n            \n                styleUrls\n                ./measure.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./measure.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/measure/measure.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/measure/measure.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.sass']\n})\nexport class MeasureComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        measure works!\n\n    \n\n    \n                \n                    ./measure.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'measure works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetronomeComponent.html":{"url":"components/MetronomeComponent.html","title":"component - MetronomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetronomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/metronome/metronome.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metronome\n            \n\n            \n                styleUrls\n                ./metronome.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./metronome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bpm\n                            \n                            \n                                runningMetronome\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetronomeMovementLengthInSec\n                            \n                            \n                                setMetronomeBpm\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMetronomeMovementLengthInSec\n                        \n                        \n                    \n                \n            \n            \n                \ngetMetronomeMovementLengthInSec()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:50\n                \n            \n\n\n            \n                \n                    Get the bpm at which the metronome beats\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time it takes for the metronome to tick twice (in sec)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMetronomeBpm\n                        \n                        \n                    \n                \n            \n            \n                \nsetMetronomeBpm(bpm: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:41\n                \n            \n\n\n            \n                \n                    Set the bpm at which the metronome beats\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bpm\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The beat per minute ratio the metronome will beat at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:57\n                \n            \n\n\n            \n                \n                    Starts the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:64\n                \n            \n\n\n            \n                \n                    Stops the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bpm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runningMetronome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Metronome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:21\n                            \n                        \n\n                \n                    \n                        The metronome\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tempo } from '../classes/tempo';\nimport { Metronome } from '../classes/metronome';\n\n@Component({\n  selector: 'app-metronome',\n  templateUrl: './metronome.component.html',\n  styleUrls: ['./metronome.component.sass']\n})\n\n/**\n * Used to define the Metronome\n */\nexport class MetronomeComponent implements OnInit {\n\n  bpm: number = 60;\n\n  /**\n    * The metronome\n    */\n  runningMetronome: Metronome;\n\n  /**\n  * @ignore\n  */\n  constructor() {\n    this.runningMetronome = new Metronome(this.bpm, null);\n  }\n\n  /**\n  * @ignore\n  */\n  ngOnInit(): void {\n  }\n\n  /**\n  * Set the bpm at which the metronome beats\n  *\n  *@param {number} bpm The beat per minute ratio the metronome will beat at\n  */\n  setMetronomeBpm(bpm: number){\n    this.runningMetronome.setBpm(bpm);\n  }\n\n  /**\n  * Get the bpm at which the metronome beats\n  *\n  *@return {number} The time it takes for the metronome to tick twice (in sec)\n  */\n  getMetronomeMovementLengthInSec(){\n    return this.runningMetronome.getBpm()/30;\n  }\n\n  /**\n  * Starts the metronome\n  */\n  start(){\n    this.runningMetronome.start();\n  }\n\n  /**\n  * Stops the metronome\n  */\n  stop(){\n\n  }\n\n}\n\n    \n\n    \n        \n    \n      \n\n    \n\n\n    \n\n    \n                \n                    ./metronome.component.sass\n                \n                $METRONOME_HEIGHT: 30rem\n$METRONOME_WIDTH: ($METRONOME_HEIGHT * 90) / 112.5\n\n.metronome\n    background-image: url(\"../../assets/images/metronome/metronome-base.svg\")\n    background-size: contain\n    background-repeat: no-repeat\n    width: $METRONOME_WIDTH\n    height: $METRONOME_HEIGHT\n    position: relative\n\n#stick\n  position: absolute\n  left: 50%\n  height: ($METRONOME_HEIGHT * 0.8373333)\n  width: ($METRONOME_WIDTH * 0.1688888)\n  transform-origin: 50% 100%\n  transform: translateX(-50%)\n\n\n@mixin keyframes-animation($name)\n  @-webkit-keyframes #{$name}\n    @content\n\n  @keyframes #{$name}\n    @content\n\n@mixin prefix-property($name, $value)\n  -webkit-#{$name}: $value\n          #{$name}: $value\n\n@include keyframes-animation(rotating)\n  0%\n    @include prefix-property(transform, translateX(-50%) rotate(-45deg))\n  25%\n    @include prefix-property(transform, translateX(-50%) rotate(0deg) linear)\n  50%\n    @include prefix-property(transform, translateX(-50%) rotate(45deg))\n  75%\n    @include prefix-property(transform, translateX(-50%) rotate(0deg) linear)\n  100%\n    @include prefix-property(transform, translateX(-50%) rotate(-45deg))\n\n#stick\n  -webkit-animation: rotating 2s ease-in-out infinite\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MetronomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetronomeSoundComponent.html":{"url":"components/MetronomeSoundComponent.html","title":"component - MetronomeSoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetronomeSoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/metronome-sound/metronome-sound.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metronome-sound\n            \n\n            \n                styleUrls\n                ./metronome-sound.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./metronome-sound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metronome\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                playMetronome\n                            \n                            \n                                stopMetronome\n                            \n                            \n                                toggleMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isPlaying\n                            \n                            \n                                signature\n                            \n                            \n                                tempo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isPlaying\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:38\n                            \n                        \n                \n                    \n                        Whether or not the sound is playing. Used to know when to start the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        signature\n                    \n                \n                \n                    \n                        Type :         Signature\n\n                    \n                \n                \n                    \n                        Default value : new Signature(null, null)\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:34\n                            \n                        \n                \n                    \n                        The signature used for the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tempo\n                    \n                \n                \n                    \n                        Type :         Tempo\n\n                    \n                \n                \n                    \n                        Default value : new Tempo(null, null)\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:30\n                            \n                        \n                \n                    \n                        The tempo used for the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:63\n                \n            \n\n\n            \n                \n                    Called each time the parent's component update the Input attributes of the component.\nUpdate the metronome and start it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The changes get from the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playMetronome\n                        \n                        \n                    \n                \n            \n            \n                \nplayMetronome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:91\n                \n            \n\n\n            \n                \n                    Play the metronome for an undetermined time, two measure or not at all according to the mode of the componenet\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopMetronome\n                        \n                        \n                    \n                \n            \n            \n                \nstopMetronome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:108\n                \n            \n\n\n            \n                \n                    Stop the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:84\n                \n            \n\n\n            \n                \n                    Toggle the mode from 0 -> 1 -> 2 -> 0 ...\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metronome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Metronome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:43\n                            \n                        \n\n                \n                    \n                        The metronome binded to the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:25\n                            \n                        \n\n                \n                    \n                        The sound mode of the component.\n0: sound all along\n1: sound on the two first empty  measures\n2: no sound\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, SimpleChanges, OnChanges, Input } from '@angular/core';\n\nimport { Tempo } from \"../classes/tempo\";\nimport { Signature } from \"../classes/signature\";\nimport { Metronome } from \"../classes/metronome\";\n\n@Component({\n  selector: 'app-metronome-sound',\n  templateUrl: './metronome-sound.component.html',\n  styleUrls: ['./metronome-sound.component.sass']\n})\n/**\n * This component is a button that allows to select the type of sound of the metronome,\n *   which starts when its parent component's attribute binded to the isPlaying attribute\n *   pass to true and stop when this attribute pass to false if the mode correspond to 0 : sound all along\n */\nexport class MetronomeSoundComponent implements OnInit, OnChanges {\n  /**\n   * The sound mode of the component.\n   *\n   * 0: sound all along\n   * 1: sound on the two first empty  measures\n   * 2: no sound\n   */\n  mode: number = 0;\n\n  /**\n   * The tempo used for the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"tempo\") tempo: Tempo = new Tempo(null, null);\n  /**\n   * The signature used for the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"signature\") signature: Signature = new Signature(null, null);\n  /**\n   * Whether or not the sound is playing. Used to know when to start the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"isPlaying\") isPlaying: boolean = false;\n\n  /**\n   * The metronome binded to the component\n   */\n  metronome: Metronome;\n\n  /**\n   * @ignore()\n   */\n  constructor() {\n    this.metronome = new Metronome(this.tempo.getBPM(), null);\n  }\n  /**\n   * @ignore()\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Called each time the parent's component update the {@link Input|Input} attributes of the component.\n   * Update the metronome and start it\n   *\n   * @param {SimpleChanges} changes The changes get from the parent\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    for(const propName in changes) {\n      if(changes.hasOwnProperty(propName)) {\n        if(propName === \"tempo\") {\n          this.metronome = new Metronome(this.tempo.getBPM(), null);\n        } else if(propName === \"isPlaying\") {\n          if(changes[\"isPlaying\"].currentValue) {\n            this.playMetronome();\n          } else {\n            if(changes[\"isPlaying\"].previousValue) {\n              this.stopMetronome();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggle the {@link MetronomeSoundComponent#mode|mode} from 0 -> 1 -> 2 -> 0 ...\n   */\n  toggleMode(): void {\n    this.mode = (this.mode + 1) % 3;\n  }\n\n  /**\n   * Play the metronome for an undetermined time, two measure or not at all according to the {@link MetronomeSoundComponent#mode|mode} of the componenet\n   */\n  playMetronome(): void {\n    if(this.mode != 2) {\n      this.metronome.start();\n      if(this.mode == 1) {\n          // The time of two measures (* 60000 to get it in ms (12000 = 60000 * 2))\n        let time = ((this.signature.getTop() * (this.tempo.getNoteNumber() / this.signature.getBottomNumber())) / this.tempo.getBPM()) * 120000;\n        let timer = setTimeout(function(metronome: Metronome, isPlaying: boolean) {\n          metronome.stop();\n          isPlaying = false;\n        }, time, this.metronome, this.isPlaying);\n      }\n    }\n  }\n\n  /**\n   * Stop the metronome\n   */\n  stopMetronome(): void {\n    this.metronome.stop();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./metronome-sound.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MetronomeSoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note.ts\n        \n\n            \n                Description\n            \n            \n                This class is used to store notes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                duration\n                            \n                            \n                                    Private\n                                isBinary\n                            \n                            \n                                    Private\n                                timecode\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDuration\n                            \n                            \n                                getTimecode\n                            \n                            \n                                retrieveNoteType\n                            \n                            \n                                setDuration\n                            \n                            \n                                setTimecode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timecode: number, duration: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timecode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        duration\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timecode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BinaryNote | TernaryNote\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDuration\n                        \n                        \n                    \n                \n            \n            \n                \ngetDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTimecode\n                        \n                        \n                    \n                \n            \n            \n                \ngetTimecode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            retrieveNoteType\n                        \n                        \n                    \n                \n            \n            \n                \nretrieveNoteType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BinaryNote | TernaryNote\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDuration\n                        \n                        \n                    \n                \n            \n            \n                \nsetDuration(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimecode\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimecode(timecode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timecode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BinaryNote } from \"../enums/binary-note\";\nimport { TernaryNote } from \"../enums/ternary-note\";\n\n/**\n * This class is used to store notes\n */\nexport class Note {\n  private timecode: number;\n  private duration: number;\n\n  private type: BinaryNote | TernaryNote;\n\n  private isBinary: boolean = true;\n\n\n  constructor(timecode: number, duration: number) {\n    this.timecode = timecode;\n    this.duration = duration;\n\n    // TODO: FOLLOWING LINE TO REPLACE WITH POLYRYTHM LIBRAIRY INTEGRATION\n    this.type = this.retrieveNoteType()\n  }\n\n\n  getTimecode(): number {\n    return this.timecode;\n  }\n  setTimecode(timecode: number): void {\n    this.timecode = timecode;\n  }\n\n  getDuration(): number {\n    return this.duration;\n  }\n  setDuration(duration: number): void {\n    this.duration = duration;\n  }\n\n\n  retrieveNoteType(): BinaryNote | TernaryNote {\n    if(this.isBinary) {\n      return BinaryNote._4N;\n    } else {\n      return TernaryNote._4N;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/note/note.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-note\n            \n\n            \n                styleUrls\n                ./note.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/note/note.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/note/note.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.sass']\n})\nexport class NoteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        note works!\n\n    \n\n    \n                \n                    ./note.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'note works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoteRepresentation.html":{"url":"classes/NoteRepresentation.html","title":"class - NoteRepresentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoteRepresentation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note-representation.ts\n        \n\n            \n                Description\n            \n            \n                This class references the visual representation of any notes.\nUsed in the enums BinaryNote and TernaryNote.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addOn\n                            \n                            \n                                    Private\n                                imgsPaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToImgsPaths\n                            \n                            \n                                    Private\n                                convertImgNameToPath\n                            \n                            \n                                getAddOnNumber\n                            \n                            \n                                getAddOnUseHook\n                            \n                            \n                                getImgPathAt\n                            \n                            \n                                getImgsPaths\n                            \n                            \n                                getImgsPathsLength\n                            \n                            \n                                removeFromImgsPaths\n                            \n                            \n                                removeFromImgsPathsAt\n                            \n                            \n                                setAddOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imgsNames: string[], addOn: AddOnJson | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note-representation.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        imgsNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The names of the images, in order, used to form the note without the extention.\n\n                                                        \n                                                \n                                                \n                                                        addOn\n                                                  \n                                                        \n                                                                        AddOnJson | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n\n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\nlet quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddOn | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:78\n                            \n                        \n\n                \n                    \n                        AddOn\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            imgsPaths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:74\n                            \n                        \n\n                \n                    \n                        The paths to the different parts of the note's Img, in order\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \naddToImgsPaths(imgName: string, index: number | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertImgNameToPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertImgNameToPath(imgName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddOnNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddOnNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddOnUseHook\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddOnUseHook()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     boolean | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgPathAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgPathAt(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgsPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgsPathsLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgsPathsLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromImgsPaths(imgName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromImgsPathsAt\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromImgsPathsAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAddOn\n                        \n                        \n                    \n                \n            \n            \n                \nsetAddOn(addOn: AddOnJson | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addOn\n                                    \n                                                AddOnJson | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"./../../environments/environment\";\n\nexport type AddOnJson = {number: number, useHook: boolean};\n\n\n/**\n * The add on on top of a note's representation\n */\nclass AddOn {\n  /**\n   * The number to write\n   */\n  private number: number;\n  /**\n   * Wether or not the number should be sown with an hook\n   */\n  private useHook: boolean;\n\n\n  /**\n   * @param {number} number {@link AddOn#number}\n   * @param {boolean} useHook {@link AddOn#useHook}\n   */\n  constructor(number: number, useHook: boolean) {\n    this.number = number;\n    this.useHook = useHook;\n  }\n\n  /**\n   * @return {@link AddOn#number}\n   */\n  getNumber(): number {\n    return this.number;\n  }\n  /**\n   * @param {number} {@link AddOn#number}\n   */\n  setNumber(number: number): void {\n    this.number = number;\n  }\n\n  /**\n   * @return {@link AddOn#useHook}\n   */\n  getUseHook(): boolean {\n    return this.useHook;\n  }\n  /**\n   * @param {boolean} {@link AddOn#useHook}\n   */\n  setUseHook(useHook: boolean): void {\n    this.useHook = useHook;\n  }\n}\n\n/**\n * This class references the visual representation of any notes.\n *\n * Used in the enums BinaryNote and TernaryNote.\n */\nexport class NoteRepresentation {\n  /**\n   * @ignore\n  */\n  private static dirPath: string = \"../\" + environment.pathsFromApp.rythmsImg;\n  /**\n   * @ignore\n  */\n  private static extension: string = \".svg\";\n\n  /**\n   * The paths to the different parts of the note's Img, in order\n   */\n  private imgsPaths: string[] = new Array();\n  /**\n   * {@link AddOn}\n   */\n  private addOn: AddOn | null = null;\n\n\n  /**\n   * @param {string[]} imgsNames The names of the images, in order, used to form the note without the extention.\n   * @param {AddOnJson|null} addOn Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n   *\n   * @example\n   * let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\n   * let quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n   */\n  constructor(imgsNames: string[], addOn: AddOnJson | null) {\n    for(let i = 0 ; i = this.imgsPaths.length) {\n    //}\n    return this.imgsPaths[i];\n  }\n  getImgsPathsLength(): number {\n    return this.imgsPaths.length;\n  }\n  addToImgsPaths(imgName: string, index: number | null): void {\n    if(index == null || index == this.imgsPaths.length) {\n      this.imgsPaths.push(this.convertImgNameToPath(imgName));\n    } else {\n      this.imgsPaths.splice(index, 0, this.convertImgNameToPath(imgName));\n    }\n  }\n  removeFromImgsPaths(imgName: string): void {\n    let index:number = this.imgsPaths.indexOf(imgName);\n    if(index != -1) {\n      this.imgsPaths.splice(index, 1);\n    }\n  }\n  removeFromImgsPathsAt(index: number): void {\n    this.imgsPaths.splice(index, 1);\n  }\n\n  setAddOn(addOn: AddOnJson | null) {\n    if(addOn != null) {\n      this.addOn = new AddOn(addOn.number, addOn.useHook);\n    } else {\n      this.addOn = null;\n    }\n  }\n  getAddOnNumber(): number | null {\n    if(this.addOn != null) {\n      return this.addOn.getNumber();\n    }\n    return null;\n  }\n  getAddOnUseHook(): boolean | null {\n    if(this.addOn != null) {\n      return this.addOn.getUseHook();\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaybarComponent.html":{"url":"components/PlaybarComponent.html","title":"component - PlaybarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaybarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/playbar/playbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playbar\n            \n\n            \n                styleUrls\n                ./playbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./playbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/playbar/playbar.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/playbar/playbar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-playbar',\n  templateUrl: './playbar.component.html',\n  styleUrls: ['./playbar.component.sass']\n})\nexport class PlaybarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./playbar.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n:host\n  display: flex\n  justify-content: space-between\n\n  &>button:first-child\n    margin-right: 0.75rem\n  &>button:nth-child(2)\n    margin-right: 0.5rem\n\n  &>button:nth-child(1)>img\n    transform: rotateY(180deg)\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaybarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RhythmComponent.html":{"url":"components/RhythmComponent.html","title":"component - RhythmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RhythmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rhythm/rhythm.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rhythm\n            \n\n            \n                styleUrls\n                ./rhythm.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./rhythm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTapVar\n                            \n                            \n                                nbOfSoloTracks\n                            \n                            \n                                recording\n                            \n                            \n                                selectedTrackId\n                            \n                            \n                                selectedTrackIndex\n                            \n                            \n                                signature\n                            \n                            \n                                startRecord\n                            \n                            \n                                startTapVar\n                            \n                            \n                                tempo\n                            \n                            \n                                tracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrack\n                            \n                            \n                                endTap\n                            \n                            \n                                getTrackIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelectedTrackId\n                            \n                            \n                                setTempo\n                            \n                            \n                                soloedTrack\n                            \n                            \n                                startTap\n                            \n                            \n                                toggleRecording\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTrack\n                        \n                        \n                    \n                \n            \n            \n                \naddTrack(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endTap\n                        \n                        \n                    \n                \n            \n            \n                \nendTap(evt: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrackIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrackIndex(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:107\n                \n            \n\n\n            \n                \n                    Get the index of a track inside the componenet's tracks array attribute knowing it's id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the track to find in the compoenent's tracks array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            let index: number = getTrackIndex(track.getId());\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The ondex of the track which id was given in parameter inside the component's tracks array attribute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedTrackId\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedTrackId(id: number | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTempo\n                        \n                        \n                    \n                \n            \n            \n                \nsetTempo(tempo: Tempo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tempo\n                                    \n                                                Tempo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            soloedTrack\n                        \n                        \n                    \n                \n            \n            \n                \nsoloedTrack(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:121\n                \n            \n\n\n            \n                \n                    Function called every time a child componenet track's sound plan change to solo or from solo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        true if a track have been soloed, false if it had been unsoloed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTap\n                        \n                        \n                    \n                \n            \n            \n                \nstartTap(evt: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleRecording\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleRecording()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTapVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbOfSoloTracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recording\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrackId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrackIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Signature\n\n                        \n                    \n                    \n                        \n                            Default value : new Signature(null, null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTapVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tempo\n\n                        \n                    \n                    \n                        \n                            Default value : new Tempo(null, null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Track[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Track } from \"../classes/track\";\nimport { Note } from \"../classes/note\";\nimport { Tempo } from \"../classes/tempo\";\nimport { Signature } from \"../classes/signature\";\n\n\n@Component({\n  selector: 'app-rhythm',\n  templateUrl: './rhythm.component.html',\n  styleUrls: ['./rhythm.component.sass']\n})\nexport class RhythmComponent implements OnInit {\n  tracks: Track[] = new Array();\n\n  signature: Signature = new Signature(null, null);\n  tempo: Tempo = new Tempo(null, null);\n\n\n  selectedTrackId: number | null = null;\n  selectedTrackIndex: number = -1;\n  recording: boolean = false\n\n  nbOfSoloTracks: number = 0;\n\n  startRecord: Date = new Date();\n  startTapVar: Date = new Date();\n  endTapVar: Date = new Date();\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addTrack(bool: boolean): void {\n    if(bool) {\n      this.tracks.push(new Track());\n    }\n  }\n\n  toggleRecording(): void {\n    if(this.selectedTrackId) {\n      this.recording = !this.recording;\n      this.startRecord = new Date();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  addNote(evt: Event): void {\n\n  }\n\n  startTap(evt: Event): void {\n    let time = ((this.signature.getTop() * (this.tempo.getNoteNumber() / this.signature.getBottomNumber())) / this.tempo.getBPM()) * 120000;\n    let timer = setTimeout(function(startTapVar: Date) {\n      startTapVar = new Date();\n    }, time, this.startTapVar);\n\n  }\n\n  endTap(evt: Event): void {\n    this.endTapVar = new Date();\n\n      // In seconds\n    let timecode: number = (this.startTapVar.getTime() - this.startRecord.getTime()) / 1000;\n    let duration: number = (this.endTapVar.getTime() - this.startTapVar.getTime()) / 1000;\n\n    this.tracks[this.selectedTrackIndex].addNote(new Note(timecode, duration));\n  }\n\n  setTempo(tempo: Tempo):void {\n    this.tempo = tempo;\n  }\n\n\n  setSelectedTrackId(id: number | null): void {\n    if(!this.recording) {\n      // Put the last selected (this.selectedTrackId) track component's inside attribute isSelected as false\n      this.selectedTrackId = id;\n\n      if(id) {\n        this.selectedTrackIndex = this.getTrackIndex(id);\n      } else {\n        this.selectedTrackIndex = -1;\n      }\n    } else {\n      // Reput the (id) track component's inside attribute isSelected as false\n    }\n  }\n\n\n  /**\n   * Get the index of a track inside the componenet's tracks array attribute knowing it's id\n   *\n   * @example\n   * let index: number = getTrackIndex(track.getId());\n   *\n   * @param {number} id The id of the track to find in the compoenent's tracks array\n   * @returns {number} The ondex of the track which id was given in parameter inside the component's tracks array attribute\n   */\n  getTrackIndex(id: number): number {\n    for(let i = 0 ; i \n    \n\n    \n        Créer une polyrythmie\n\n\n  \n  \n\n\n\n  \n    \n      \n      \n    \n\n    \n      \n      \n        \n        \n      \n    \n\n    \n      \n      \n    \n  \n\n  START\n  TAP\n\n  \n    \n\n    \n    \n      \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./rhythm.component.sass\n                \n                @use \"~sass/vars\"\n\n$TAP_BUTTON_SIZE: 8rem\n\n$CONTROLS_HEIGHT: 12rem\n\n$BUTTON_SIZE: 3rem\n\n:host\n  display: flex\n  flex-direction: column\n  width: 100%\n  flex-grow: 1\n  max-height: 100vh\n\n\nsection\n  width: 100%\n\n#tracks\n  padding: 0.5rem 0\n  overflow-y: auto\n  overflow-x: hidden\n  scroll-behavior: smooth\n  max-height: calc(100vh - $CONTROLS_HEIGHT)\n\n#controls\n  margin-top: auto\n  margin-bottom: 2rem\n  padding-top: 0.5rem\n  display: flex\n  height: $CONTROLS_HEIGHT\n  align-items: center\n\n  &>div\n    flex-grow: 1\n\n  button\n    height: $BUTTON_SIZE\n    width: $BUTTON_SIZE\n\n    &>img\n      height: 100%\n      width: 100%\n\n  #generals, #measure-and-track\n    width: calc(100% - 3.5rem)\n    // = 100% - $TAP_BUTTON_SIZE / 2 - 0.5rem\n\n  #generals\n    display: flex\n    justify-content: space-evenly\n    margin-right: 0.5rem\n\n    &>div\n      flex-grow: 1\n      display: flex\n      flex-direction: column\n      justify-content: space-between\n      align-items: center\n    &>div:nth-child(1), &>div:nth-child(2)\n      margin: 2rem 0\n\n      .anacrouse\n        width: 6rem\n\n    app-signature\n      margin-bottom: 0.5rem\n\n  #start-button, #tap-button\n    height: $TAP_BUTTON_SIZE\n    width: $TAP_BUTTON_SIZE\n\n    border-width: 0.75rem\n    border-style: solid\n    border-radius: 50%\n    flex-shrink: 0\n\n  #start-button\n    font-size: 1.8em\n    border-color: vars.$ORANGE\n\n  #tap-button\n    font-size: 2.4em\n    border-color: vars.$RED\n\n  #measure-and-track\n    margin-left: 0.5rem\n    display: flex\n    justify-content: flex-end\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Créer une polyrythmie                                                                                            START  TAP                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RhythmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveMenuComponent.html":{"url":"components/SaveMenuComponent.html","title":"component - SaveMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/save-menu/save-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-save-menu\n            \n\n            \n                styleUrls\n                ./save-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./save-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/save-menu/save-menu.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/save-menu/save-menu.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-save-menu',\n  templateUrl: './save-menu.component.html',\n  styleUrls: ['./save-menu.component.sass']\n})\nexport class SaveMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./save-menu.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signature.html":{"url":"classes/Signature.html","title":"class - Signature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/signature.ts\n        \n\n            \n                Description\n            \n            \n                This class represent a signature\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bottom\n                            \n                            \n                                    Private\n                                top\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBottom\n                            \n                            \n                                getBottomImgPath\n                            \n                            \n                                getBottomName\n                            \n                            \n                                getBottomNumber\n                            \n                            \n                                getTop\n                            \n                            \n                                    Private\n                                isCompatible\n                            \n                            \n                                setBottom\n                            \n                            \n                                setTop\n                            \n                            \n                                setTopAndBottom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(top: number | null, bottom: BasicNote | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/signature.ts:15\n                            \n                        \n\n                \n                    \n                            Create a signature object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        top\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        bottom\n                                                  \n                                                        \n                                                                        BasicNote | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicNote\n\n                        \n                    \n                    \n                        \n                            Default value : BasicNote.QUARTER_NOTE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/signature.ts:15\n                            \n                        \n\n                \n                    \n                        The note used as time base. See BasicNote for more\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/signature.ts:10\n                            \n                        \n\n                \n                    \n                        The number of times of each measure\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottom\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:56\n                \n            \n\n\n            \n                \n                    Get the bottom's value\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomImgPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:118\n                \n            \n\n\n            \n                \n                    Get the image path associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomName\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:109\n                \n            \n\n\n            \n                \n                    Get the name associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:100\n                \n            \n\n\n            \n                \n                    Get the number associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTop\n                        \n                        \n                    \n                \n            \n            \n                \ngetTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:37\n                \n            \n\n\n            \n                \n                    Get the top's value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isCompatible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isCompatible(top: number, bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:87\n                \n            \n\n\n            \n                \n                    Check if the top and bottom\n   number of the signature are compatible\nNOT FINISHED\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBottom\n                        \n                        \n                    \n                \n            \n            \n                \nsetBottom(bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:65\n                \n            \n\n\n            \n                \n                    Set the bottom's value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTop\n                        \n                        \n                    \n                \n            \n            \n                \nsetTop(top: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:45\n                \n            \n\n\n            \n                \n                    Set the top's value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTopAndBottom\n                        \n                        \n                    \n                \n            \n            \n                \nsetTopAndBottom(top: number, bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:75\n                \n            \n\n\n            \n                \n                    Set both top and\n   bottom values of the signature\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BasicNote } from \"../enums/basic-note\";\n\n/**\n * This class represent a signature\n */\nexport class Signature {\n  /**\n   * The number of times of each measure\n   */\n  private top: number = 4;\n\n  /**\n   * The note used as time base. See {@link BasicNote|BasicNote} for more\n   */\n  private bottom: BasicNote = BasicNote.QUARTER_NOTE;\n\n  /**\n   * Create a signature object\n   *\n   * @param {number | null} top The {@link SignatureComponent#top|top} of the signature\n   * @param {BasicNote | null} top The {@link SignatureComponent#bottom|bottom} of the signature\n   */\n  constructor(top: number | null, bottom: BasicNote | null) {\n    if(top) {\n      this.top = top;\n    }\n    if(bottom) {\n      this.bottom = bottom;\n    }\n  }\n\n  /**\n   * Get the {@link SignatureComponent#top|top}'s value\n   *\n   * @returns The {@link SignatureComponent#top|top} of the signature\n   */\n  getTop(): number {\n    return this.top;\n  }\n  /**\n   * Set the {@link SignatureComponent#top|top}'s value\n   *\n   * @param {number} top The new {@link SignatureComponent#top|top} of the signature\n   */\n  setTop(top: number): void {\n    if(this.isCompatible(top, this.bottom)) {\n      this.top = top;\n    }\n  }\n\n  /**\n   * Get the {@link SignatureComponent#bottom|bottom}'s value\n   *\n   * @returns The {@link SignatureComponent#bottom|bottom} of the signature\n   */\n  getBottom(): BasicNote {\n    return this.bottom;\n  }\n\n  /**\n   * Set the {@link SignatureComponent#bottom|bottom}'s value\n   *\n   * @param {BasicNote} bottom The new {@link SignatureComponent#bottom|bottom} of the signature\n   */\n  setBottom(bottom: BasicNote): void {\n    if(this.isCompatible(this.top, bottom)) {\n      this.bottom = bottom;\n    }\n  }\n\n  /**\n   * Set both {@link SignatureComponent#top|top} and\n   *   {@link SignatureComponent#bottom|bottom} values of the signature\n   */\n  setTopAndBottom(top: number, bottom: BasicNote) {\n    if(this.isCompatible(top, bottom)) {\n      this.top = top;\n      this.bottom = bottom;\n    }\n  }\n\n  /**\n   * Check if the {@link SignatureComponent#top|top} and {@link SignatureComponent#bottom|bottom}\n   *   number of the signature are compatible\n   * NOT FINISHED\n   */\n  private isCompatible(top: number, bottom: BasicNote): boolean {\n    if(top >= 1 && top % 1 == 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get the {@link BasicNote#number|number} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The {@link BasicNote#number|number} of the signature's bottom\n   */\n  getBottomNumber(): number {\n    return BasicNote.getNumber(this.bottom);\n  }\n\n  /**\n   * Get the {@link BasicNote#name|name} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The {@link BasicNote#name|name} of the signature's bottom\n   */\n  getBottomName(): string {\n    return BasicNote.getName(this.bottom);\n  }\n\n  /**\n   * Get the {@link BasicNote#imgPath|image path} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The {@link BasicNote#imgPath|image path} of the signature's bottom\n   */\n  getBottomImgPath(): string {\n    return BasicNote.getImgPath(this.bottom);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignatureComponent.html":{"url":"components/SignatureComponent.html","title":"component - SignatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signature/signature.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signature\n            \n\n            \n                styleUrls\n                ./signature.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./signature.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Signature\n\n                        \n                    \n                    \n                        \n                            Default value : new Signature(4, BasicNote.QUARTER_NOTE)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signature/signature.component.ts:19\n                            \n                        \n\n                \n                    \n                        The  signature associated to the component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { BasicNote } from \"../enums/basic-note\";\nimport { Signature } from \"../classes/signature\";\n\n@Component({\n  selector: 'app-signature',\n  templateUrl: './signature.component.html',\n  styleUrls: ['./signature.component.sass']\n})\n/**\n * Used to define the signature of a project or measure\n */\nexport class SignatureComponent implements OnInit {\n\n  /**\n   * The  {@link Signature|signature} associated to the component\n   */\n  signature: Signature = new Signature(4, BasicNote.QUARTER_NOTE);\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Signature\n  \n    {{ signature.getTop() }}\n    {{ signature.getBottomNumber() }}\n  \n\n\n    \n\n    \n                \n                    ./signature.component.sass\n                \n                @use \"~sass/vars\"\n\n.sig-root\n  background-color: vars.$LIGHT_GRAY\n  border-radius: 1.5rem\n  padding: 0.75rem 1rem\n\n  p\n   margin: 0 0 0.75rem 0\n   text-align: center\n\n  div\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n\n    span\n      font-size: 1.3em\n      padding: 0.25rem\n      cursor: pointer\n\n    span:first-child\n      margin-bottom: 0.25rem\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Signature      {{ signature.getTop() }}    {{ signature.getBottomNumber() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tempo.html":{"url":"classes/Tempo.html","title":"class - Tempo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tempo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/tempo.ts\n        \n\n            \n                Description\n            \n            \n                This class represent a tempo\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bpm\n                            \n                            \n                                    Private\n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBPM\n                            \n                            \n                                getNote\n                            \n                            \n                                getNoteImgPath\n                            \n                            \n                                getNoteName\n                            \n                            \n                                getNoteNumber\n                            \n                            \n                                setBPM\n                            \n                            \n                                setNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: BasicNote | null, bpm: number | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/tempo.ts:14\n                            \n                        \n\n                \n                    \n                            Create a tempo object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        BasicNote | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        bpm\n                                                  \n                                                        \n                                                                    number | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bpm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 60\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/tempo.ts:14\n                            \n                        \n\n                \n                    \n                        The BPM or Beat Per Minute\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            note\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicNote\n\n                        \n                    \n                    \n                        \n                            Default value : BasicNote.QUARTER_NOTE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/tempo.ts:10\n                            \n                        \n\n                \n                    \n                        The note that is beat. See BasicNote for more details\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBPM\n                        \n                        \n                    \n                \n            \n            \n                \ngetBPM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:53\n                \n            \n\n\n            \n                \n                    Get the BPM of the tempo\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNote\n                        \n                        \n                    \n                \n            \n            \n                \ngetNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:36\n                \n            \n\n\n            \n                \n                    Get the note of the tempo\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteImgPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:82\n                \n            \n\n\n            \n                \n                    Get the image path of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteName\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:90\n                \n            \n\n\n            \n                \n                    Get the name of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:74\n                \n            \n\n\n            \n                \n                    Get the number of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBPM\n                        \n                        \n                    \n                \n            \n            \n                \nsetBPM(bpm: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:61\n                \n            \n\n\n            \n                \n                    Set the BPM of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bpm\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNote\n                        \n                        \n                    \n                \n            \n            \n                \nsetNote(note: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:44\n                \n            \n\n\n            \n                \n                    Set the note of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BasicNote } from \"../enums/basic-note\";\n\n/**\n * This class represent a tempo\n */\nexport class Tempo {\n  /**\n   * The note that is beat. See {@link BasicNote|BasicNote} for more details\n   */\n  private note: BasicNote = BasicNote.QUARTER_NOTE;\n  /**\n   * The BPM or Beat Per Minute\n   */\n  private bpm: number = 60;\n\n  /**\n   * Create a tempo object\n   *\n   * @param {BasicNote|null} note The {@link Tempo#note|note} of the new tempo\n   * @param {number|null} bpm The {@link Tempo#bpm|BPM} of the new tempo\n   */\n  constructor(note: BasicNote | null, bpm: number | null) {\n    if(note) {\n      this.note = note;\n    }\n    if(bpm) {\n      this.bpm = bpm;\n    }\n  }\n\n  /**\n   * Get the {@link Tempo#note|note} of the tempo\n   *\n   * @returns The {@link Tempo#note|note} of the tempo\n   */\n  getNote(): BasicNote {\n    return this.note;\n  }\n  /**\n   * Set the {@link Tempo#note|note} of the tempo\n   *\n   * @param {BasicNote} note The new tempo's {@link Tempo#note|note}\n   */\n  setNote(note: BasicNote): void {\n    this.note = note;\n  }\n\n  /**\n   * Get the {@link Tempo#bpm|BPM} of the tempo\n   *\n   * @returns The {@link Tempo#bpm|BPM} of the tempo\n   */\n  getBPM(): number {\n    return this.bpm;\n  }\n  /**\n   * Set the {@link Tempo#bpm|BPM} of the tempo\n   *\n   * @param {number} bpm The new tempo's {@link Tempo#bpm|BPM}\n   */\n  setBPM(bpm: number): boolean {\n    if(bpm >= 1 && bpm % 1 == 0) {\n      this.bpm = bpm;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get the {@link BasicNote#number|number} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#number|number} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteNumber(): number {\n    return BasicNote.getNumber(this.note);\n  }\n  /**\n   * Get the {@link BasicNote#imgPath|image path} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#imgPath|image path} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteImgPath(): string {\n    return BasicNote.getImgPath(this.note);\n  }\n  /**\n   * Get the {@link BasicNote#name|name} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#name|name} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteName(): string {\n    return BasicNote.getName(this.note);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TempoComponent.html":{"url":"components/TempoComponent.html","title":"component - TempoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TempoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tempo/tempo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tempo\n            \n\n            \n                styleUrls\n                ./tempo.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tempo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tempo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setBPM\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tempoOutput\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tempoOutput\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBPM\n                        \n                        \n                    \n                \n            \n            \n                \nsetBPM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tempo\n\n                        \n                    \n                    \n                        \n                            Default value : new Tempo(null, null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\nimport { Tempo } from \"../classes/tempo\";\nimport { BasicNote } from \"../enums/basic-note\";\n\n@Component({\n  selector: 'app-tempo',\n  templateUrl: './tempo.component.html',\n  styleUrls: ['./tempo.component.sass']\n})\nexport class TempoComponent implements OnInit {\n\n  tempo: Tempo = new Tempo(null, null);\n\n  @Output() tempoOutput: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setBPM() {\n    \n  }\n}\n\n    \n\n    \n        \n  Tempo\n  \n    \n    = {{ tempo.getBPM() }}\n  \n\n\n    \n\n    \n                \n                    ./tempo.component.sass\n                \n                @use \"~sass/vars\"\n\n.tempo-root\n  background-color: vars.$LIGHT_GRAY\n  border-radius: 1.5rem\n  padding: 0.75rem 1.5rem\n\n  p\n   margin: 0 0 0.75rem 0\n   text-align: center\n\n  div\n    display: flex\n    justify-content: center\n    align-items: center\n\n    img, img+span\n      padding: 0.25rem\n    img, span>span\n      cursor: pointer\n\n    img\n      height: 1.5em\n\n    img+span\n      font-size: 1.3em\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tempo          = {{ tempo.getBPM() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TempoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/track.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                instrument\n                            \n                            \n                                    Static\n                                nextId\n                            \n                            \n                                    Private\n                                notes\n                            \n                            \n                                    Private\n                                plan\n                            \n                            \n                                    Static\n                                PLANS\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                clearNotes\n                            \n                            \n                                deleteNotesBetweenTimecodes\n                            \n                            \n                                getId\n                            \n                            \n                                getInstrument\n                            \n                            \n                                getNoteAtIndex\n                            \n                            \n                                getNoteAtTimecode\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlan\n                            \n                            \n                                setInstrument\n                            \n                            \n                                setNotes\n                            \n                            \n                                setPlan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(instrument: string, plan: number, notes: Note[])\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/track.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        instrument\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        plan\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        Note[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            nextId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Note[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PLANS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [0, 1, 2]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:11\n                            \n                        \n\n                \n                    \n                        0 -> \"Normal\" (not solo nor mute)\n1 -> Solo\n2 -> Mute\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNote\n                        \n                        \n                    \n                \n            \n            \n                \naddNote(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearNotes\n                        \n                        \n                    \n                \n            \n            \n                \nclearNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNotesBetweenTimecodes\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNotesBetweenTimecodes(from: number, to: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstrument\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstrument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteAtIndex(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Note\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteAtTimecode\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteAtTimecode(timecode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timecode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Note | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Note[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlan\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInstrument\n                        \n                        \n                    \n                \n            \n            \n                \nsetInstrument(instrument: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instrument\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNotes\n                        \n                        \n                    \n                \n            \n            \n                \nsetNotes(notes: Note[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                                Note[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlan\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlan(plan: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Note } from \"./note\";\n\nexport class Track {\n  static nextId: number = 1;\n\n  /**\n    0 -> \"Normal\" (not solo nor mute)\n    1 -> Solo\n    2 -> Mute\n  */\n  static PLANS = [0, 1, 2];\n\n  private id: number;\n  private instrument: string;\n  private plan: number;\n  private notes: Note[];\n\n  constructor(instrument: string = \"\", plan: number = 0, notes: Note[] = new Array()) {\n    this.id = Track.nextId;\n    ++Track.nextId;\n\n    this.instrument = instrument;\n    this.plan = plan;\n    this.notes = notes;\n  }\n\n  getId(): number {\n    return this.id;\n  }\n\n  getInstrument(): string {\n    return this.instrument;\n  }\n  setInstrument(instrument: string): void {\n    this.instrument = instrument;\n  }\n\n  getPlan(): number {\n    return this.plan;\n  }\n  setPlan(plan: number): void {\n    this.plan = plan;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n  getNoteAtIndex(i: number): Note {\n    return this.notes[i];\n  }\n\n  getNoteAtTimecode(timecode: number): Note | null {\n    for(let i = 0 ; i ();\n  }\n\n  deleteNotesBetweenTimecodes(from: number, to: number): void {\n    for(let i = 0 ; i = from && timecode \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackComponent.html":{"url":"components/TrackComponent.html","title":"component - TrackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/track/track.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-track\n            \n\n            \n                styleUrls\n                ./track.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./track.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                modifiableInstrument\n                            \n                            \n                                modifyInstrument\n                            \n                            \n                                test\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSoundPlan\n                            \n                            \n                                getId\n                            \n                            \n                                mute\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectTrack\n                            \n                            \n                                setSoloMuted\n                            \n                            \n                                setVolume\n                            \n                            \n                                toggleModifyInstrument\n                            \n                            \n                                toggleSoloMuted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                soloMuted\n                            \n                            \n                                track\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSolo\n                            \n                            \n                                selectedTrack\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/track/track.component.ts:29\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        soloMuted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        track\n                    \n                \n                \n                    \n                        Type :         Track\n\n                    \n                \n                \n                    \n                        Default value : new Track()\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSolo\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTrack\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSoundPlan\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSoundPlan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mute\n                        \n                        \n                    \n                \n            \n            \n                \nmute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTrack\n                        \n                        \n                    \n                \n            \n            \n                \nselectTrack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSoloMuted\n                        \n                        \n                    \n                \n            \n            \n                \nsetSoloMuted(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVolume\n                        \n                        \n                    \n                \n            \n            \n                \nsetVolume(volume: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    volume\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModifyInstrument\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModifyInstrument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSoloMuted\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSoloMuted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiableInstrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifyInstrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NoteRepresentation\n\n                        \n                    \n                    \n                        \n                            Default value : new NoteRepresentation([\"8N\"], null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild//, ElementRef\n } from \"@angular/core\";\n\nimport { Track } from \"../classes/track\";\nimport { Note } from \"../classes/note\";\nimport { NoteRepresentation } from \"../classes/note-representation\";\n\n@Component({\n  selector: \"app-track\",\n  templateUrl: \"./track.component.html\",\n  styleUrls: [\"./track.component.sass\"]\n})\nexport class TrackComponent implements OnInit {\n  @Input() track: Track = new Track();\n\n  modifiableInstrument: string = \"\";\n  modifyInstrument = false;\n\n    // Must be between 0 (mute) and 1 (max)\n  volume: number = 1;\n  @Input() soloMuted: boolean = false;\n  @Output() isSolo: EventEmitter = new EventEmitter();\n\n  isSelected: boolean = false;\n  @Output() selectedTrack: EventEmitter = new EventEmitter();\n\n  //@ViewChild('instruInput', { static: true }) intrumentInput: ElementRef;\n\n  test: NoteRepresentation = new NoteRepresentation([\"8N\"], null);\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.modifiableInstrument = this.track.getInstrument();\n  }\n\n  changeSoundPlan(): void {\n      // Change the number of the selected sound plan\n    this.track.setPlan((this.track.getPlan() + 1) % 3);\n\n      // TODO: change the sound track behaviour\n    if(this.track.getPlan() == 2) {\n      this.mute();\n      this.isSolo.emit(false);\n    } else if(this.track.getPlan() == 0) {\n      this.volume = 1;\n    } else {\n      this.isSolo.emit(true);\n    }\n  }\n\n  toggleSoloMuted(): void {\n    this.soloMuted = !this.soloMuted;\n  }\n  setSoloMuted(bool: boolean): void {\n    this.soloMuted = bool;\n  }\n\n  mute(): void {\n    this.volume = 0;\n  }\n\n  setVolume(volume: number): void {\n    if(volume >= 0 && volume {\n        this.intrumentInput.nativeElement.focus();\n      }, 0);*/\n    }\n\n      // TODO: change the sound track's behaviour (with the musical librairy part)\n  }\n\n  selectTrack(): void {\n    this.isSelected = !this.isSelected;\n    if(this.isSelected) {\n      this.selectedTrack.emit(this.track.getId());\n    } else {\n      this.selectedTrack.emit(null);\n    }\n  }\n\n  getId(): number {\n    return this.track.getId();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n    -->\n    \n  \n  \n      {{ track.getInstrument() }}\n      Défaut\n    \n      \n      ➤\n    \n  \n\n\n    \n\n    \n                \n                    ./track.component.sass\n                \n                @use \"~sass/vars\"\n\n$HEIGHT: 3rem\n\n$INSTRUMENT_WIDTH: 9rem\n$INSTR_INPUT_HEIGHT: 2rem\n\n$BORDER_WIDTH: 0.25rem\n\n@mixin create-gradient($property, $exterior-color, $interior-color)\n  #{$property}: linear-gradient(to right, $exterior-color, $interior-color 5%, $interior-color 87%, $exterior-color)\n\n%absVertCenteredInteractive\n  cursor: pointer\n  position: absolute\n  top: 50%\n  transform: translateY(-50%)\n\n:host\n  display: block\n  width: 100%\n\n  &.selected>article\n    @include create-gradient(border-image-source, vars.$TRANSPARENT_ORANGE, vars.$ORANGE)\n    border-image-slice: 100% 0 100% 0\n    border-image-width: $BORDER_WIDTH 0 $BORDER_WIDTH 0\n    border-image-repeat: stretch\n\n  &.recording>article\n    @include create-gradient(border-image-source, vars.$TRANSPARENT_RED, vars.$RED)\n\n\narticle\n  display: flex\n  height: $HEIGHT\n  width: 100%\n  @include create-gradient(background-image, vars.$TRANSPARENT_MIDDLE_DARK_GRAY, vars.$MIDDLE_DARK_GRAY)\n  margin: 0.75rem 0\n  padding: 0 0.5rem\n\n  background-clip: padding-box\n\n  border-style: solid\n  border-width: $BORDER_WIDTH 0\n  border-color: transparent\n\n  &>div\n    height: 100%\n\n.soundPlan\n  position: relative\n  justify-content: center\n  width: $HEIGHT\n  //margin-right: $BORDER_WIDTH\n\n  img\n    @extend %absVertCenteredInteractive\n\n.trackContent\n  flex-grow: 1\n  margin: 0 $BORDER_WIDTH\n  display: flex\n  align-items: center\n\n  img\n    display: inline-block\n    max-height: $HEIGHT\n    max-width: $HEIGHT\n    height: 80%\n    width: auto\n\n.instrument\n  position: relative\n  min-width: $INSTRUMENT_WIDTH\n\n  div, span\n    @extend %absVertCenteredInteractive\n  &>div\n    cursor: default\n    width: 100%\n    height: $INSTR_INPUT_HEIGHT\n    display: flex\n\n    input\n      flex-grow: 1\n      max-width: $INSTRUMENT_WIDTH - $INSTR_INPUT_HEIGHT - 1rem\n      border-top-right-radius: 0\n      border-bottom-right-radius: 0\n    button\n      height: 100%\n      width: $INSTR_INPUT_HEIGHT\n      background: vars.$DEEP_DARK_GRAY\n      border-top-left-radius: 0\n      border-bottom-left-radius: 0\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          -->              {{ track.getInstrument() }}      Défaut                ➤      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/classes/note-representation.ts\n            \n            class\n            AddOn\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/classes/note-representation.ts\n            \n            class\n            NoteRepresentation\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/classes/note.ts\n            \n            class\n            Note\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/classes/signature.ts\n            \n            class\n            Signature\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/classes/tempo.ts\n            \n            class\n            Tempo\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/classes/track.ts\n            \n            class\n            Track\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/create-track/create-track.component.ts\n            \n            component\n            CreateTrackComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getImgPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/enums/binary-note.ts\n            \n            function\n            getRepresentation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/export-menu/export-menu.component.ts\n            \n            component\n            ExportMenuComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/measure/measure.component.ts\n            \n            component\n            MeasureComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/metronome-sound/metronome-sound.component.ts\n            \n            component\n            MetronomeSoundComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/metronome/metronome.component.ts\n            \n            component\n            MetronomeComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/playbar/playbar.component.ts\n            \n            component\n            PlaybarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/rhythm/rhythm.component.ts\n            \n            component\n            RhythmComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/save-menu/save-menu.component.ts\n            \n            component\n            SaveMenuComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/signature/signature.component.ts\n            \n            component\n            SignatureComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tempo/tempo.component.ts\n            \n            component\n            TempoComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/track/track.component.ts\n            \n            component\n            TrackComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.4\n        \n            @angular/common : ~11.0.4\n        \n            @angular/compiler : ~11.0.4\n        \n            @angular/core : ~11.0.4\n        \n            @angular/forms : ~11.0.4\n        \n            @angular/platform-browser : ~11.0.4\n        \n            @angular/platform-browser-dynamic : ~11.0.4\n        \n            @angular/router : ~11.0.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BasicNote   (src/.../basic-note.ts)\n                        \n                        \n                            BinaryNote   (src/.../binary-note.ts)\n                        \n                        \n                            Intrument   (src/.../instrument.ts)\n                        \n                        \n                            NoteType   (src/.../note-type.ts)\n                        \n                        \n                            Sound   (src/.../metronome.ts)\n                        \n                        \n                            TernaryNote   (src/.../ternary-note.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/basic-note.ts\n    \n        \n            \n                \n                    \n                        \n                        BasicNote\n                    \n                \n                        \n                            \n                                 WHOLE_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 1, \"name\": \"Whole note\", \"img\": \"whole-note.svg\"}\n                            \n                        \n                        \n                            \n                                 HALF_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 2, \"name\": \"Half note\", \"img\": \"half-note.svg\"}\n                            \n                        \n                        \n                            \n                                 QUARTER_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 4, \"name\": \"Quarter note\", \"img\": \"quarter-note.svg\"}\n                            \n                        \n                        \n                            \n                                 HEIGHT_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 8, \"name\": \"Height note\", \"img\": \"height-note.svg\"}\n                            \n                        \n                        \n                            \n                                 SIXTEEN_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 16, \"name\": \"Sixteen note\", \"img\": \"sixteen-note.svg\"}\n                            \n                        \n            \n        \n\n    src/app/enums/binary-note.ts\n    \n        \n            \n                \n                    \n                        \n                        BinaryNote\n                    \n                \n                    \n                        \n                            This enum list every note type that can be visually created.\nVALUES NOTATION :\n   All values start by _ due to the fact that a value cannot start by a number.\n   R -> rest\n   D -> dotted\n   TR -> triplet\n   1N -> whole note\n   2N -> half note\n   4N -> quarter note\n   8N -> eight note\n   16N -> sixteenth note\n   A number not followed by a N but by an _ specify the number of linked notes after it\n   following themselves. ex : 28N = two eight note or eight note eight note.\n\n                        \n                    \n                        \n                            \n                                 _4N\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 _4N_TR\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 _4_8N\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 _2_8N\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 _2_16N\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 _16N_8N_16N\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 _8N_2_16N\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 _2_16N_8N\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 _4_16N\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 _1N_R\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 _2N_R\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 _4N_R\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 _8N_R\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 _16N_R\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n            \n        \n\n    src/app/enums/instrument.ts\n    \n        \n            \n                \n                    \n                        \n                        Intrument\n                    \n                \n                        \n                            \n                                 ACOUSTIC_GRAND_PIANO\n                            \n                        \n                        \n                            \n                                 BRIGHT_ACOUSTIC_PIANO\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GRAND_PIANO\n                            \n                        \n                        \n                            \n                                 HONKYTONK_PIANO\n                            \n                        \n                        \n                            \n                                 ELECTRIC_PIANO_1\n                            \n                        \n                        \n                            \n                                 ELECTRIC_PIANO_2\n                            \n                        \n                        \n                            \n                                 HARPSICHORD\n                            \n                        \n                        \n                            \n                                 CLAVINET\n                            \n                        \n                        \n                            \n                                 CELESTA\n                            \n                        \n                        \n                            \n                                 GLOCKENSPIEL\n                            \n                        \n                        \n                            \n                                 MUSIC_BOX\n                            \n                        \n                        \n                            \n                                 VIBRAPHONE\n                            \n                        \n                        \n                            \n                                 MARIMBA\n                            \n                        \n                        \n                            \n                                 XYLOPHONE\n                            \n                        \n                        \n                            \n                                 TUBULAR_BELLS\n                            \n                        \n                        \n                            \n                                 DULCIMER\n                            \n                        \n                        \n                            \n                                 DRAWBAR_ORGAN\n                            \n                        \n                        \n                            \n                                 PERCUSSIVE_ORGAN\n                            \n                        \n                        \n                            \n                                 ROCK_ORGAN\n                            \n                        \n                        \n                            \n                                 CHURCH_ORGAN\n                            \n                        \n                        \n                            \n                                 REED_ORGAN\n                            \n                        \n                        \n                            \n                                 ACCORDION\n                            \n                        \n                        \n                            \n                                 HARMONICA\n                            \n                        \n                        \n                            \n                                 TANGO_ACCORDION\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_GUITAR_NYLON\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_GUITAR_STEEL\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_JAZZ\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_CLEAN\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_MUTED\n                            \n                        \n                        \n                            \n                                 OVERDRIVEN_GUITAR\n                            \n                        \n                        \n                            \n                                 DISTORTION_GUITAR\n                            \n                        \n                        \n                            \n                                 GUITAR_HARMONICS\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_BASS\n                            \n                        \n                        \n                            \n                                 ELECTRIC_BASS_FINGER\n                            \n                        \n                        \n                            \n                                 ELECTRIC_BASS_PICK\n                            \n                        \n                        \n                            \n                                 FRETLESS_BASS\n                            \n                        \n                        \n                            \n                                 SLAP_BASS_1\n                            \n                        \n                        \n                            \n                                 SLAP_BASS_2\n                            \n                        \n                        \n                            \n                                 SYNTH_BASS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_BASS_2\n                            \n                        \n                        \n                            \n                                 VIOLIN\n                            \n                        \n                        \n                            \n                                 VIOLA\n                            \n                        \n                        \n                            \n                                 CELLO\n                            \n                        \n                        \n                            \n                                 CONTRABASS\n                            \n                        \n                        \n                            \n                                 TREMOLO_STRINGS\n                            \n                        \n                        \n                            \n                                 PIZZICATO_STRINGS\n                            \n                        \n                        \n                            \n                                 ORCHESTRAL_HARP\n                            \n                        \n                        \n                            \n                                 TIMPANI\n                            \n                        \n                        \n                            \n                                 STRING_ENSEMBLE_1\n                            \n                        \n                        \n                            \n                                 STRING_ENSEMBLE_2\n                            \n                        \n                        \n                            \n                                 SYNTH_STRINGS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_STRINGS_2\n                            \n                        \n                        \n                            \n                                 CHOIR_AAHS\n                            \n                        \n                        \n                            \n                                 VOICE_OOHS\n                            \n                        \n                        \n                            \n                                 SYNTH_CHOIR\n                            \n                        \n                        \n                            \n                                 ORCHESTRA_HIT\n                            \n                        \n                        \n                            \n                                 TRUMPET\n                            \n                        \n                        \n                            \n                                 TROMBONE\n                            \n                        \n                        \n                            \n                                 TUBA\n                            \n                        \n                        \n                            \n                                 MUTED_TRUMPET\n                            \n                        \n                        \n                            \n                                 FRENCH_HORN\n                            \n                        \n                        \n                            \n                                 BRASS_SECTION\n                            \n                        \n                        \n                            \n                                 SYNTH_BRASS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_BRASS_2\n                            \n                        \n                        \n                            \n                                 SOPRANO_SAX\n                            \n                        \n                        \n                            \n                                 ALTO_SAX\n                            \n                        \n                        \n                            \n                                 TENOR_SAX\n                            \n                        \n                        \n                            \n                                 BARITONE_SAX\n                            \n                        \n                        \n                            \n                                 OBOE\n                            \n                        \n                        \n                            \n                                 ENGLISH_HORN\n                            \n                        \n                        \n                            \n                                 BASSOON\n                            \n                        \n                        \n                            \n                                 CLARINET\n                            \n                        \n                        \n                            \n                                 PICCOLO\n                            \n                        \n                        \n                            \n                                 FLUTE\n                            \n                        \n                        \n                            \n                                 RECORDER\n                            \n                        \n                        \n                            \n                                 PAN_FLUTE\n                            \n                        \n                        \n                            \n                                 BLOWN_BOTTLE\n                            \n                        \n                        \n                            \n                                 SHAKUHACHI\n                            \n                        \n                        \n                            \n                                 WHISTLE\n                            \n                        \n                        \n                            \n                                 OCARINA\n                            \n                        \n                        \n                            \n                                 LEAD_1_SQUARE\n                            \n                        \n                        \n                            \n                                 LEAD_2_SAWTOOTH\n                            \n                        \n                        \n                            \n                                 LEAD_3_CALLIOPE\n                            \n                        \n                        \n                            \n                                 LEAD_4_CHIFF\n                            \n                        \n                        \n                            \n                                 LEAD_5_CHARANG\n                            \n                        \n                        \n                            \n                                 LEAD_6_VOICE\n                            \n                        \n                        \n                            \n                                 LEAD_7_FIFTHS\n                            \n                        \n                        \n                            \n                                 LEAD_8_BASS_AND_LEAD\n                            \n                        \n                        \n                            \n                                 PAD_1_NEW_AGE\n                            \n                        \n                        \n                            \n                                 PAD_2_WARM\n                            \n                        \n                        \n                            \n                                 PAD_3_POLYSYNTH\n                            \n                        \n                        \n                            \n                                 PAD_4_CHOIR\n                            \n                        \n                        \n                            \n                                 PAD_5_BOWED\n                            \n                        \n                        \n                            \n                                 PAD_6_METALLIC\n                            \n                        \n                        \n                            \n                                 PAD_7_HALO\n                            \n                        \n                        \n                            \n                                 PAD_8_SWEEP\n                            \n                        \n                        \n                            \n                                 FX_1_RAIN\n                            \n                        \n                        \n                            \n                                 FX_2_SOUNDTRACK\n                            \n                        \n                        \n                            \n                                 FX_3_CRYSTAL\n                            \n                        \n                        \n                            \n                                 FX_4_ATMOSPHERE\n                            \n                        \n                        \n                            \n                                 FX_5_BRIGHTNESS\n                            \n                        \n                        \n                            \n                                 FX_6_GOBLINS\n                            \n                        \n                        \n                            \n                                 FX_7_ECHOES\n                            \n                        \n                        \n                            \n                                 FX_8_SCIFI\n                            \n                        \n                        \n                            \n                                 SITAR\n                            \n                        \n                        \n                            \n                                 BANJO\n                            \n                        \n                        \n                            \n                                 SHAMISEN\n                            \n                        \n                        \n                            \n                                 KOTO\n                            \n                        \n                        \n                            \n                                 KALIMBA\n                            \n                        \n                        \n                            \n                                 BAGPIPE\n                            \n                        \n                        \n                            \n                                 FIDDLE\n                            \n                        \n                        \n                            \n                                 SHANAI\n                            \n                        \n                        \n                            \n                                 TINKLE_BELL\n                            \n                        \n                        \n                            \n                                 AGOGO\n                            \n                        \n                        \n                            \n                                 STEEL_DRUMS\n                            \n                        \n                        \n                            \n                                 WOODBLOCK\n                            \n                        \n                        \n                            \n                                 TAIKO_DRUM\n                            \n                        \n                        \n                            \n                                 MELODIC_TOM\n                            \n                        \n                        \n                            \n                                 SYNTH_DRUM\n                            \n                        \n                        \n                            \n                                 REVERSE_CYMBAL\n                            \n                        \n                        \n                            \n                                 GUITAR_FRET_NOISE\n                            \n                        \n                        \n                            \n                                 BREATH_NOISE\n                            \n                        \n                        \n                            \n                                 SEASHORE\n                            \n                        \n                        \n                            \n                                 BIRD_TWEET\n                            \n                        \n                        \n                            \n                                 TELEPHONE_RING\n                            \n                        \n                        \n                            \n                                 HELICOPTER\n                            \n                        \n                        \n                            \n                                 APPLAUSE\n                            \n                        \n                        \n                            \n                                 GUNSHOT\n                            \n                        \n            \n        \n\n    src/app/enums/note-type.ts\n    \n        \n            \n                \n                    \n                        \n                        NoteType\n                    \n                \n                    \n                        \n                            This enum list every note type that can be visually created.\nVALUES NOTATION :\n   All values start by _ due to the fact that a value cannot start by a number.\n   R -> rest\n   D -> dotted\n   TR -> triplet\n   DU -> duplet\n   1N -> whole note\n   2N -> half note\n   4N -> quarter note\n   8N -> eight note\n   16N -> sixteenth note\n   A number not followed by a N but by an _ specify the number of linked notes after it\n   following themselves. ex : 28N = two eight note or eight note eight note.\n\n                        \n                    \n                        \n                            \n                                 _4N\n                            \n                        \n                        \n                            \n                                 _2_16N\n                            \n                        \n                        \n                            \n                                 _8N_R\n                            \n                        \n                        \n                            \n                                 _16N_R\n                            \n                        \n                        \n                            \n                                 _4N_TR\n                            \n                        \n                        \n                            \n                                 _4_8N\n                            \n                        \n                        \n                            \n                                 _2_8N\n                            \n                        \n                        \n                            \n                                 _16N_8N_16N\n                            \n                        \n                        \n                            \n                                 _8N_2_16N\n                            \n                        \n                        \n                            \n                                 _2_16N_8N\n                            \n                        \n                        \n                            \n                                 _4_16N\n                            \n                        \n                        \n                            \n                                 _8N_TR\n                            \n                        \n                        \n                            \n                                 _1N_R\n                            \n                        \n                        \n                            \n                                 _2N_R\n                            \n                        \n                        \n                            \n                                 _4N_R\n                            \n                        \n                        \n                            \n                                 _D_4N\n                            \n                        \n                        \n                            \n                                 _8N\n                            \n                        \n                        \n                            \n                                 _3_8N\n                            \n                        \n                        \n                            \n                                 _6_16N\n                            \n                        \n                        \n                            \n                                 _8N_4_16N\n                            \n                        \n                        \n                            \n                                 _4_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_2_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_16N_8N\n                            \n                        \n                        \n                            \n                                 _2_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _2_16N_2_8N\n                            \n                        \n                        \n                            \n                                 _D_8N_3_16N\n                            \n                        \n                        \n                            \n                                 _3_16N_D_8N\n                            \n                        \n                        \n                            \n                                 _2_16N_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _DU\n                            \n                        \n                        \n                            \n                                 _D_2N_R\n                            \n                        \n                        \n                            \n                                 _D_4N_R\n                            \n                        \n                        \n                            \n                                 _D_8N_R\n                            \n                        \n            \n        \n\n    src/app/classes/metronome.ts\n    \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 TOC\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/toc.wav\n                            \n                        \n                        \n                            \n                                 CLOCK_1\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/clock-1.wav\n                            \n                        \n                        \n                            \n                                 CLOCK_2\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/clock-2.wav\n                            \n                        \n            \n        \n\n    src/app/enums/ternary-note.ts\n    \n        \n            \n                \n                    \n                        \n                        TernaryNote\n                    \n                \n                    \n                        \n                            This enum list every ternary note that can be visually created.\nVALUES NOTATION :\n   All values start by _ due to the fact that a value cannot start by a number.\n   R -> rest\n   D -> dotted\n   DU -> duplet\n   2N -> half note\n   4N -> quarter note\n   8N -> eight note\n   16N -> sixteenth note\n   A number not followed by a N but by an _ specify the number of linked notes after it\n   following themselves. ex : 28N = two eight note or eight note eight note.\n\n                        \n                    \n                        \n                            \n                                 _4N\n                            \n                        \n                        \n                            \n                                 _D_4N\n                            \n                        \n                        \n                            \n                                 _8N\n                            \n                        \n                        \n                            \n                                 _3_8N\n                            \n                        \n                        \n                            \n                                 _2_16N\n                            \n                        \n                        \n                            \n                                 _6_16N\n                            \n                        \n                        \n                            \n                                 _8N_4_16N\n                            \n                        \n                        \n                            \n                                 _4_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_2_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_16N_8N\n                            \n                        \n                        \n                            \n                                 _2_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _2_16N_2_8N\n                            \n                        \n                        \n                            \n                                 _D_8N_3_16N\n                            \n                        \n                        \n                            \n                                 _3_16N_D_8N\n                            \n                        \n                        \n                            \n                                 _2_16N_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _DU\n                            \n                        \n                        \n                            \n                                 _8N_R\n                            \n                        \n                        \n                            \n                                 _16N_R\n                            \n                        \n                        \n                            \n                                 _D_2N_R\n                            \n                        \n                        \n                            \n                                 _D_4N_R\n                            \n                        \n                        \n                            \n                                 _D_8N_R\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getImgPath   (src/.../basic-note.ts)\n                        \n                        \n                            getJSON   (src/.../basic-note.ts)\n                        \n                        \n                            getName   (src/.../basic-note.ts)\n                        \n                        \n                            getNumber   (src/.../basic-note.ts)\n                        \n                        \n                            getRepresentation   (src/.../binary-note.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/basic-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgPath(note)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJSON\n                        \n                        \n                    \n                \n            \n            \n                \ngetJSON(note)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \ngetName(note)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumber(note)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/enums/binary-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRepresentation\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepresentation(note)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NoteRepresentation | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPolyrythmique\nThis project was generated with Angular CLI version 11.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateTrackComponent\n\nCreateTrackComponent\n\nAppModule -->\n\nCreateTrackComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nExportMenuComponent\n\nExportMenuComponent\n\nAppModule -->\n\nExportMenuComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\nAppModule -->\n\nMeasureComponent->AppModule\n\n\n\n\n\nMetronomeComponent\n\nMetronomeComponent\n\nAppModule -->\n\nMetronomeComponent->AppModule\n\n\n\n\n\nMetronomeSoundComponent\n\nMetronomeSoundComponent\n\nAppModule -->\n\nMetronomeSoundComponent->AppModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nAppModule -->\n\nNoteComponent->AppModule\n\n\n\n\n\nPlaybarComponent\n\nPlaybarComponent\n\nAppModule -->\n\nPlaybarComponent->AppModule\n\n\n\n\n\nRhythmComponent\n\nRhythmComponent\n\nAppModule -->\n\nRhythmComponent->AppModule\n\n\n\n\n\nSaveMenuComponent\n\nSaveMenuComponent\n\nAppModule -->\n\nSaveMenuComponent->AppModule\n\n\n\n\n\nSignatureComponent\n\nSignatureComponent\n\nAppModule -->\n\nSignatureComponent->AppModule\n\n\n\n\n\nTempoComponent\n\nTempoComponent\n\nAppModule -->\n\nTempoComponent->AppModule\n\n\n\n\n\nTrackComponent\n\nTrackComponent\n\nAppModule -->\n\nTrackComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddOnJson   (src/.../note-representation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/note-representation.ts\n    \n    \n        \n            \n                \n                    \n                    AddOnJson\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\n  pathsFromApp: {\n    img: \"../assets/images/\",\n    rythmsImg: \"../assets/images/rythms/\",\n    notesImg: \"../assets/images/notes/\"\n  }\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
