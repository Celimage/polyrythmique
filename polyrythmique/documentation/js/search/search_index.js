var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddOn.html",[0,0.077,1,2.122]],["body/classes/AddOn.html",[0,0.106,1,3.66,2,1.184,3,0.298,4,0.265,5,0.265,6,3.749,7,1.716,8,1.155,9,3.762,10,2.196,11,3.762,12,2.924,13,0.695,14,1.068,15,2.914,16,1.71,17,5.159,18,1.068,19,3.206,20,4.125,21,3.818,22,3.818,23,0.447,24,3.199,25,2.043,26,1.342,27,3.818,28,1.256,29,0.031,30,0.451,31,0.925,32,1.256,33,2.635,34,3.199,35,3.199,36,3.199,37,3.199,38,2.635,39,1.273,40,2.635,41,3.199,42,2.635,43,0.87,44,3.199,45,2.635,46,0.298,47,1.548,48,1.926,49,0.432,50,3.282,51,1.925,52,2.327,53,3.762,54,3.762,55,3.762,56,3.762,57,2.277,58,2.208,59,2.208,60,1.289,61,1.882,62,2.208,63,1.716,64,1.716,65,2.4,66,0.911,67,2.486,68,2.208,69,2.148,70,2.208,71,1.926,72,1.926,73,2.208,74,2.208,75,1.289,76,0.931,77,3.199,78,2.208,79,1.273,80,1.716,81,3.361,82,2.208,83,2.208,84,2.208,85,1.926,86,0.911,87,2.208,88,2.208,89,2.208,90,2.208,91,1.548,92,1.926,93,2.208,94,3.199,95,2.208,96,1.289,97,0.861,98,2.208,99,1.716,100,0.987,101,3.762,102,2.208,103,2.208,104,2.208,105,3.199,106,2.208,107,3.762,108,2.208,109,2.208,110,2.208,111,2.208,112,1.256,113,2.208,114,2.208,115,2.208,116,3.199,117,2.208,118,2.208,119,2.208,120,3.199,121,2.208,122,2.208,123,2.208,124,0.012,125,0.017,126,0.012]],["title/components/AppComponent.html",[127,0.045,128,0.605]],["body/components/AppComponent.html",[0,0.072,3,0.346,4,0.307,5,0.307,13,0.472,14,1.186,25,1.385,26,1.012,29,0.031,30,0.426,31,0.72,46,0.346,49,0.48,61,1.62,69,1.62,96,2.073,112,1.186,124,0.014,125,0.019,126,0.014,127,0.077,128,0.977,129,1.012,130,0.789,131,0.789,132,0.789,133,0.789,134,2.558,135,0.789,136,1.667,137,1.305,138,3.098,139,1.096,140,4.869,141,1.096,142,4.238,143,4.869,144,5.526,145,1.186,146,1.012,147,4.238,148,4.238,149,4.238,150,4.238,151,4.238,152,4.238,153,4.238,154,4.238,155,4.238,156,4.238,157,4.238,158,4.238,159,4.238,160,4.238,161,4.238,162,4.238,163,4.238,164,4.238,165,4.238,166,4.238,167,4.238,168,4.238,169,4.238,170,4.238,171,4.238,172,4.238,173,4.238,174,4.238,175,4.238,176,4.238,177,4.238,178,4.238,179,4.238,180,4.238,181,4.238,182,4.238,183,4.238,184,4.238,185,4.238,186,4.238,187,4.238,188,4.238,189,4.238,190,4.238,191,4.238,192,1.755,193,4.238,194,4.238,195,4.238,196,4.238,197,4.238,198,4.238,199,4.238,200,4.238,201,5.26,202,4.238,203,4.238,204,4.238,205,4.238,206,4.238,207,4.238,208,4.238,209,4.238,210,4.238,211,4.238,212,4.238,213,4.238,214,3.053,215,2.76,216,4.04,217,3.098,218,4.238,219,4.238,220,3.551,221,3.053,222,0.567,223,3.053,224,3.053,225,1.012,226,0.923,227,1.493,228,1.632,229,1.167,230,1.167,231,1.372,232,1.493,233,0.672,234,1.096,235,1.096,236,0.789,237,1.36,238,0.789,239,0.789,240,0.567,241,0.567,242,0.789,243,0.518,244,0.789,245,0.567,246,1.259,247,0.567,248,0.567,249,0.789,250,0.518,251,0.789,252,0.567,253,0.672,254,0.789,255,0.567,256,0.789,257,0.567,258,0.789,259,0.518,260,0.789,261,0.567,262,0.729,263,0.567,264,0.789,265,0.567,266,0.789,267,0.567,268,0.618,269,0.789,270,0.789]],["title/modules/AppModule.html",[271,2.122,272,2.122]],["body/modules/AppModule.html",[0,0.077,3,0.373,4,0.331,5,0.331,29,0.031,46,0.742,49,0.505,124,0.015,125,0.02,126,0.015,128,1.178,137,0.666,222,0.611,225,0.786,233,0.724,240,1.087,241,0.611,243,0.994,245,1.087,247,1.087,248,1.087,250,0.994,252,1.087,253,0.724,255,1.087,257,1.087,259,0.994,261,1.087,262,0.786,263,1.087,265,1.087,267,1.087,271,2.144,272,4.382,273,1.934,274,2.144,275,4.243,276,4.243,277,3.739,278,2.406,279,2.758,280,2.758,281,2.758,282,2.758,283,3.438,284,3.739,285,2.758,286,2.144,287,3.292,288,3.739,289,4.463,290,2.758,291,2.406,292,3.739,293,4.463,294,2.758,295,3.292,296,3.292,297,2.406,298,5.064,299,2.758,300,3.292,301,2.758,302,2.406,303,3.292,304,3.292,305,2.406,306,2.406,307,3.292,308,3.292,309,2.758,310,3.292,311,3.292,312,2.406,313,3.292]],["title/modules/AppRoutingModule.html",[271,2.122,283,1.914]],["body/modules/AppRoutingModule.html",[0,0.107,3,0.515,4,0.458,5,0.458,29,0.031,46,0.71,49,0.515,124,0.021,125,0.025,126,0.021,127,0.087,222,0.845,243,0.933,250,0.933,253,1.002,259,1.041,273,2.674,278,3.327,283,3.228,288,3.813,292,4.603,299,3.813,301,3.813,309,3.813,314,4.551,315,4.551,316,3.843,317,5.494,318,3.813,319,4.551,320,3.745,321,4.016,322,1.884,323,4.603,324,4.551,325,4.551,326,4.551,327,4.551]],["title/components/CreateTrackComponent.html",[127,0.045,240,0.605]],["body/components/CreateTrackComponent.html",[0,0.075,3,0.36,4,0.319,5,0.319,10,1.553,13,0.491,18,1.218,23,0.539,26,1.04,29,0.031,30,0.438,31,0.539,39,0.821,43,0.769,46,0.36,49,0.493,61,1.9,66,1.04,79,1.126,97,1.424,100,1.126,124,0.015,125,0.02,126,0.015,127,0.069,128,0.59,129,1.04,130,0.821,131,0.821,132,0.821,133,0.821,135,0.821,136,1.675,137,1.311,139,1.126,141,1.126,222,0.59,225,0.758,228,1.697,229,1.9,230,1.214,231,1.427,233,0.699,234,1.126,235,1.497,236,0.821,237,1.383,238,0.821,239,0.821,240,0.993,241,1.193,242,0.821,243,0.539,244,0.821,245,0.59,246,1.285,247,0.59,248,0.59,249,0.821,250,0.539,251,0.821,252,0.59,253,0.699,254,0.821,255,0.59,256,0.821,257,0.59,258,0.821,259,0.539,260,0.821,261,0.59,262,0.758,263,0.59,264,0.821,265,0.59,266,0.821,267,0.59,268,1.172,269,0.821,270,0.821,302,3.634,328,4.165,329,2.661,330,1.218,331,1.391,332,4.165,333,3.649,334,5.349,335,2.836,336,3.483,337,3.176,338,2.559,339,4.355,340,4.355,341,3.91,342,3.176,343,4.355,344,2.836,345,3.176,346,3.176,347,3.176,348,3.176,349,3.176,350,0.888,351,3.176,352,4.355,353,3.184,354,4.355,355,4.355,356,3.176,357,5.605,358,2.321,359,2.518,360,1.866,361,1.315,362,1.803,363,1.957,364,1.697,365,3.184,366,2.836,367,1.866,368,1.866,369,1.866,370,2.559,371,2.068,372,1.427,373,2.321,374,2.836,375,2.068,376,2.13,377,1.866,378,4.355,379,4.355,380,2.661,381,2.068,382,1.427,383,2.431,384,1.553,385,3.176,386,3.184,387,2.559,388,1.866,389,2.321,390,2.661]],["title/components/DashboardComponent.html",[127,0.045,243,0.553]],["body/components/DashboardComponent.html",[0,0.081,3,0.39,4,0.346,5,0.346,23,0.584,29,0.031,30,0.462,43,0.532,46,0.39,49,0.521,66,1.098,76,1.215,100,1.189,124,0.016,125,0.021,126,0.016,127,0.072,128,0.639,129,1.098,130,0.89,131,0.89,132,0.89,133,0.89,135,0.89,136,1.691,137,1.324,139,1.189,141,1.189,222,0.639,225,0.821,226,1.04,227,1.682,229,1.979,230,1.979,231,2.484,232,1.682,233,0.757,234,1.189,235,1.189,236,0.89,237,1.429,238,0.89,239,0.89,240,0.639,241,0.639,242,0.89,243,0.939,244,0.89,245,0.639,246,1.339,247,0.639,248,0.639,249,0.89,250,0.584,251,0.89,252,0.639,253,0.757,254,0.89,255,0.639,256,0.89,257,0.639,258,0.89,259,0.584,260,0.89,261,0.639,262,0.821,263,0.639,264,0.89,265,0.639,266,0.89,267,0.639,268,0.696,269,0.89,270,0.89,323,3.852,330,1.286,331,1.449,350,0.962,359,2.327,360,2.021,361,1.903,362,1.903,363,1.546,364,2.457,366,2.24,367,2.021,368,2.021,371,2.24,372,1.546,376,2.248,382,2.066,383,1.682,391,2.882,392,5.179,393,4.598,394,3.44,395,2.882,396,4.598,397,4.598,398,4.598,399,4.598,400,5.528,401,5.528,402,4.598,403,4.598,404,4.598,405,3.852,406,4.598,407,4.598,408,3.852,409,4.598,410,4.598,411,2.882,412,2.515,413,3.44,414,4.598,415,3.44,416,3.44,417,2.457,418,2.701,419,2.24,420,2.021,421,2.021,422,2.021,423,1.839,424,2.515,425,2.457,426,2.021,427,2.515,428,3.852,429,2.515,430,3.361,431,2.882,432,3.361]],["title/components/ExportMenuComponent.html",[127,0.045,245,0.605]],["body/components/ExportMenuComponent.html",[0,0.092,3,0.444,4,0.394,5,0.394,23,0.666,29,0.031,30,0.504,43,0.607,46,0.444,49,0.723,66,1.196,75,1.918,124,0.018,125,0.023,126,0.018,127,0.077,128,0.728,129,1.196,130,1.014,131,1.014,132,1.014,133,1.014,135,1.014,136,1.715,137,1.342,139,1.295,141,1.295,222,0.728,225,0.936,226,1.186,233,0.863,234,1.295,235,1.295,236,1.014,237,1.504,238,1.014,239,1.014,240,0.728,241,0.728,242,1.014,243,0.666,244,1.014,245,1.08,246,1.427,247,0.728,248,0.728,249,1.014,250,0.666,251,1.014,252,0.728,253,0.863,254,1.014,255,0.728,256,1.014,257,0.728,258,1.014,259,0.666,260,1.014,261,0.728,262,0.936,263,0.728,264,1.014,265,0.728,266,1.014,267,0.728,268,0.794,269,1.014,270,1.014,306,2.867,330,1.401,331,1.544,350,1.097,433,3.285,434,2.554,435,3.661,436,4.034,437,3.661,438,1.762,439,2.304]],["title/components/MainMenuComponent.html",[127,0.045,247,0.605]],["body/components/MainMenuComponent.html",[0,0.059,3,0.286,4,0.253,5,0.253,8,0.763,10,2.141,13,0.83,16,1.525,18,1.034,23,0.428,26,0.883,28,0.705,29,0.031,30,0.44,31,0.628,32,0.705,39,0.652,43,0.677,46,0.286,49,0.419,51,0.891,66,0.883,76,1.307,96,2.141,100,1.593,112,1.501,124,0.012,125,0.017,126,0.012,127,0.061,128,0.468,129,0.883,130,0.652,131,0.652,132,0.652,133,0.652,135,0.652,136,1.625,137,1.272,139,0.956,141,0.956,145,0.705,146,0.602,192,1.813,216,1.843,222,0.468,225,1.385,226,0.763,227,1.233,229,2.119,230,1.843,231,2.838,232,2.511,233,0.555,234,0.956,235,0.956,236,0.652,237,1.247,238,0.652,239,0.652,240,0.468,241,0.468,242,0.652,243,0.428,244,0.652,245,0.468,246,1.132,247,0.895,248,0.468,249,0.652,250,0.428,251,0.652,252,0.468,253,0.963,254,0.652,255,0.468,256,0.652,257,0.468,258,0.652,259,0.428,260,0.652,261,0.468,262,0.602,263,0.468,264,0.652,265,0.468,266,0.652,267,0.468,268,0.51,269,0.652,270,0.652,297,3.201,321,3.525,322,1.531,330,1.034,331,1.225,350,0.705,353,3.923,360,1.481,361,1.813,362,2.126,363,1.661,365,2.703,366,2.408,372,1.133,374,3.495,375,1.642,376,2.141,377,2.572,380,4.302,381,2.408,382,2.411,383,2.624,388,2.172,389,1.843,408,3.098,412,1.843,417,1.348,418,1.481,419,1.642,420,1.481,421,1.481,423,3.101,425,3.153,429,1.843,430,2.703,431,2.113,434,1.642,435,3.753,436,3.201,437,2.703,440,3.668,441,3.698,442,2.703,443,6.049,444,2.522,445,5.366,446,3.698,447,2.522,448,2.172,449,1.808,450,2.408,451,2.522,452,4.04,453,4.04,454,3.698,455,3.698,456,4.378,457,2.522,458,2.522,459,4.378,460,2.522,461,3.698,462,1.843,463,3.698,464,1.642,465,3.098,466,3.698,467,2.172,468,5.366,469,1.348,470,2.113,471,4.378,472,5.134,473,1.843,474,4.942,475,1.843,476,1.843,477,1.348,478,2.522,479,2.113,480,2.522,481,1.843,482,2.522,483,2.522,484,4.378,485,1.843,486,2.522,487,3.098,488,2.113,489,2.408,490,2.522,491,1.642,492,2.522,493,2.522,494,2.522,495,2.522,496,2.522,497,2.522,498,2.522,499,2.522,500,2.522,501,1.481,502,1.642,503,2.522]],["title/components/MeasureComponent.html",[127,0.045,248,0.605]],["body/components/MeasureComponent.html",[0,0.092,3,0.443,4,0.393,5,0.393,23,0.664,29,0.031,30,0.503,43,0.605,46,0.443,49,0.566,66,1.193,91,2.297,124,0.018,125,0.023,126,0.018,127,0.077,128,0.726,129,1.193,130,1.011,131,1.011,132,1.011,133,1.011,135,1.011,136,1.714,137,1.342,139,1.293,141,1.293,222,0.726,225,0.933,233,0.86,234,1.293,235,1.293,236,1.011,237,1.502,238,1.011,239,1.011,240,0.726,241,0.726,242,1.011,243,0.664,244,1.011,245,0.726,246,1.425,247,0.726,248,1.079,249,1.011,250,0.664,251,1.011,252,0.726,253,0.86,254,1.011,255,0.726,256,1.011,257,0.726,258,1.011,259,0.664,260,1.011,261,0.726,262,0.933,263,0.726,264,1.011,265,0.726,266,1.011,267,0.928,268,0.791,269,1.011,270,1.011,330,1.398,331,1.542,350,1.094,438,1.756,481,2.858,504,3.275,505,3.412,506,5.51,507,4.999,508,3.275,509,3.275,510,2.546,511,3.909,512,3.275,513,3.909,514,3.909,515,3.909,516,4.188]],["title/components/MetronomeComponent.html",[127,0.045,250,0.553]],["body/components/MetronomeComponent.html",[0,0.053,3,0.255,4,0.227,5,0.227,8,1.029,13,0.349,14,0.951,16,1.382,18,0.951,23,0.383,25,1.112,26,1.344,28,0.951,29,0.031,30,0.553,31,0.874,32,0.951,39,1.331,43,0.871,46,0.517,49,0.385,51,1.202,52,1.408,57,0.861,61,0.861,66,0.812,75,1.102,76,0.796,79,1.266,86,0.538,97,0.737,100,0.583,112,0.63,124,0.01,125,0.016,126,0.01,127,0.057,128,0.418,129,0.812,130,0.583,131,0.583,132,0.583,133,0.583,135,0.583,136,1.597,137,1.25,139,0.879,141,0.879,145,1.146,146,1.229,215,2.215,217,2.486,222,0.418,225,0.538,226,0.682,228,1.204,229,1.3,230,1.566,231,1.84,232,2.003,233,0.496,234,0.879,235,0.879,236,0.583,237,1.18,238,0.583,239,0.583,240,0.418,241,0.418,242,0.583,243,0.383,244,0.583,245,0.418,246,1.059,247,0.418,248,0.418,249,0.583,250,0.775,251,0.583,252,0.418,253,1.432,254,0.583,255,0.418,256,0.583,257,0.418,258,0.583,259,0.383,260,0.583,261,0.418,262,0.538,263,0.418,264,0.583,265,0.418,266,0.583,267,0.418,268,0.456,269,0.583,270,0.583,286,1.467,322,2.213,330,0.951,331,1.146,338,1.998,350,0.63,359,1.528,361,0.933,362,1.696,363,1.528,369,1.998,370,2.407,372,1.012,374,2.668,375,1.467,377,1.324,381,1.467,382,2.05,383,2.231,384,1.102,386,2.486,387,3.308,388,1.998,390,4.314,417,1.204,418,1.324,419,1.467,420,1.324,421,1.324,432,2.994,439,1.324,449,2.231,462,2.994,467,1.324,469,1.204,477,1.204,489,1.467,501,2.681,517,1.888,518,4.096,519,3.401,520,4.096,521,4.096,522,3,523,4.563,524,2.486,525,2.849,526,3.823,527,2.253,528,4.022,529,4.563,530,1.818,531,3.401,532,2.849,533,3.401,534,3.401,535,2.486,536,2.253,537,4.314,538,3.823,539,3.823,540,3.401,541,2.849,542,2.253,543,2.253,544,2.486,545,2.253,546,3.401,547,1.696,548,2.253,549,2.849,550,2.486,551,2.253,552,2.849,553,2.849,554,2.253,555,2.486,556,1.888,557,2.215,558,3.401,559,2.849,560,2.253,561,1.467,562,1.888,563,1.102,564,1.324,565,1.888,566,1.888,567,2.253,568,1.888,569,3.401,570,3.401,571,1.888,572,2.253,573,2.253,574,1.888,575,2.253,576,1.647,577,2.253,578,3.401,579,2.253,580,2.253,581,3.401,582,4.563,583,2.253,584,4.096,585,1.888,586,2.253,587,1.888,588,1.888,589,2.253,590,2.253,591,2.253,592,2.253,593,2.253,594,2.253,595,2.253,596,2.253,597,2.849,598,4.563,599,2.253,600,5.149,601,2.253,602,3.764,603,2.253,604,4.897,605,3.401,606,3.401,607,2.253,608,3.401,609,2.849,610,2.253,611,2.253,612,2.253,613,2.253,614,2.253,615,2.253,616,2.253,617,2.253]],["title/components/MetronomeSoundComponent.html",[127,0.045,252,0.605]],["body/components/MetronomeSoundComponent.html",[0,0.05,3,0.243,4,0.215,5,0.215,8,0.648,13,0.331,14,0.916,16,1.027,18,0.916,23,0.364,25,1.07,26,1.352,28,0.599,29,0.031,30,0.399,31,0.92,32,0.599,39,1.15,43,0.813,46,0.503,49,0.371,51,0.757,52,1.841,57,0.819,61,1.93,66,0.781,75,1.048,79,1.306,91,1.923,96,1.048,97,1.07,100,1.465,112,1.413,124,0.01,125,0.015,126,0.01,127,0.086,128,0.398,129,0.781,130,0.554,131,0.554,132,0.554,133,0.554,135,0.554,136,1.584,137,1.24,139,0.846,141,0.846,145,1.34,146,1.143,192,1.983,215,2.131,222,0.398,225,0.511,226,0.648,233,0.471,234,0.846,235,0.846,236,0.554,237,1.15,238,0.554,239,0.554,240,0.398,241,0.398,242,0.554,243,0.364,244,0.554,245,0.398,246,1.027,247,0.398,248,0.398,249,0.554,250,0.364,251,0.554,252,0.826,253,1.4,254,0.554,255,0.398,256,0.554,257,0.398,258,0.554,259,0.364,260,0.554,261,0.398,262,0.511,263,0.398,264,0.554,265,0.398,266,0.554,267,0.398,268,0.434,269,0.554,270,0.554,312,4.21,322,2.65,330,0.916,331,1.111,338,3.384,341,4.058,350,0.599,439,1.259,442,2.392,450,2.131,467,1.259,479,2.742,501,2.612,505,1.923,508,3.327,512,4.013,522,2.817,526,3.327,530,2.376,532,1.795,544,1.566,547,1.841,550,2.392,552,2.742,553,2.742,555,2.392,556,1.795,557,2.131,561,1.395,562,1.795,566,1.795,568,2.742,618,4.826,619,1.795,620,3.971,621,3.971,622,3.273,623,4.538,624,3.273,625,3.971,626,4.446,627,4.446,628,4.446,629,4.013,630,3.027,631,2.142,632,2.742,633,3.273,634,3.288,635,5.049,636,5.417,637,5.551,638,2.142,639,2.142,640,3.273,641,4.789,642,2.142,643,2.742,644,2.742,645,4.446,646,2.142,647,3.273,648,4.013,649,3.273,650,2.742,651,3.273,652,2.142,653,2.142,654,2.742,655,2.142,656,2.142,657,3.971,658,3.273,659,2.142,660,1.566,661,2.142,662,2.142,663,1.795,664,3.273,665,2.142,666,2.142,667,2.142,668,2.142,669,3.273,670,2.742,671,2.142,672,2.142,673,2.142,674,2.142,675,3.273,676,2.142,677,2.142,678,2.142,679,2.142,680,3.273,681,3.273,682,3.273,683,2.142,684,2.142,685,1.795,686,1.795,687,1.795,688,2.142,689,2.142,690,1.795,691,2.142]],["title/classes/Note.html",[0,0.077,86,0.778]],["body/classes/Note.html",[0,0.123,2,1.58,3,0.398,4,0.354,5,0.354,8,1.064,13,0.544,14,1.305,15,3.135,16,1.709,18,1.305,23,0.597,25,1.525,26,1.508,28,1.465,29,0.031,30,0.526,31,1.073,32,1.465,39,1.501,43,0.863,46,0.528,49,0.398,57,2.132,60,2.282,61,1.783,63,3.779,64,3.779,86,1.331,97,1.525,124,0.016,125,0.021,126,0.016,145,0.984,146,0.84,438,1.58,692,2.946,693,4.666,694,4.573,695,5.236,696,4.449,697,5.577,698,5.577,699,5.577,700,4.666,701,4.666,702,4.666,703,4.666,704,3.517,705,3.517,706,3.517,707,3.517,708,3.517,709,3.517,710,4.666,711,3.517,712,4.666,713,3.517,714,3.517,715,3.517,716,5.236,717,5.236,718,2.946,719,3.517,720,3.517,721,3.517,722,2.946,723,3.517,724,3.517,725,3.517,726,3.517,727,3.517,728,3.517]],["title/components/NoteComponent.html",[127,0.045,255,0.605]],["body/components/NoteComponent.html",[0,0.093,3,0.448,4,0.397,5,0.397,23,0.671,29,0.031,30,0.506,43,0.611,46,0.448,49,0.57,60,1.933,66,1.202,86,1.392,124,0.018,125,0.023,126,0.018,127,0.077,128,0.734,129,1.202,130,1.022,131,1.022,132,1.022,133,1.022,135,1.022,136,1.716,137,1.343,139,1.302,141,1.302,222,0.734,225,0.944,233,0.87,234,1.302,235,1.302,236,1.022,237,1.508,238,1.022,239,1.022,240,0.734,241,0.734,242,1.022,243,0.671,244,1.022,245,0.734,246,1.432,247,0.734,248,0.935,249,1.022,250,0.671,251,1.022,252,0.734,253,0.87,254,1.022,255,1.083,256,1.022,257,0.734,258,1.022,259,0.671,260,1.022,261,0.734,262,0.944,263,0.734,264,1.022,265,0.734,266,1.022,267,0.734,268,0.8,269,1.022,270,1.022,330,1.408,331,1.549,350,1.106,438,1.776,509,3.311,510,2.574,516,4.217,729,3.311,730,5.539,731,5.034]],["title/classes/NoteRepresentation.html",[0,0.077,65,1.741]],["body/classes/NoteRepresentation.html",[0,0.107,1,3.894,2,1.015,3,0.256,4,0.227,5,0.227,6,3.932,7,1.471,8,1.031,9,3.437,10,2.006,11,3.437,12,2.672,13,0.797,14,0.953,15,2.891,16,1.689,17,4.811,18,0.953,19,1.471,20,1.893,23,0.384,24,1.893,25,1.907,26,1.427,28,1.497,29,0.031,30,0.538,31,0.975,32,1.497,34,1.893,35,1.893,36,1.893,37,1.893,39,1.485,41,1.893,43,0.872,44,1.893,46,0.256,47,1.327,48,1.652,49,0.386,50,3.911,51,1.821,52,2.215,53,3.437,54,3.437,55,3.437,56,3.437,57,2.195,58,2.855,59,2.855,60,1.667,61,2.105,62,2.855,63,2.219,64,2.219,65,2.755,66,0.814,67,2.219,68,1.893,69,2.389,70,1.893,71,1.652,72,1.652,73,2.855,74,2.855,75,1.667,76,1.204,77,3.828,78,3.437,79,1.383,80,2.219,81,3.44,82,2.855,83,2.855,84,2.855,85,2.491,86,1.091,87,2.855,88,2.855,89,1.893,90,2.855,91,2.002,92,2.491,93,2.855,94,3.828,95,2.855,96,1.667,97,1.114,98,2.855,99,1.471,100,0.881,101,3.437,102,1.893,103,3.828,104,2.855,105,2.855,106,1.893,107,3.437,108,1.893,109,2.855,110,1.893,111,1.893,112,1.148,113,2.855,114,2.855,115,1.893,116,2.855,117,1.893,118,1.893,119,3.828,120,2.855,121,1.893,122,3.828,123,1.893,124,0.01,125,0.016,126,0.01,145,0.953,146,0.814,732,3.408,733,3.408,734,3.408,735,4.103,736,3.408,737,3.408,738,3.408,739,3.408,740,2.259,741,2.259,742,4.103,743,2.259,744,2.259,745,2.259,746,2.259,747,2.259,748,2.259,749,2.259,750,2.259,751,2.259,752,2.259,753,2.259]],["title/components/PlaybarComponent.html",[127,0.045,257,0.605]],["body/components/PlaybarComponent.html",[0,0.091,3,0.437,4,0.388,5,0.388,23,0.655,29,0.031,30,0.498,43,0.596,46,0.437,49,0.561,66,1.183,75,1.885,124,0.018,125,0.023,126,0.018,127,0.076,128,0.716,129,1.183,130,0.997,131,0.997,132,0.997,133,0.997,135,0.997,136,1.712,137,1.34,139,1.281,141,1.281,222,0.716,225,0.92,226,1.166,228,2.061,229,1.474,230,1.474,233,0.848,234,1.281,235,1.281,236,0.997,237,1.494,238,0.997,239,0.997,240,0.716,241,0.716,242,0.997,243,0.655,244,0.997,245,0.716,246,1.416,247,0.716,248,0.716,249,0.997,250,0.655,251,0.997,252,0.716,253,0.848,254,0.997,255,0.716,256,0.997,257,1.073,258,0.997,259,0.655,260,0.997,261,0.716,262,0.92,263,0.716,264,0.997,265,0.716,266,0.997,267,0.716,268,0.78,269,0.997,270,0.997,330,1.386,331,1.532,350,1.079,359,2.226,361,1.596,362,1.596,388,2.265,418,2.265,422,2.265,438,1.732,439,2.265,464,3.226,502,2.511,754,3.23,755,4.954,756,5.475,757,4.954,758,3.855,759,2.818,760,2.265,761,4.954,762,3.23,763,3.855,764,3.855]],["title/components/RhythmComponent.html",[127,0.045,259,0.553]],["body/components/RhythmComponent.html",[0,0.043,3,0.208,4,0.185,5,0.185,8,0.878,10,1.42,13,0.69,14,0.812,16,1.574,18,0.812,23,0.312,25,1.622,26,1.444,28,1.389,29,0.031,30,0.533,31,1.012,32,1.389,39,1.403,43,0.905,46,0.505,49,0.329,51,0.649,66,0.693,76,0.649,79,1.512,80,3.351,81,2.653,86,0.438,92,2.123,97,0.6,99,1.196,100,1.225,112,1.326,124,0.008,125,0.013,126,0.008,127,0.05,128,0.341,129,0.693,130,0.475,131,0.475,132,0.475,133,0.475,135,0.475,136,1.541,137,1.215,139,0.751,141,0.751,145,1.518,146,1.295,192,0.76,222,0.341,225,0.438,226,0.555,227,0.898,228,0.982,229,1.704,230,2.152,231,2.312,232,2.18,233,0.404,234,0.751,235,0.751,236,0.475,237,1.058,238,0.475,239,0.475,240,0.341,241,0.341,242,0.475,243,0.312,244,0.475,245,0.341,246,0.931,247,0.341,248,0.341,249,0.475,250,0.312,251,0.475,252,0.341,253,0.404,254,0.475,255,0.341,256,0.475,257,0.341,258,0.475,259,0.695,260,0.475,261,0.341,262,0.438,263,0.341,264,0.475,265,0.341,266,0.475,267,0.341,268,1.195,269,0.475,270,0.475,321,2.123,322,0.76,330,0.812,331,1.007,338,2.784,350,1.145,353,2.123,359,2.129,361,1.491,362,1.491,363,1.305,364,1.552,369,1.706,370,1.706,372,1.305,376,1.42,377,1.079,382,2.129,387,1.079,411,1.539,412,1.343,417,1.552,418,1.706,419,1.196,420,1.706,421,1.706,422,1.079,423,1.552,425,2.382,426,1.079,428,1.539,448,1.079,452,2.433,453,2.433,464,1.196,465,1.539,467,2.619,469,1.552,470,1.539,475,1.343,476,1.343,477,1.552,481,1.343,491,1.891,501,2.404,502,3.086,505,1.706,510,3.086,522,2.753,525,2.433,530,1.925,541,2.433,547,1.845,561,1.196,574,1.539,576,1.343,587,1.539,630,2.831,634,1.891,643,1.539,650,1.539,660,1.343,663,3.429,685,1.539,686,1.539,687,1.539,694,2.123,696,1.343,759,1.343,760,1.079,762,1.539,765,1.539,766,3.601,767,2.904,768,3.601,769,3.601,770,3.601,771,3.601,772,3.601,773,3.601,774,4.092,775,4.545,776,2.904,777,2.904,778,2.904,779,2.904,780,2.904,781,2.904,782,4.092,783,2.904,784,1.837,785,2.433,786,2.904,787,4.963,788,1.837,789,2.904,790,2.904,791,1.837,792,2.904,793,2.904,794,4.637,795,2.904,796,2.904,797,2.904,798,2.904,799,2.904,800,2.904,801,1.837,802,2.904,803,1.837,804,1.837,805,1.837,806,1.837,807,1.343,808,1.539,809,1.343,810,2.433,811,1.837,812,1.837,813,2.904,814,1.837,815,1.837,816,5.906,817,1.837,818,1.837,819,1.837,820,1.837,821,1.837,822,1.837,823,1.837,824,1.837,825,1.837,826,1.837,827,1.539,828,1.539,829,1.837,830,1.837,831,1.837,832,2.904,833,1.837,834,1.837,835,1.837,836,1.837,837,1.837,838,1.837,839,1.837,840,1.539,841,2.904,842,1.837,843,2.904,844,1.837,845,1.837,846,1.837,847,1.837,848,1.837,849,1.837,850,1.539,851,2.904,852,2.433,853,1.837,854,2.904,855,1.837,856,1.837,857,4.092,858,4.092,859,1.837,860,3.601,861,3.601,862,1.539,863,3.017,864,2.904,865,1.837,866,1.837,867,1.837,868,1.837,869,1.837,870,1.837,871,1.837,872,2.433,873,2.904,874,2.904,875,1.837,876,1.837,877,1.837,878,1.837,879,1.837,880,1.539,881,1.837,882,1.539,883,1.343]],["title/components/SaveMenuComponent.html",[127,0.045,261,0.605]],["body/components/SaveMenuComponent.html",[0,0.092,3,0.444,4,0.394,5,0.394,23,0.666,29,0.031,30,0.504,43,0.607,46,0.444,49,0.567,66,1.196,75,1.918,124,0.018,125,0.023,126,0.018,127,0.077,128,0.728,129,1.196,130,1.014,131,1.014,132,1.014,133,1.014,135,1.014,136,1.715,137,1.342,139,1.295,141,1.295,222,0.728,225,0.936,226,1.186,233,0.863,234,1.295,235,1.295,236,1.014,237,1.504,238,1.014,239,1.014,240,0.728,241,0.728,242,1.014,243,0.666,244,1.014,245,0.728,246,1.427,247,0.728,248,0.728,249,1.014,250,0.666,251,1.014,252,0.728,253,0.863,254,1.014,255,0.728,256,1.014,257,0.728,258,1.014,259,0.666,260,1.014,261,1.08,262,1.51,263,0.728,264,1.014,265,0.728,266,1.014,267,0.728,268,0.794,269,1.014,270,1.014,305,2.867,330,1.401,331,1.544,350,1.097,434,2.554,435,3.661,436,4.034,437,3.661,438,1.762,439,2.304,884,3.285]],["title/classes/Signature.html",[0,0.077,630,1.741]],["body/classes/Signature.html",[0,0.1,2,1.073,3,0.27,4,0.24,5,0.24,8,1.42,10,3.13,13,0.369,14,0.994,15,2.798,16,1.674,18,0.994,23,0.406,25,1.161,26,1.428,28,1.404,29,0.031,30,0.563,31,0.925,32,1.566,39,1.578,43,0.777,46,0.27,49,0.27,51,1.659,52,2.608,57,2.083,61,1.358,69,1.795,79,1.214,86,1.256,97,0.781,112,1.186,124,0.011,125,0.016,126,0.011,145,1.314,146,1.428,241,0.66,320,2.759,384,2.074,449,2.738,477,3.523,505,2.087,530,1.898,547,0.989,563,3.081,564,1.403,630,3.46,644,2.976,885,2.001,886,2.976,887,4.696,888,4.696,889,4.696,890,4.696,891,4.696,892,3.552,893,3.552,894,3.552,895,3.552,896,3.552,897,3.552,898,2.596,899,4.696,900,4.696,901,3.433,902,3.552,903,3.935,904,2.388,905,3.552,906,2.388,907,3.552,908,2.388,909,3.427,910,5.262,911,2.388,912,2.388,913,2.388,914,3.552,915,3.552,916,2.388,917,2.976,918,3.552,919,3.552,920,2.388,921,3.552,922,2.388,923,3.552,924,2.388,925,2.313,926,4.241,927,5.262,928,2.388,929,5.02,930,5.262,931,3.552,932,3.552,933,3.552,934,2.388,935,2.388,936,2.388,937,3.553,938,2.388,939,2.001,940,2.388,941,2.001,942,2.388]],["title/components/SignatureComponent.html",[127,0.045,263,0.605]],["body/components/SignatureComponent.html",[0,0.08,3,0.383,4,0.34,5,0.34,13,0.524,14,1.272,23,0.575,26,0.808,29,0.031,30,0.457,31,0.575,43,0.524,46,0.582,49,0.515,52,1.883,61,1.294,66,1.086,79,1.176,86,0.808,100,1.328,124,0.015,125,0.021,126,0.015,127,0.08,128,0.629,129,1.086,130,0.875,131,0.875,132,0.875,133,0.875,135,0.875,136,1.688,137,1.321,138,2.474,139,1.176,141,1.176,145,0.947,146,0.808,222,0.629,225,0.808,226,1.024,227,1.655,229,1.294,230,1.738,233,0.745,234,1.176,235,1.176,236,0.875,237,1.42,238,0.875,239,0.875,240,0.629,241,0.629,242,0.875,243,0.575,244,0.875,245,0.629,246,1.328,247,0.629,248,0.629,249,0.875,250,0.575,251,0.875,252,0.629,253,0.745,254,0.875,255,0.629,256,0.875,257,0.629,258,0.875,259,0.575,260,0.875,261,0.629,262,0.808,263,1.02,264,0.875,265,0.629,266,0.875,267,0.629,268,0.685,269,0.875,270,0.875,330,1.272,331,1.437,350,0.947,358,2.474,359,2.043,360,1.988,361,1.401,362,1.401,363,2.308,364,1.809,367,1.988,368,1.988,369,1.988,370,1.988,371,2.204,372,2.043,373,2.474,376,2.224,383,1.655,420,1.988,421,1.988,423,1.809,424,2.474,425,1.809,426,1.988,427,2.474,438,1.521,469,1.809,477,1.809,489,2.204,505,1.988,563,1.655,564,1.988,565,2.836,630,3.406,660,2.474,759,2.474,760,2.672,901,3.325,909,2.962,943,2.836,944,5.136,945,4.548,946,4.548,947,3.385,948,3.385,949,3.385,950,3.385,951,2.836,952,3.385,953,4.548,954,4.548,955,3.385,956,3.325,957,3.385]],["title/classes/SoundPlayer.html",[0,0.077,958,2.382]],["body/classes/SoundPlayer.html",[0,0.077,2,1.475,3,0.372,4,0.33,5,0.33,8,1.348,13,0.508,14,1.246,15,2.473,16,1.402,18,1.246,25,1.456,26,1.453,28,1.246,29,0.031,30,0.448,31,0.859,32,1.246,39,1.402,43,0.839,46,0.505,47,1.929,48,2.4,49,0.372,51,1.574,66,0.784,69,1.255,79,0.849,97,1.456,100,1.152,112,1.246,124,0.015,125,0.02,126,0.015,145,1.246,146,1.295,222,0.61,322,2.643,335,2.901,336,2.138,344,2.901,422,2.971,449,2.773,530,2.899,544,3.965,547,2.245,550,4.448,629,4.237,632,4.544,670,2.751,690,4.751,807,3.257,840,3.733,958,3.257,959,5.168,960,2.751,961,4.455,962,5.847,963,4.455,964,3.733,965,4.455,966,4.455,967,4.455,968,3.283,969,3.283,970,5.67,971,3.283,972,4.455,973,3.283,974,4.455,975,4.455,976,5.67,977,4.455,978,4.455,979,4.455,980,3.733,981,5.424,982,3.283,983,5.168,984,5.057,985,5.057,986,3.283,987,3.283,988,3.283,989,3.283,990,3.283,991,3.283,992,4.455,993,3.283,994,3.283,995,3.283,996,2.751,997,3.283,998,3.283,999,3.283,1000,3.283,1001,3.283]],["title/classes/Tempo.html",[0,0.077,522,1.593]],["body/classes/Tempo.html",[0,0.109,2,1.253,3,0.316,4,0.28,5,0.28,8,1.529,13,0.432,14,1.113,15,2.717,16,1.62,18,1.113,23,0.474,25,1.3,26,1.441,28,1.297,29,0.031,30,0.508,31,0.907,32,1.297,39,1.595,43,0.615,46,0.316,49,0.316,51,1.786,52,2.695,57,2.185,69,1.932,79,1.437,86,1.522,97,0.912,100,0.721,112,1.113,124,0.013,125,0.018,126,0.013,241,0.739,320,2.724,384,1.364,449,2.472,522,3.192,524,2.908,528,4.636,535,2.908,537,4.234,538,3.332,539,3.332,547,1.155,555,2.908,557,2.59,559,2.337,563,3.042,564,1.639,886,3.332,898,2.908,901,2.039,909,3.874,939,3.332,941,3.332,1002,2.337,1003,5.054,1004,5.054,1005,5.054,1006,5.054,1007,5.054,1008,3.332,1009,3.978,1010,3.978,1011,2.789,1012,3.978,1013,2.789,1014,2.789,1015,2.789,1016,2.789,1017,2.789,1018,2.789,1019,4.79,1020,3.332,1021,2.789,1022,2.789,1023,2.789,1024,5.116,1025,2.789,1026,4.477,1027,4.636,1028,4.636,1029,2.789,1030,3.978,1031,2.789,1032,2.789,1033,2.789]],["title/components/TempoComponent.html",[127,0.045,265,0.605]],["body/components/TempoComponent.html",[0,0.049,3,0.237,4,0.21,5,0.21,8,1.327,13,0.323,14,0.898,16,1.293,18,0.898,23,0.355,25,1.434,26,1.387,28,1.228,29,0.031,30,0.584,31,0.936,32,1.228,39,1.455,43,0.853,46,0.443,49,0.364,51,1.55,52,2.405,57,1.494,60,2.146,66,0.766,69,1.677,76,1.55,79,1.425,86,1.528,100,1.346,124,0.01,125,0.015,126,0.01,127,0.07,128,0.388,129,0.766,130,0.54,131,0.54,132,0.54,133,0.54,135,0.54,136,1.577,137,1.234,138,1.527,139,0.83,141,0.83,145,1.228,146,1.048,215,2.858,217,3.208,222,0.388,225,0.499,226,0.632,227,1.022,229,0.799,230,0.799,231,0.939,233,0.46,234,0.83,235,0.83,236,0.54,237,1.135,238,0.54,239,0.54,240,0.388,241,0.388,242,0.54,243,0.355,244,0.54,245,0.388,246,1.011,247,0.388,248,0.388,249,0.54,250,0.355,251,0.54,252,0.388,253,0.46,254,0.54,255,0.388,256,0.54,257,0.388,258,0.54,259,0.355,260,0.54,261,0.388,262,0.499,263,0.388,264,0.54,265,0.815,266,0.54,267,0.388,268,0.423,269,0.54,270,0.54,320,2.937,330,0.898,331,1.094,335,2.091,336,2.858,338,1.886,341,2.347,344,2.091,350,0.584,358,1.527,359,0.939,361,0.865,362,0.865,363,1.757,364,1.117,367,1.886,368,1.886,369,1.227,370,1.227,371,1.36,372,1.442,373,1.527,376,1.912,382,1.442,383,1.022,384,2.445,423,1.117,424,1.527,425,1.117,426,1.227,427,2.347,432,1.527,449,2.146,450,1.36,462,1.527,469,1.117,491,1.36,522,3.066,524,2.347,528,4.113,535,2.347,547,1.96,561,1.36,563,2.936,564,1.227,571,1.75,576,1.527,588,2.69,634,2.091,654,3.676,760,1.886,883,2.347,937,2.69,956,2.347,1008,2.69,1019,4.617,1020,2.69,1024,3.276,1026,2.69,1034,1.75,1035,3.91,1036,3.21,1037,3.91,1038,3.91,1039,3.91,1040,4.388,1041,2.347,1042,2.347,1043,4.388,1044,4.388,1045,3.91,1046,2.089,1047,3.21,1048,3.21,1049,2.089,1050,5.724,1051,4.388,1052,2.69,1053,2.089,1054,3.676,1055,2.69,1056,2.089,1057,2.089,1058,2.089,1059,2.089,1060,4.999,1061,3.91,1062,3.21,1063,2.089,1064,2.089,1065,4.388,1066,2.089,1067,2.089,1068,3.21,1069,2.089,1070,3.21,1071,2.089,1072,4.388,1073,2.089,1074,2.089,1075,2.089,1076,3.91,1077,3.91,1078,3.21,1079,2.089,1080,3.21,1081,2.089,1082,2.089,1083,2.089,1084,2.089,1085,2.089,1086,3.21,1087,3.21,1088,2.089,1089,2.089,1090,2.089,1091,3.21,1092,3.21,1093,3.21,1094,2.089,1095,3.21,1096,4.388,1097,2.347,1098,2.089]],["title/classes/Track.html",[0,0.077,268,0.659]],["body/classes/Track.html",[0,0.06,2,1.144,3,0.288,4,0.256,5,0.256,8,0.77,13,0.394,14,1.042,15,3.04,16,1.692,18,1.042,23,0.433,26,1.51,28,1.654,29,0.031,30,0.573,31,1.039,32,1.726,39,1.567,43,0.9,46,0.288,49,0.288,51,1.556,52,1.823,57,1.971,60,2.931,61,1.424,67,2.868,69,2.29,79,1.139,80,1.659,81,1.991,86,1.517,91,2.188,99,2.426,100,1.504,112,1.507,124,0.012,125,0.017,126,0.012,145,0.713,146,1.051,192,2.006,241,0.692,268,1.258,322,2.134,417,2.59,449,1.246,510,2.426,696,2.723,775,3.121,794,4.66,809,4.511,810,4.06,1099,2.134,1100,4.954,1101,4.404,1102,3.725,1103,4.404,1104,3.725,1105,4.06,1106,4.845,1107,3.725,1108,3.725,1109,4.845,1110,4.845,1111,3.725,1112,3.725,1113,3.725,1114,3.725,1115,3.725,1116,3.725,1117,3.725,1118,3.725,1119,2.547,1120,2.547,1121,2.547,1122,3.725,1123,3.725,1124,2.547,1125,3.725,1126,4.06,1127,2.547,1128,2.547,1129,2.547,1130,3.725,1131,2.547,1132,2.547,1133,2.547,1134,3.725,1135,2.547,1136,3.725,1137,2.547,1138,2.547,1139,2.547,1140,3.725,1141,2.547,1142,2.547,1143,2.547,1144,3.725,1145,2.547,1146,2.547,1147,2.547,1148,2.547,1149,2.547,1150,3.725,1151,3.725,1152,4.404,1153,2.547,1154,4.404,1155,3.725,1156,2.547]],["title/components/TrackComponent.html",[127,0.045,267,0.605]],["body/components/TrackComponent.html",[0,0.049,3,0.234,4,0.39,5,0.208,10,1.899,12,1.346,13,0.32,14,0.891,16,1.385,18,0.891,23,0.66,25,1.695,26,1.472,28,0.891,29,0.031,30,0.439,31,0.953,32,0.891,39,1.421,43,0.927,46,0.494,49,0.361,57,0.79,65,2.076,67,1.346,69,1.217,76,1.125,79,1.287,81,1.702,86,0.493,96,1.011,97,0.676,100,1.574,112,1.451,124,0.009,125,0.015,126,0.009,127,0.054,128,0.384,129,0.76,130,0.534,131,0.534,132,0.534,133,0.534,135,0.534,136,1.574,137,1.232,139,0.823,141,0.823,145,1.498,146,1.238,192,0.856,222,0.384,225,0.493,226,0.625,227,1.011,228,1.105,229,1.801,230,1.801,231,2.565,232,2.536,233,0.455,234,0.823,235,0.823,236,0.534,237,1.128,238,0.534,239,0.534,240,0.384,241,0.875,242,0.534,243,0.351,244,0.534,245,0.384,246,1.004,247,0.384,248,0.384,249,0.534,250,0.351,251,0.534,252,0.384,253,0.455,254,0.534,255,0.384,256,0.534,257,0.384,258,0.534,259,0.351,260,0.534,261,0.384,262,0.493,263,0.384,264,0.534,265,0.384,266,0.534,267,0.81,268,1.173,269,0.534,270,0.534,322,1.608,330,0.891,331,1.087,332,3.254,333,2.668,335,2.074,336,3.378,344,2.529,350,1.221,359,1.745,360,1.214,361,0.856,362,0.856,363,1.431,364,2.076,365,1.511,366,2.074,367,1.871,368,1.214,372,0.929,374,2.529,375,2.074,376,1.557,377,1.871,381,1.346,382,2.565,383,1.557,384,2.434,386,1.511,387,1.871,388,1.214,389,1.511,405,1.732,417,1.105,422,1.214,423,2.772,425,2.998,426,2.563,429,1.511,430,1.511,438,1.431,442,2.328,448,2.282,450,2.841,464,2.841,467,1.214,469,1.105,474,1.732,475,1.511,476,1.511,477,1.702,487,1.732,489,1.346,491,2.841,502,1.346,547,2.061,597,1.732,602,2.839,609,1.732,722,1.732,760,1.214,785,2.668,808,1.732,809,1.511,827,1.732,828,2.668,850,1.732,852,3.254,862,1.732,863,2.668,872,1.732,880,1.732,882,1.732,956,1.511,964,2.668,980,2.668,983,3.948,996,1.732,1100,1.732,1105,3.656,1126,3.948,1157,1.732,1158,3.884,1159,3.884,1160,3.254,1161,4.363,1162,4.363,1163,3.184,1164,3.884,1165,4.363,1166,3.884,1167,3.884,1168,3.884,1169,3.184,1170,2.067,1171,2.067,1172,2.067,1173,2.067,1174,2.067,1175,2.067,1176,2.067,1177,2.067,1178,2.067,1179,3.184,1180,2.067,1181,2.067,1182,2.067,1183,2.067,1184,2.067,1185,2.067,1186,2.067,1187,3.184,1188,2.067,1189,2.067,1190,3.184,1191,2.067,1192,2.067,1193,2.067,1194,2.067,1195,2.067,1196,3.184,1197,3.184,1198,2.067,1199,2.067,1200,3.184,1201,2.067,1202,3.884,1203,2.067,1204,2.067,1205,3.184,1206,2.067,1207,2.067,1208,2.067,1209,2.067,1210,3.184,1211,3.184,1212,3.884,1213,2.067,1214,4.363,1215,4.978,1216,2.067,1217,3.884,1218,3.884,1219,2.067,1220,2.067,1221,1.732,1222,2.067,1223,3.884,1224,2.067,1225,3.184,1226,2.067,1227,2.067,1228,2.067,1229,2.067,1230,2.067,1231,2.067,1232,2.067,1233,2.067,1234,2.067,1235,2.067,1236,2.067,1237,3.184,1238,2.067,1239,2.067]],["title/coverage.html",[1240,3.713]],["body/coverage.html",[0,0.144,1,2.349,5,0.363,6,3.09,7,3.09,19,2.349,29,0.031,31,0.613,47,2.788,65,1.928,79,0.933,86,0.861,100,1.626,124,0.016,125,0.022,126,0.016,127,0.091,128,0.67,134,3.022,232,3.103,240,0.67,243,0.613,245,0.67,247,0.67,248,0.67,250,0.613,252,0.67,255,0.67,257,0.67,259,0.613,261,0.67,263,0.67,265,0.67,267,0.67,268,0.73,297,2.637,302,2.637,305,2.637,306,2.637,312,2.637,328,3.022,329,3.022,387,2.788,391,3.022,433,3.022,434,3.453,440,3.022,473,2.637,485,2.637,504,3.022,517,3.022,522,1.764,585,3.975,618,3.022,619,3.022,630,1.928,692,3.022,729,3.022,754,3.022,765,3.022,807,4.392,884,3.022,885,3.022,925,2.349,943,3.022,958,2.637,959,3.022,960,3.022,1002,3.022,1034,3.022,1041,2.637,1042,2.637,1099,3.022,1157,3.022,1240,3.022,1241,3.607,1242,3.607,1243,3.607,1244,5.302,1245,5.302,1246,3.607,1247,3.607,1248,3.607,1249,3.607,1250,3.607,1251,3.607,1252,3.607,1253,3.607,1254,3.607,1255,3.607,1256,6.214,1257,4.278,1258,4.392,1259,6.214,1260,3.022,1261,2.637,1262,3.022,1263,3.607,1264,3.607,1265,3.607,1266,3.607,1267,3.607,1268,3.607,1269,3.607,1270,3.022,1271,5.633,1272,3.022,1273,3.975,1274,3.022,1275,3.022,1276,3.607,1277,3.607]],["title/dependencies.html",[274,2.549,1278,2.728]],["body/dependencies.html",[29,0.031,124,0.022,125,0.026,126,0.022,222,0.907,274,3.182,290,4.802,291,4.19,294,4.094,318,4.094,1279,4.886,1280,5.518,1281,4.886,1282,4.886,1283,4.094,1284,4.886,1285,4.886,1286,4.886,1287,4.886,1288,4.886,1289,4.886]],["title/miscellaneous/enumerations.html",[1290,1.226,1291,3.28]],["body/miscellaneous/enumerations.html",[13,0.424,16,1.573,29,0.031,30,0.534,31,0.465,60,2.245,63,2.558,64,2.558,76,1.875,86,1.555,96,1.34,112,1.099,124,0.013,125,0.018,126,0.013,146,1.555,192,1.626,322,1.626,382,1.765,473,2.004,485,2.004,488,3.291,501,2.946,563,1.921,648,3.291,718,3.291,903,3.291,925,3.265,1097,2.004,1221,2.296,1257,2.004,1258,4.037,1261,2.004,1290,1.231,1291,2.296,1292,2.296,1293,2.296,1294,3.928,1295,2.741,1296,2.741,1297,2.741,1298,4.591,1299,2.741,1300,2.741,1301,4.201,1302,4.591,1303,2.741,1304,5.307,1305,2.741,1306,4.201,1307,2.741,1308,5.014,1309,2.741,1310,2.741,1311,2.741,1312,3.928,1313,3.928,1314,3.928,1315,3.928,1316,5.014,1317,3.928,1318,3.928,1319,3.928,1320,3.928,1321,3.928,1322,3.928,1323,2.741,1324,2.741,1325,2.741,1326,3.928,1327,3.928,1328,3.928,1329,5.818,1330,3.928,1331,3.928,1332,3.928,1333,3.928,1334,3.928,1335,3.928,1336,3.928,1337,3.928,1338,3.928,1339,3.928,1340,2.741,1341,2.741,1342,2.741,1343,3.928,1344,2.741,1345,2.296,1346,2.741,1347,2.741,1348,2.741,1349,2.741,1350,2.741,1351,2.741,1352,2.741,1353,2.741,1354,3.928,1355,2.741,1356,3.928,1357,2.741,1358,2.741,1359,2.741,1360,2.741,1361,2.741,1362,2.741,1363,2.741,1364,2.741,1365,2.741,1366,2.741,1367,2.741,1368,2.741,1369,2.741,1370,2.741,1371,2.741,1372,2.741,1373,2.741,1374,2.741,1375,2.741,1376,2.741,1377,2.741,1378,2.741,1379,2.741,1380,2.741,1381,2.741,1382,2.741,1383,2.741,1384,2.741,1385,2.741,1386,2.741,1387,2.741,1388,2.741,1389,2.741,1390,2.741,1391,2.741,1392,2.741,1393,2.741,1394,2.741,1395,2.741,1396,2.741,1397,2.741,1398,2.741,1399,2.741,1400,2.741,1401,2.741,1402,2.741,1403,2.741,1404,2.741,1405,2.741,1406,2.741,1407,2.741,1408,2.741,1409,2.741,1410,2.741,1411,2.741,1412,2.741,1413,2.741,1414,2.741,1415,2.741,1416,2.741,1417,2.741,1418,2.741,1419,2.741,1420,2.741,1421,2.741,1422,2.741,1423,2.741,1424,2.741,1425,2.741,1426,2.741,1427,2.741,1428,2.741,1429,2.741,1430,2.741,1431,2.741,1432,2.741,1433,2.741,1434,2.741,1435,2.741,1436,2.741,1437,2.741,1438,2.741,1439,2.741,1440,2.741,1441,2.741,1442,2.741,1443,2.741,1444,2.741,1445,2.741,1446,2.741,1447,2.741,1448,2.741,1449,2.741,1450,2.741,1451,2.741,1452,2.741,1453,2.741,1454,2.741,1455,2.741,1456,2.741,1457,2.741,1458,2.741,1459,2.741,1460,2.741,1461,2.741,1462,2.741,1463,2.741,1464,2.741,1465,2.741,1466,2.741,1467,2.741,1468,2.741,1469,2.741,1470,2.741,1471,2.741,1472,2.741,1473,2.741,1474,2.741,1475,2.741,1476,2.741,1477,2.741,1478,2.741,1479,2.741,1480,2.741,1481,2.741,1482,2.741,1483,2.741,1484,2.741,1485,2.741,1486,2.741,1487,2.741,1488,2.741,1489,2.741,1490,2.741,1491,3.928,1492,2.741,1493,2.741,1494,2.741,1495,2.741,1496,2.741,1497,2.741,1498,2.741,1499,2.741,1500,2.741,1501,2.741,1502,2.741,1503,2.741,1504,2.741,1505,2.741,1506,2.741,1507,2.741,1508,2.741,1509,2.741,1510,2.741,1511,2.741,1512,2.741,1513,2.741,1514,2.741,1515,2.741]],["title/miscellaneous/functions.html",[1290,1.226,1516,3.28]],["body/miscellaneous/functions.html",[8,1.812,12,3.242,13,0.601,16,1.585,19,3.242,28,1.676,29,0.03,30,0.646,32,1.676,39,1.585,65,2.077,69,2.215,71,2.84,76,1.759,81,2.077,85,3.64,86,1.592,112,1.087,124,0.018,125,0.023,126,0.018,137,0.786,146,1.189,192,1.608,320,3.404,384,2.93,448,2.283,530,2.077,563,2.687,602,2.84,634,3.578,694,2.84,909,3.242,925,3.901,1041,3.64,1042,3.64,1052,3.255,1054,4.855,1055,3.255,1257,2.84,1258,4.614,1260,4.171,1261,2.84,1262,4.171,1283,3.255,1290,1.746,1292,5.019,1293,3.255,1301,3.255,1306,3.255,1516,3.255,1517,4.979,1518,3.885,1519,3.885,1520,5.494,1521,3.885,1522,3.885,1523,3.885,1524,3.885,1525,3.885,1526,3.885,1527,3.885,1528,3.885,1529,3.885,1530,3.885,1531,3.885]],["title/index.html",[13,0.422,1532,2.728,1533,2.728]],["body/index.html",[4,0.442,29,0.025,30,0.442,79,1.136,124,0.02,125,0.025,126,0.02,127,0.081,137,0.889,220,3.68,226,1.757,286,2.861,395,3.68,448,2.581,549,4.505,557,2.861,883,4.427,917,3.68,951,4.505,1160,3.68,1280,3.68,1534,4.393,1535,5.811,1536,5.811,1537,4.393,1538,4.393,1539,5.377,1540,6.212,1541,6.402,1542,4.393,1543,4.393,1544,4.393,1545,4.393,1546,4.393,1547,4.393,1548,4.393,1549,4.393,1550,4.393,1551,5.811,1552,4.393,1553,6.212,1554,4.393,1555,4.393,1556,4.393,1557,4.393,1558,4.393,1559,4.393,1560,3.68,1561,5.377,1562,6.055,1563,5.377,1564,5.377,1565,4.393,1566,4.393,1567,4.393,1568,4.393,1569,5.811,1570,4.393,1571,3.211,1572,4.393,1573,4.393]],["title/modules.html",[273,2.604]],["body/modules.html",[29,0.027,72,3.769,124,0.024,125,0.027,126,0.024,272,3.358,273,3.029,283,3.029,291,3.769,1574,5.156,1575,5.913,1576,5.156,1577,5.156]],["title/overview.html",[1571,3.24]],["body/overview.html",[2,1.866,29,0.031,124,0.019,125,0.024,126,0.019,128,1.175,129,0.992,192,1.72,233,0.914,240,1.052,243,0.962,245,1.052,247,1.052,248,1.052,250,0.962,252,1.052,255,1.052,257,1.052,259,0.962,261,1.052,263,1.052,265,1.052,267,1.052,271,2.705,272,4.428,273,2.44,274,2.705,275,3.48,276,3.48,277,3.48,278,3.037,279,3.48,280,3.48,281,3.48,282,3.48,283,3.33,284,4.352,285,3.48,286,2.705,316,2.705,1097,3.037,1345,3.48,1571,3.037,1578,4.154]],["title/routes.html",[316,2.886]],["body/routes.html",[29,0.027,124,0.024,125,0.027,126,0.024,316,3.421]],["title/miscellaneous/typealiases.html",[1290,1.226,1579,3.915]],["body/miscellaneous/typealiases.html",[6,3.344,7,3.842,13,0.794,29,0.027,31,1.002,50,4.312,124,0.023,125,0.027,126,0.023,1290,2.307,1580,5.135,1581,5.135,1582,4.302]],["title/miscellaneous/variables.html",[1290,1.226,1583,3.28]],["body/miscellaneous/variables.html",[13,0.713,29,0.031,31,1.045,47,3.756,76,1.629,97,1.81,124,0.021,125,0.025,126,0.021,145,1.66,146,1.417,216,4.047,547,1.908,623,3.862,898,4.047,1270,3.862,1272,3.862,1273,3.862,1274,4.639,1275,4.639,1290,2.071,1560,4.972,1582,3.862,1583,4.972,1584,5.536,1585,4.61,1586,4.61,1587,4.61,1588,4.61,1589,4.61,1590,4.61,1591,4.61,1592,4.61,1593,4.61,1594,4.61,1595,4.61,1596,4.61,1597,4.61]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":100,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["0.05rem",{"_index":1094,"title":{},"body":{"components/TempoComponent.html":{}}}],["0.10.2",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["0.1688888",{"_index":595,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["0.1rem",{"_index":1098,"title":{},"body":{"components/TempoComponent.html":{}}}],["0.25rem",{"_index":956,"title":{},"body":{"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["0.5rem",{"_index":502,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["0.75",{"_index":503,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["0.75rem",{"_index":760,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["0.8373333",{"_index":594,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["0.85",{"_index":460,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["0/1",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["0;1",{"_index":985,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["0s",{"_index":979,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["0|1)|47|mc|nd|ri)|sgh",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["1",{"_index":112,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["1.2em",{"_index":589,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["1.3",{"_index":379,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.3em",{"_index":358,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["1.5em",{"_index":588,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TempoComponent.html":{}}}],["1.5rem",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["1.6",{"_index":378,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.6em",{"_index":356,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["1.8em",{"_index":879,"title":{},"body":{"components/RhythmComponent.html":{}}}],["1.wav",{"_index":1492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1/1",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1266,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":473,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["10/11",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["1000",{"_index":843,"title":{},"body":{"components/RhythmComponent.html":{}}}],["100vh",{"_index":465,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["11",{"_index":1351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["11.0.4",{"_index":1280,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11/11",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["112.5",{"_index":586,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["12",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["12/13",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["120",{"_index":577,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["120.6",{"_index":458,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["120000",{"_index":835,"title":{},"body":{"components/RhythmComponent.html":{}}}],["1207|6310|6590|3gso|4thp|50[1",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["12rem",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{}}}],["13",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["13/13",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["15",{"_index":1578,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["16n",{"_index":1330,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1n",{"_index":1325,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["1rem",{"_index":360,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["2",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["2.0.0",{"_index":1287,"title":{},"body":{"dependencies.html":{}}}],["2.4em",{"_index":881,"title":{},"body":{"components/RhythmComponent.html":{}}}],["2.wav",{"_index":1494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2/20",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["20|go|ma)|i230|iac",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["21",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":607,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["255",{"_index":1096,"title":{},"body":{"components/TempoComponent.html":{}}}],["275px",{"_index":497,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["28n",{"_index":1338,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2]|n20[2",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["2n",{"_index":1326,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2rem",{"_index":872,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["2s",{"_index":615,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["2|po(ck|rt|se)|prox|psio|pt",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":96,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["3.5rem",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["3/14",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["30rem",{"_index":583,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["31",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["3rem",{"_index":862,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["4",{"_index":903,"title":{},"body":{"classes/Signature.html":{},"miscellaneous/enumerations.html":{}}}],["4/8",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":496,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["45deg",{"_index":606,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["49.1",{"_index":457,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["4n",{"_index":1327,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5",{"_index":1221,"title":{},"body":{"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["50",{"_index":387,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["500",{"_index":498,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["5rem",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{},"components/MetronomeComponent.html":{},"components/TempoComponent.html":{}}}],["5|g",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["6",{"_index":1345,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["6.6.0",{"_index":1285,"title":{},"body":{"dependencies.html":{}}}],["6/19",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":559,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["60vw",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{}}}],["66",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["6]i|770s|802s|a",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["6rem",{"_index":877,"title":{},"body":{"components/RhythmComponent.html":{}}}],["7",{"_index":1097,"title":{},"body":{"components/TempoComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["75",{"_index":611,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["7]0|os|wa|ze)|fetc|fly",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["7]|i",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":488,"title":{},"body":{"components/MainMenuComponent.html":{},"miscellaneous/enumerations.html":{}}}],["80",{"_index":1239,"title":{},"body":{"components/TrackComponent.html":{}}}],["87",{"_index":1222,"title":{},"body":{"components/TrackComponent.html":{}}}],["8]|c))|phil|pire|pl(ay|uc)|pn",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["8n",{"_index":1328,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["8rem",{"_index":859,"title":{},"body":{"components/RhythmComponent.html":{}}}],["9",{"_index":485,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["9/10",{"_index":1264,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":585,"title":{},"body":{"components/MetronomeComponent.html":{},"coverage.html":{}}}],["92",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["9rem",{"_index":1213,"title":{},"body":{"components/TrackComponent.html":{}}}],["9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0",{"_index":208,"title":{},"body":{"components/AppComponent.html":{}}}],["_",{"_index":1316,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_)|g1",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["_16n_8n_16n",{"_index":1344,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_16n_r",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_1n_r",{"_index":1349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n",{"_index":1343,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_2_8n",{"_index":1508,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_8n",{"_index":1347,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_16n_8n_2_16n",{"_index":1511,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_8n",{"_index":1342,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2_8n_2_16n",{"_index":1507,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_2n_r",{"_index":1350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_3_16n_d_8n",{"_index":1510,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_3_8n",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_16n",{"_index":1348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_16n_8n",{"_index":1504,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4_8n",{"_index":1341,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n",{"_index":1339,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n_r",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_4n_tr",{"_index":1340,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_6_16n",{"_index":1502,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_16n_8n",{"_index":1506,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_2_16n",{"_index":1346,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_2_16n_8n",{"_index":1505,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_4_16n",{"_index":1503,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_8n_r",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_2n_r",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_4n",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_4n_r",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_8n_3_16n",{"_index":1509,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_d_8n_r",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_du",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["_|a|g|p|s|t)|tp)|hu(aw|tc)|i",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["absolute",{"_index":381,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["absvertcenteredinteractive",{"_index":1223,"title":{},"body":{"components/TrackComponent.html":{}}}],["according",{"_index":649,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["accordion",{"_index":1380,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_bass",{"_index":1391,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_grand_piano",{"_index":1359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_guitar_nylon",{"_index":1383,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["acoustic_guitar_steel",{"_index":1384,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["active",{"_index":443,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["actual_component",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["add",{"_index":9,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addnote",{"_index":1102,"title":{},"body":{"classes/Track.html":{}}}],["addnote(evt",{"_index":834,"title":{},"body":{"components/RhythmComponent.html":{}}}],["addnote(note",{"_index":1127,"title":{},"body":{"classes/Track.html":{}}}],["addon",{"_index":1,"title":{"classes/AddOn.html":{}},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{}}}],["addon#number",{"_index":53,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon#usehook",{"_index":54,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon(addon.number",{"_index":117,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addon.usehook",{"_index":118,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addonjson",{"_index":50,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/typealiases.html":{}}}],["addonjson|null",{"_index":89,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addtoimgspaths",{"_index":732,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["addtoimgspaths(imgname",{"_index":104,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["addtrack",{"_index":776,"title":{},"body":{"components/RhythmComponent.html":{}}}],["addtrack(bool",{"_index":783,"title":{},"body":{"components/RhythmComponent.html":{}}}],["afterward",{"_index":513,"title":{},"body":{"components/MeasureComponent.html":{}}}],["agogo",{"_index":1472,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["ajouter",{"_index":352,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["aliases",{"_index":1580,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":372,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["allow",{"_index":1071,"title":{},"body":{"components/TempoComponent.html":{}}}],["allows",{"_index":661,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["along",{"_index":657,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["alto_sax",{"_index":1424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amount",{"_index":998,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["anacrouse",{"_index":876,"title":{},"body":{"components/RhythmComponent.html":{}}}],["android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|android|silk|lge",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":1535,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1281,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1282,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["animation",{"_index":613,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["animation($name",{"_index":599,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["animation(rotating",{"_index":603,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["app",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["appareil",{"_index":410,"title":{},"body":{"components/DashboardComponent.html":{}}}],["appcomponent",{"_index":128,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applause",{"_index":1485,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":272,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":283,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":80,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["article",{"_index":1231,"title":{},"body":{"components/TrackComponent.html":{}}}],["artifacts",{"_index":1554,"title":{},"body":{"index.html":{}}}],["aside",{"_index":461,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["assets/images",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/images/notes",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/images/rythms",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/sounds",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/sounds/metronome/clock",{"_index":1491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["assets/sounds/metronome/toc.wav",{"_index":1489,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":909,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"miscellaneous/functions.html":{}}}],["async",{"_index":625,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["attribute",{"_index":338,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{}}}],["attributes",{"_index":91,"title":{},"body":{"classes/AddOn.html":{},"components/MeasureComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"classes/Track.html":{}}}],["audio",{"_index":970,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["audio(\"../\"+environment.pathsfromapp.sounds+soundname",{"_index":990,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["auto",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["automatically",{"_index":1546,"title":{},"body":{"index.html":{}}}],["available",{"_index":1577,"title":{},"body":{"modules.html":{}}}],["avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":688,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["a|qc(07|12|21|32|60",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["background",{"_index":383,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["bagpipe",{"_index":1468,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["banjo",{"_index":1464,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["baritone_sax",{"_index":1426,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base",{"_index":902,"title":{},"body":{"classes/Signature.html":{}}}],["base.svg",{"_index":591,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["basicnote",{"_index":563,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["basicnote#getnumber|number",{"_index":936,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote#imgpath|image",{"_index":941,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote#name|name",{"_index":939,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["basicnote#number|number",{"_index":1030,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote's",{"_index":1529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basicnote.getimgpath(note",{"_index":1084,"title":{},"body":{"components/TempoComponent.html":{}}}],["basicnote.getimgpath(this.bottom",{"_index":942,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getimgpath(this.note",{"_index":1032,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.getname(note",{"_index":1085,"title":{},"body":{"components/TempoComponent.html":{}}}],["basicnote.getname(this.bottom",{"_index":940,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getname(this.note",{"_index":1033,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.getnumber(this.bottom",{"_index":938,"title":{},"body":{"classes/Signature.html":{}}}],["basicnote.getnumber(this.note",{"_index":1031,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote.quarter_note",{"_index":901,"title":{},"body":{"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{}}}],["basicnote.values",{"_index":1083,"title":{},"body":{"components/TempoComponent.html":{}}}],["basicnote|basicnote",{"_index":1022,"title":{},"body":{"classes/Tempo.html":{}}}],["basicnote|note",{"_index":937,"title":{},"body":{"classes/Signature.html":{},"components/TempoComponent.html":{}}}],["basicnote|null",{"_index":1023,"title":{},"body":{"classes/Tempo.html":{}}}],["bassoon",{"_index":1429,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beat",{"_index":537,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["beats",{"_index":529,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["before",{"_index":380,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{}}}],["beginning",{"_index":978,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["behavior",{"_index":869,"title":{},"body":{"components/RhythmComponent.html":{}}}],["behaviour",{"_index":1196,"title":{},"body":{"components/TrackComponent.html":{}}}],["being",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/MetronomeComponent.html":{},"components/TempoComponent.html":{}}}],["between",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"classes/SoundPlayer.html":{},"components/TrackComponent.html":{}}}],["binary",{"_index":1531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["binarynote",{"_index":63,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/enumerations.html":{}}}],["binarynote._4n",{"_index":727,"title":{},"body":{"classes/Note.html":{}}}],["binded",{"_index":637,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["bird_tweet",{"_index":1482,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["block",{"_index":366,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["blown_bottle",{"_index":1435,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bool",{"_index":785,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["bootstrap",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bord",{"_index":398,"title":{},"body":{"components/DashboardComponent.html":{}}}],["border",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["border_width",{"_index":1215,"title":{},"body":{"components/TrackComponent.html":{}}}],["both",{"_index":900,"title":{},"body":{"classes/Signature.html":{}}}],["bottom",{"_index":477,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["bottom's",{"_index":907,"title":{},"body":{"classes/Signature.html":{}}}],["box",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["bpm",{"_index":528,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["brass_section",{"_index":1420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["breath_noise",{"_index":1480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bright_acoustic_piano",{"_index":1360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["browse",{"_index":1575,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1553,"title":{},"body":{"index.html":{}}}],["button",{"_index":467,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["button:first",{"_index":758,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["button:nth",{"_index":761,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["button_size",{"_index":861,"title":{},"body":{"components/RhythmComponent.html":{}}}],["calc(100",{"_index":470,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["calc(100vh",{"_index":871,"title":{},"body":{"components/RhythmComponent.html":{}}}],["called",{"_index":643,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["capital",{"_index":1524,"title":{},"body":{"miscellaneous/functions.html":{}}}],["celesta",{"_index":1367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cello",{"_index":1401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cell|chtm|cldc|cmd",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["center",{"_index":363,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["certain",{"_index":974,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["ce|phone)|xda|xiino/i.test(navigator.useragent",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":448,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["changed",{"_index":1048,"title":{},"body":{"components/TempoComponent.html":{}}}],["changes",{"_index":512,"title":{},"body":{"components/MeasureComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["changesoundplan",{"_index":1161,"title":{},"body":{"components/TrackComponent.html":{}}}],["check",{"_index":917,"title":{},"body":{"classes/Signature.html":{},"index.html":{}}}],["child",{"_index":759,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["child(1",{"_index":875,"title":{},"body":{"components/RhythmComponent.html":{}}}],["child(1)>img",{"_index":763,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["child(2",{"_index":762,"title":{},"body":{"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{}}}],["child::after",{"_index":482,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["child::before",{"_index":480,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["choir_aahs",{"_index":1411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["chose",{"_index":1051,"title":{},"body":{"components/TempoComponent.html":{}}}],["church_organ",{"_index":1378,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clarinet",{"_index":1430,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["class",{"_index":0,"title":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"classes/Track.html":{}},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"classes/Track.html":{},"overview.html":{}}}],["classes/metronome",{"_index":562,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["classes/note",{"_index":828,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["classes/signature",{"_index":660,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["classes/tempo",{"_index":561,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{}}}],["classes/track",{"_index":827,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["clavinet",{"_index":1366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clearnotes",{"_index":1103,"title":{},"body":{"classes/Track.html":{}}}],["cli",{"_index":1536,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1235,"title":{},"body":{"components/TrackComponent.html":{}}}],["clock_1",{"_index":1490,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["clock_2",{"_index":1493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co(mp|nd)|craw|da(it|ll|ng)|dbte|dc",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["code",{"_index":1549,"title":{},"body":{"index.html":{}}}],["color",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["column",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["command",{"_index":1572,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":899,"title":{},"body":{"classes/Signature.html":{}}}],["complete",{"_index":1517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["compoenent",{"_index":345,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["compoenent's",{"_index":796,"title":{},"body":{"components/RhythmComponent.html":{}}}],["componenet",{"_index":650,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["componenet's",{"_index":792,"title":{},"body":{"components/RhythmComponent.html":{}}}],["component",{"_index":127,"title":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":663,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["component_template",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["components",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"overview.html":{}}}],["console.log(\"stop",{"_index":965,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["console.log(\"tried",{"_index":997,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["const",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["constructor(imgsnames",{"_index":98,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["constructor(instrument",{"_index":1114,"title":{},"body":{"classes/Track.html":{}}}],["constructor(note",{"_index":1009,"title":{},"body":{"classes/Tempo.html":{}}}],["constructor(number",{"_index":24,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["constructor(soundname",{"_index":989,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["constructor(timecode",{"_index":702,"title":{},"body":{"classes/Note.html":{}}}],["constructor(top",{"_index":896,"title":{},"body":{"classes/Signature.html":{}}}],["contain",{"_index":592,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["content",{"_index":362,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["context",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contrabass",{"_index":1402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controls",{"_index":587,"title":{},"body":{"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{}}}],["controls_height",{"_index":860,"title":{},"body":{"components/RhythmComponent.html":{}}}],["convertimgnametopath",{"_index":733,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["convertimgnametopath(imgname",{"_index":743,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["correspond",{"_index":665,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["corresponds",{"_index":1117,"title":{},"body":{"classes/Track.html":{}}}],["coverage",{"_index":1240,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["created",{"_index":1314,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createtrack",{"_index":334,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["createtrackcomponent",{"_index":240,"title":{"components/CreateTrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["creating",{"_index":349,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["créer",{"_index":452,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["current",{"_index":1070,"title":{},"body":{"components/TempoComponent.html":{}}}],["cursor",{"_index":367,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["c|ht(c",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["d",{"_index":1321,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["dark",{"_index":486,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["dashboard",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{}}}],["dashboard'},{'name",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dashboard.component.html",{"_index":393,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.sass",{"_index":392,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard/dashboard.component",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboardcomponent",{"_index":243,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":816,"title":{},"body":{"components/RhythmComponent.html":{}}}],["de",{"_index":397,"title":{},"body":{"components/DashboardComponent.html":{}}}],["debug",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":565,"title":{},"body":{"components/MetronomeComponent.html":{},"components/SignatureComponent.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["deletenotesbetweentimecodes",{"_index":1104,"title":{},"body":{"classes/Track.html":{}}}],["deletenotesbetweentimecodes(from",{"_index":1130,"title":{},"body":{"classes/Track.html":{}}}],["denominator",{"_index":1526,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dependencies",{"_index":274,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depuis",{"_index":408,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"miscellaneous/functions.html":{}}}],["details",{"_index":1012,"title":{},"body":{"classes/Tempo.html":{}}}],["dev",{"_index":1543,"title":{},"body":{"index.html":{}}}],["development",{"_index":1538,"title":{},"body":{"index.html":{}}}],["different",{"_index":74,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["direction",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{}}}],["directive",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["directives",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1552,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1068,"title":{},"body":{"components/TempoComponent.html":{}}}],["directory",{"_index":1557,"title":{},"body":{"index.html":{}}}],["dirpath",{"_index":68,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["display",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dist",{"_index":1556,"title":{},"body":{"index.html":{}}}],["distortion_guitar",{"_index":1389,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":364,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["div:nth",{"_index":874,"title":{},"body":{"components/RhythmComponent.html":{}}}],["documentation",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":1521,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dom",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["dotted",{"_index":1322,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drawbar_organ",{"_index":1375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["drop",{"_index":1092,"title":{},"body":{"components/TempoComponent.html":{}}}],["du",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["due",{"_index":1317,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dulcimer",{"_index":1374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplet",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duration",{"_index":694,"title":{},"body":{"classes/Note.html":{},"components/RhythmComponent.html":{},"miscellaneous/functions.html":{}}}],["dynamic",{"_index":1283,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["défaut",{"_index":1211,"title":{},"body":{"components/TrackComponent.html":{}}}],["e2e",{"_index":1566,"title":{},"body":{"index.html":{}}}],["each",{"_index":644,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/Signature.html":{}}}],["ease",{"_index":616,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["eight",{"_index":1329,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_bass_finger",{"_index":1392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_bass_pick",{"_index":1393,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_grand_piano",{"_index":1361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_clean",{"_index":1386,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_jazz",{"_index":1385,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_guitar_muted",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_piano_1",{"_index":1363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["electric_piano_2",{"_index":1364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["elementref",{"_index":1190,"title":{},"body":{"components/TrackComponent.html":{}}}],["emit",{"_index":339,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["empty",{"_index":658,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["encapsulation",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":883,"title":{},"body":{"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"index.html":{}}}],["endtap",{"_index":777,"title":{},"body":{"components/RhythmComponent.html":{}}}],["endtap(evt",{"_index":786,"title":{},"body":{"components/RhythmComponent.html":{}}}],["endtapvar",{"_index":768,"title":{},"body":{"components/RhythmComponent.html":{}}}],["english",{"_index":1522,"title":{},"body":{"miscellaneous/functions.html":{}}}],["english_horn",{"_index":1428,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enum",{"_index":1298,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1291,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":62,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["enums/basic",{"_index":564,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["enums/binary",{"_index":714,"title":{},"body":{"classes/Note.html":{}}}],["enums/ternary",{"_index":715,"title":{},"body":{"classes/Note.html":{}}}],["environment",{"_index":47,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"classes/SoundPlayer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.pathsfromapp.rythmsimg",{"_index":70,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["environments/environment",{"_index":48,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"classes/SoundPlayer.html":{}}}],["evenly",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{}}}],["event",{"_index":787,"title":{},"body":{"components/RhythmComponent.html":{}}}],["eventemitter",{"_index":336,"title":{},"body":{"components/CreateTrackComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["events",{"_index":348,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["evt",{"_index":789,"title":{},"body":{"components/RhythmComponent.html":{}}}],["ex",{"_index":1337,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["example",{"_index":92,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{}}}],["exceeds",{"_index":999,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["execute",{"_index":1563,"title":{},"body":{"index.html":{}}}],["export",{"_index":49,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["exportmenucomponent",{"_index":245,"title":{"components/ExportMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["exports",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extend",{"_index":1237,"title":{},"body":{"components/TrackComponent.html":{}}}],["extension",{"_index":71,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/functions.html":{}}}],["extention",{"_index":88,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["exterior",{"_index":1217,"title":{},"body":{"components/TrackComponent.html":{}}}],["fact",{"_index":1318,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":547,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["fiddle",{"_index":1469,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["files",{"_index":1548,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1091,"title":{},"body":{"components/TempoComponent.html":{}}}],["find",{"_index":795,"title":{},"body":{"components/RhythmComponent.html":{}}}],["finished",{"_index":918,"title":{},"body":{"classes/Signature.html":{}}}],["first",{"_index":479,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["fixed",{"_index":493,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flag",{"_index":1559,"title":{},"body":{"index.html":{}}}],["flex",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["float",{"_index":981,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["flute",{"_index":1432,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["followed",{"_index":1332,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["following",{"_index":718,"title":{},"body":{"classes/Note.html":{},"miscellaneous/enumerations.html":{}}}],["fond",{"_index":404,"title":{},"body":{"components/DashboardComponent.html":{}}}],["font",{"_index":369,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["font_size",{"_index":355,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["for(const",{"_index":672,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["for(let",{"_index":99,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["form",{"_index":85,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/functions.html":{}}}],["formsmodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["french_horn",{"_index":1419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fretless_bass",{"_index":1394,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["full",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":807,"title":{},"body":{"components/RhythmComponent.html":{},"classes/SoundPlayer.html":{},"coverage.html":{}}}],["functions",{"_index":1516,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1568,"title":{},"body":{"index.html":{}}}],["fx_1_rain",{"_index":1455,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_2_soundtrack",{"_index":1456,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_3_crystal",{"_index":1457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_4_atmosphere",{"_index":1458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_5_brightness",{"_index":1459,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_6_goblins",{"_index":1460,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_7_echoes",{"_index":1461,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fx_8_scifi",{"_index":1462,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generals",{"_index":873,"title":{},"body":{"components/RhythmComponent.html":{}}}],["generate",{"_index":1551,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1534,"title":{},"body":{"index.html":{}}}],["getaddonnumber",{"_index":119,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getaddonusehook",{"_index":122,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getbasicnotelist",{"_index":1040,"title":{},"body":{"components/TempoComponent.html":{}}}],["getbottom",{"_index":887,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomimgpath",{"_index":888,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomname",{"_index":889,"title":{},"body":{"classes/Signature.html":{}}}],["getbottomnumber",{"_index":890,"title":{},"body":{"classes/Signature.html":{}}}],["getbpm",{"_index":1003,"title":{},"body":{"classes/Tempo.html":{}}}],["getduration",{"_index":697,"title":{},"body":{"classes/Note.html":{}}}],["getid",{"_index":1105,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["getimgpath",{"_index":1041,"title":{},"body":{"components/TempoComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getimgpath(note",{"_index":1052,"title":{},"body":{"components/TempoComponent.html":{},"miscellaneous/functions.html":{}}}],["getimgpathat",{"_index":734,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgpathat(i",{"_index":747,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgspaths",{"_index":735,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["getimgspathslength",{"_index":103,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["getinstrument",{"_index":1106,"title":{},"body":{"classes/Track.html":{}}}],["getjson",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getjson(note",{"_index":1519,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getmetronomemovementlengthinsec",{"_index":523,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["getname",{"_index":1042,"title":{},"body":{"components/TempoComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getname(note",{"_index":1055,"title":{},"body":{"components/TempoComponent.html":{},"miscellaneous/functions.html":{}}}],["getnote",{"_index":1004,"title":{},"body":{"classes/Tempo.html":{}}}],["getnoteatindex",{"_index":1107,"title":{},"body":{"classes/Track.html":{}}}],["getnoteatindex(i",{"_index":1134,"title":{},"body":{"classes/Track.html":{}}}],["getnoteattimecode",{"_index":1108,"title":{},"body":{"classes/Track.html":{}}}],["getnoteattimecode(timecode",{"_index":1136,"title":{},"body":{"classes/Track.html":{}}}],["getnoteimgpath",{"_index":1005,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotename",{"_index":1006,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotenumber",{"_index":1007,"title":{},"body":{"classes/Tempo.html":{}}}],["getnotes",{"_index":1109,"title":{},"body":{"classes/Track.html":{}}}],["getnumber",{"_index":19,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getnumber(note",{"_index":1525,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getplan",{"_index":1110,"title":{},"body":{"classes/Track.html":{}}}],["getrepresentation",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getrepresentation(note",{"_index":1530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettimecode",{"_index":698,"title":{},"body":{"classes/Note.html":{}}}],["getting",{"_index":1532,"title":{"index.html":{}},"body":{}}],["gettop",{"_index":891,"title":{},"body":{"classes/Signature.html":{}}}],["gettrackindex",{"_index":778,"title":{},"body":{"components/RhythmComponent.html":{}}}],["gettrackindex(id",{"_index":790,"title":{},"body":{"components/RhythmComponent.html":{}}}],["gettrackindex(track.getid",{"_index":797,"title":{},"body":{"components/RhythmComponent.html":{}}}],["getusehook",{"_index":20,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["given",{"_index":799,"title":{},"body":{"components/RhythmComponent.html":{}}}],["glockenspiel",{"_index":1368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go",{"_index":1570,"title":{},"body":{"index.html":{}}}],["gradient($property",{"_index":1216,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(background",{"_index":1232,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(border",{"_index":1225,"title":{},"body":{"components/TrackComponent.html":{}}}],["gradient(to",{"_index":1220,"title":{},"body":{"components/TrackComponent.html":{}}}],["graph",{"_index":1576,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":863,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["guitar_fret_noise",{"_index":1479,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guitar_harmonics",{"_index":1390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gunshot",{"_index":1486,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["g|\\/(k|l|u)|50|54",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["g|qa",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["h2",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{}}}],["h3",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{}}}],["half",{"_index":1306,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["half_note",{"_index":1305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["harmonica",{"_index":1381,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["harpsichord",{"_index":1365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["height",{"_index":382,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["height_note",{"_index":1309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["helicopter",{"_index":1484,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["help",{"_index":1569,"title":{},"body":{"index.html":{}}}],["hi(pt|ta)|hp",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["hidden",{"_index":867,"title":{},"body":{"components/RhythmComponent.html":{}}}],["home",{"_index":394,"title":{},"body":{"components/DashboardComponent.html":{}}}],["honkytonk_piano",{"_index":1362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hook",{"_index":37,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["host",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["html",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["http://localhost:4200",{"_index":1545,"title":{},"body":{"index.html":{}}}],["i.test(navigator.useragent.substr(0,4",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["icon_width",{"_index":459,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["id",{"_index":794,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["identifier",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1123,"title":{},"body":{"classes/Track.html":{}}}],["if(!this.iscompatible(top",{"_index":928,"title":{},"body":{"classes/Signature.html":{}}}],["if(!this.ismodifyingbpm",{"_index":1078,"title":{},"body":{"components/TempoComponent.html":{}}}],["if(!this.ismodifyingnote",{"_index":1079,"title":{},"body":{"components/TempoComponent.html":{}}}],["if(!this.recording",{"_index":848,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(!this.sound.paused",{"_index":994,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["if(addon",{"_index":115,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(bool",{"_index":829,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(bpm",{"_index":1029,"title":{},"body":{"classes/Tempo.html":{}}}],["if(changes.hasownproperty(propname",{"_index":674,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(changes[\"isplaying\"].currentvalue",{"_index":676,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(changes[\"isplaying\"].previousvalue",{"_index":678,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(id",{"_index":853,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(index",{"_index":105,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(plan",{"_index":1153,"title":{},"body":{"classes/Track.html":{}}}],["if(propname",{"_index":675,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(this.addon",{"_index":120,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["if(this.isbinary",{"_index":726,"title":{},"body":{"classes/Note.html":{}}}],["if(this.iscompatible(this.top",{"_index":934,"title":{},"body":{"classes/Signature.html":{}}}],["if(this.iscompatible(top",{"_index":932,"title":{},"body":{"classes/Signature.html":{}}}],["if(this.ismodifyingnote",{"_index":1075,"title":{},"body":{"components/TempoComponent.html":{}}}],["if(this.isrunning",{"_index":569,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["if(this.isselected",{"_index":1206,"title":{},"body":{"components/TrackComponent.html":{}}}],["if(this.mode",{"_index":682,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["if(this.selectedtrackid",{"_index":831,"title":{},"body":{"components/RhythmComponent.html":{}}}],["if(this.track.getplan",{"_index":1197,"title":{},"body":{"components/TrackComponent.html":{}}}],["if(top",{"_index":935,"title":{},"body":{"classes/Signature.html":{}}}],["if(volume",{"_index":996,"title":{},"body":{"classes/SoundPlayer.html":{},"components/TrackComponent.html":{}}}],["ignore",{"_index":66,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{}}}],["image",{"_index":384,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["images",{"_index":84,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["img",{"_index":76,"title":{},"body":{"classes/AddOn.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["img+span",{"_index":1087,"title":{},"body":{"components/TempoComponent.html":{}}}],["img:hover",{"_index":1090,"title":{},"body":{"components/TempoComponent.html":{}}}],["img_size",{"_index":357,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["imgname",{"_index":742,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["imgsnames",{"_index":82,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["imgspaths",{"_index":78,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["implements",{"_index":330,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["import",{"_index":46,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["imports",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":602,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["included",{"_index":984,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["incorrect",{"_index":1148,"title":{},"body":{"classes/Track.html":{}}}],["increment",{"_index":1122,"title":{},"body":{"classes/Track.html":{}}}],["incremented",{"_index":1118,"title":{},"body":{"classes/Track.html":{}}}],["index",{"_index":13,"title":{"index.html":{}},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index:number",{"_index":110,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["infinite",{"_index":617,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["inline",{"_index":365,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["input",{"_index":450,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["input(\"isplaying",{"_index":668,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["input(\"signature",{"_index":667,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["input(\"tempo",{"_index":666,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["inputs",{"_index":442,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TrackComponent.html":{}}}],["input|input",{"_index":671,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["insert",{"_index":509,"title":{},"body":{"components/MeasureComponent.html":{},"components/NoteComponent.html":{}}}],["inside",{"_index":510,"title":{},"body":{"components/MeasureComponent.html":{},"components/NoteComponent.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["instr_input_height",{"_index":1214,"title":{},"body":{"components/TrackComponent.html":{}}}],["instrument",{"_index":1100,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["instrument_width",{"_index":1212,"title":{},"body":{"components/TrackComponent.html":{}}}],["integration",{"_index":723,"title":{},"body":{"classes/Note.html":{}}}],["interior",{"_index":1218,"title":{},"body":{"components/TrackComponent.html":{}}}],["intrument",{"_index":1294,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["intrumentinput",{"_index":1192,"title":{},"body":{"components/TrackComponent.html":{}}}],["isbinary",{"_index":695,"title":{},"body":{"classes/Note.html":{}}}],["iscompatible",{"_index":892,"title":{},"body":{"classes/Signature.html":{}}}],["iscompatible(top",{"_index":915,"title":{},"body":{"classes/Signature.html":{}}}],["ismobile",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["ismodifyingbpm",{"_index":1037,"title":{},"body":{"components/TempoComponent.html":{}}}],["ismodifyingnote",{"_index":1038,"title":{},"body":{"components/TempoComponent.html":{}}}],["isplaying",{"_index":629,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["isrunning",{"_index":520,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["isselected",{"_index":852,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["issolo",{"_index":1167,"title":{},"body":{"components/TrackComponent.html":{}}}],["it's",{"_index":634,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"miscellaneous/functions.html":{}}}],["items",{"_index":469,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["i|ip)|hs",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["json",{"_index":1520,"title":{},"body":{"miscellaneous/functions.html":{}}}],["justify",{"_index":361,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["kalimba",{"_index":1467,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1565,"title":{},"body":{"index.html":{}}}],["keyframes",{"_index":598,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["kind",{"_index":948,"title":{},"body":{"components/SignatureComponent.html":{}}}],["klon|kpt",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["know",{"_index":633,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["knowing",{"_index":793,"title":{},"body":{"components/RhythmComponent.html":{}}}],["koto",{"_index":1466,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kwc",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["kyo(c|k)|le(no|xi)|lg",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["last",{"_index":481,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/RhythmComponent.html":{}}}],["launched",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["lead_1_square",{"_index":1439,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_2_sawtooth",{"_index":1440,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_3_calliope",{"_index":1441,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_4_chiff",{"_index":1442,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_5_charang",{"_index":1443,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_6_voice",{"_index":1444,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_7_fifths",{"_index":1445,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lead_8_bass_and_lead",{"_index":1446,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["left",{"_index":377,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["legend",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"overview.html":{}}}],["librairy",{"_index":722,"title":{},"body":{"classes/Note.html":{},"components/TrackComponent.html":{}}}],["line",{"_index":719,"title":{},"body":{"classes/Note.html":{}}}],["linear",{"_index":609,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["link",{"_index":52,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{}}}],["linked",{"_index":1335,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["list",{"_index":1312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["literal",{"_index":1582,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["m(ob|in)i|palm",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["m)|sk",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["m3|m5)|tx",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["maemo|midp|mmp|netfront|opera",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["mainmenucomponent",{"_index":247,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":359,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["marimba",{"_index":1371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":125,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":491,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["measure",{"_index":505,"title":{},"body":{"components/MeasureComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{}}}],["measure'},{'name",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["measure.component.html",{"_index":507,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure.component.sass",{"_index":506,"title":{},"body":{"components/MeasureComponent.html":{}}}],["measure/measure.component",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["measurecomponent",{"_index":248,"title":{"components/MeasureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["measures",{"_index":508,"title":{},"body":{"components/MeasureComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["media",{"_index":490,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["melodic_tom",{"_index":1476,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["menu",{"_index":435,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["menu.component",{"_index":298,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.html",{"_index":437,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu.component.sass",{"_index":436,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{}}}],["menu.component.ts",{"_index":434,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:18",{"_index":444,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":447,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/export",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"components/ExportMenuComponent.html":{},"coverage.html":{}}}],["menu/main",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu/save",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["methods",{"_index":18,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["metronome",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["metronome#sound|metronome's",{"_index":566,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["metronome's",{"_index":556,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["metronome'},{'name",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["metronome(this.tempo.getbpm",{"_index":568,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["metronome.component.html",{"_index":519,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome.component.sass",{"_index":518,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome.run>img",{"_index":612,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome.sound",{"_index":552,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["metronome.sound.toc",{"_index":553,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["metronome/metronome.component",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["metronome>img",{"_index":593,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome_height",{"_index":582,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronome_width",{"_index":584,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronomecomponent",{"_index":250,"title":{"components/MetronomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metronomecomponent#tempo|tempo",{"_index":573,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["metronomesoundcomponent",{"_index":252,"title":{"components/MetronomeSoundComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["metronomesoundcomponent#mode|mode",{"_index":680,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["middle",{"_index":483,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["min",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["minute",{"_index":539,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["miscellaneous",{"_index":1290,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mixin",{"_index":597,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["mode",{"_index":623,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"miscellaneous/variables.html":{}}}],["modifiablebpm",{"_index":1039,"title":{},"body":{"components/TempoComponent.html":{}}}],["modifiableinstrument",{"_index":1158,"title":{},"body":{"components/TrackComponent.html":{}}}],["modification",{"_index":1062,"title":{},"body":{"components/TempoComponent.html":{}}}],["modified",{"_index":1060,"title":{},"body":{"components/TempoComponent.html":{}}}],["modify",{"_index":1061,"title":{},"body":{"components/TempoComponent.html":{}}}],["modifyinstrument",{"_index":1159,"title":{},"body":{"components/TrackComponent.html":{}}}],["modigying",{"_index":1065,"title":{},"body":{"components/TempoComponent.html":{}}}],["module",{"_index":271,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":273,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":557,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Tempo.html":{},"index.html":{}}}],["moving",{"_index":515,"title":{},"body":{"components/MeasureComponent.html":{}}}],["mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["mo|to(pl|sh)|ts(70|m",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["music_box",{"_index":1369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["musical",{"_index":405,"title":{},"body":{"components/DashboardComponent.html":{},"components/TrackComponent.html":{}}}],["musique",{"_index":454,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["mute",{"_index":1126,"title":{},"body":{"classes/Track.html":{},"components/TrackComponent.html":{}}}],["muted_trumpet",{"_index":1418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwbp|mywa|n10[0",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["m|p|t)|hei",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["m|r",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["métronome",{"_index":455,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["n",{"_index":1333,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":83,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["nav",{"_index":466,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["navigate",{"_index":1544,"title":{},"body":{"index.html":{}}}],["nbofsolotracks",{"_index":769,"title":{},"body":{"components/RhythmComponent.html":{}}}],["nbtick",{"_index":684,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["nc|nw)|wmlb|wonu|x700|yas",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["new",{"_index":79,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"index.html":{}}}],["nextid",{"_index":1101,"title":{},"body":{"classes/Track.html":{}}}],["ng",{"_index":1541,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":624,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ngonchanges(changes",{"_index":640,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ngoninit",{"_index":350,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["none",{"_index":468,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["normal",{"_index":1125,"title":{},"body":{"classes/Track.html":{}}}],["not(.active",{"_index":495,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["not(.active)+nav",{"_index":494,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["notation",{"_index":1315,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":86,"title":{"classes/Note.html":{}},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["note's",{"_index":11,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["note'},{'name",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["note(timecode",{"_index":846,"title":{},"body":{"components/RhythmComponent.html":{}}}],["note.component.html",{"_index":731,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.sass",{"_index":730,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.svg",{"_index":1304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note.ts",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["note/note.component",{"_index":311,"title":{},"body":{"modules/AppModule.html":{}}}],["notecomponent",{"_index":255,"title":{"components/NoteComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["noterepresentation",{"_index":65,"title":{"classes/NoteRepresentation.html":{}},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["noterepresentation([\"4n",{"_index":94,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["noterepresentation([\"8n",{"_index":1187,"title":{},"body":{"components/TrackComponent.html":{}}}],["notes",{"_index":60,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"miscellaneous/enumerations.html":{}}}],["notesimg",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notify",{"_index":1047,"title":{},"body":{"components/TempoComponent.html":{}}}],["nouveau",{"_index":399,"title":{},"body":{"components/DashboardComponent.html":{}}}],["null",{"_index":81,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":16,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["number|null",{"_index":1025,"title":{},"body":{"classes/Tempo.html":{}}}],["n|u)|c55\\/|capi|ccwa|cdm",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["object",{"_index":898,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{},"miscellaneous/variables.html":{}}}],["oboe",{"_index":1427,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ocarina",{"_index":1438,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["onchanges",{"_index":620,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["ondex",{"_index":798,"title":{},"body":{"components/RhythmComponent.html":{}}}],["one",{"_index":511,"title":{},"body":{"components/MeasureComponent.html":{}}}],["onended",{"_index":961,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["oninit",{"_index":331,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["oo|p",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["opacity",{"_index":499,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["orchestra_hit",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["orchestral_harp",{"_index":1405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["order",{"_index":77,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["origin",{"_index":596,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"components/MetronomeComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":344,"title":{},"body":{"components/CreateTrackComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["outputs",{"_index":335,"title":{},"body":{"components/CreateTrackComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["ouvrir",{"_index":406,"title":{},"body":{"components/DashboardComponent.html":{}}}],["overdriven_guitar",{"_index":1388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overflow",{"_index":864,"title":{},"body":{"components/RhythmComponent.html":{}}}],["overview",{"_index":1571,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["o|v)|zz)|mt(50|p1|v",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["p",{"_index":373,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["package",{"_index":1278,"title":{"dependencies.html":{}},"body":{}}],["pad_1_new_age",{"_index":1447,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_2_warm",{"_index":1448,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_3_polysynth",{"_index":1449,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_4_choir",{"_index":1450,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_5_bowed",{"_index":1451,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_6_metallic",{"_index":1452,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_7_halo",{"_index":1453,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pad_8_sweep",{"_index":1454,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["padding",{"_index":376,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["page",{"_index":395,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["pan_flute",{"_index":1434,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["param",{"_index":51,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{}}}],["parameter",{"_index":800,"title":{},"body":{"components/RhythmComponent.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddOn.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":341,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TempoComponent.html":{}}}],["parent's",{"_index":636,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["part",{"_index":1204,"title":{},"body":{"components/TrackComponent.html":{}}}],["parts",{"_index":75,"title":{},"body":{"classes/AddOn.html":{},"components/ExportMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/SaveMenuComponent.html":{}}}],["pass",{"_index":664,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["path",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"miscellaneous/functions.html":{}}}],["pathmatch",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["paths",{"_index":73,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["pathsfromapp",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pause",{"_index":962,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["per",{"_index":538,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{}}}],["percussive_organ",{"_index":1376,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phone",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["piccolo",{"_index":1431,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["piste",{"_index":354,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["pizzicato_strings",{"_index":1404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["plan",{"_index":809,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["play",{"_index":550,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["playbar",{"_index":755,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar'},{'name",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["playbar.component.html",{"_index":757,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar.component.sass",{"_index":756,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["playbar/playbar.component",{"_index":307,"title":{},"body":{"modules/AppModule.html":{}}}],["playbarcomponent",{"_index":257,"title":{"components/PlaybarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["player.ts",{"_index":960,"title":{},"body":{"classes/SoundPlayer.html":{},"coverage.html":{}}}],["player.ts:11",{"_index":986,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:22",{"_index":967,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:32",{"_index":971,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:41",{"_index":973,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:51",{"_index":969,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:62",{"_index":982,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["player.ts:9",{"_index":968,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["playfromtime",{"_index":963,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["playfromtime(starttime",{"_index":972,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["playing",{"_index":632,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["playmetronome",{"_index":626,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["plays",{"_index":987,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["point",{"_index":975,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["pointer",{"_index":368,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["polyrythm",{"_index":721,"title":{},"body":{"classes/Note.html":{}}}],["polyrythmie",{"_index":453,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["polyrythmique",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["polyrytmie",{"_index":401,"title":{},"body":{"components/DashboardComponent.html":{}}}],["position",{"_index":374,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["possess",{"_index":90,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["possible",{"_index":1528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["prefix",{"_index":600,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["primal",{"_index":1300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":15,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"classes/Track.html":{}}}],["prod",{"_index":1558,"title":{},"body":{"index.html":{}}}],["production",{"_index":1560,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":951,"title":{},"body":{"components/SignatureComponent.html":{},"index.html":{}}}],["projet",{"_index":400,"title":{},"body":{"components/DashboardComponent.html":{}}}],["promise",{"_index":651,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["properties",{"_index":14,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["property",{"_index":1219,"title":{},"body":{"components/TrackComponent.html":{}}}],["property($name",{"_index":601,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["property(transform",{"_index":604,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["propname",{"_index":673,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["protractor",{"_index":1567,"title":{},"body":{"index.html":{}}}],["providers",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["put",{"_index":849,"title":{},"body":{"components/RhythmComponent.html":{}}}],["qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["quarter",{"_index":1308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarter_note",{"_index":1307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["quarternoterep",{"_index":93,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["quarternotetripletrep",{"_index":95,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["r",{"_index":1319,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["radius",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["ratio",{"_index":540,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["receive",{"_index":347,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["recorder",{"_index":1433,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["recording",{"_index":770,"title":{},"body":{"components/RhythmComponent.html":{}}}],["recording>article",{"_index":1229,"title":{},"body":{"components/TrackComponent.html":{}}}],["redirectto",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reed_organ",{"_index":1379,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reference",{"_index":1573,"title":{},"body":{"index.html":{}}}],["references",{"_index":58,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["relative",{"_index":375,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["reload",{"_index":1547,"title":{},"body":{"index.html":{}}}],["removefromimgspaths",{"_index":736,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["removefromimgspaths(imgname",{"_index":109,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["removefromimgspathsat",{"_index":737,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["removefromimgspathsat(index",{"_index":113,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["repeat",{"_index":386,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/TrackComponent.html":{}}}],["repertory",{"_index":1518,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace",{"_index":720,"title":{},"body":{"classes/Note.html":{}}}],["represent",{"_index":886,"title":{},"body":{"classes/Signature.html":{},"classes/Tempo.html":{}}}],["representation",{"_index":12,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["representation.ts",{"_index":7,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["representation.ts:100",{"_index":749,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:103",{"_index":748,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:108",{"_index":750,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:111",{"_index":741,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:118",{"_index":751,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:124",{"_index":752,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:128",{"_index":753,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:13",{"_index":33,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:135",{"_index":745,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:141",{"_index":746,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:17",{"_index":27,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:32",{"_index":38,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:38",{"_index":42,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:45",{"_index":40,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:51",{"_index":45,"title":{},"body":{"classes/AddOn.html":{}}}],["representation.ts:74",{"_index":740,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:78",{"_index":739,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["representation.ts:96",{"_index":744,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["reput",{"_index":856,"title":{},"body":{"components/RhythmComponent.html":{}}}],["require",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["rest",{"_index":1320,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["result",{"_index":124,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":126,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrievenotetype",{"_index":699,"title":{},"body":{"classes/Note.html":{}}}],["return",{"_index":57,"title":{},"body":{"classes/AddOn.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["returns",{"_index":39,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["reverse_cymbal",{"_index":1478,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rgba(255",{"_index":1095,"title":{},"body":{"components/TempoComponent.html":{}}}],["rhythm",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["rhythm'},{'name",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["rhythm.component.html",{"_index":767,"title":{},"body":{"components/RhythmComponent.html":{}}}],["rhythm.component.sass",{"_index":766,"title":{},"body":{"components/RhythmComponent.html":{}}}],["rhythm/rhythm.component",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rhythmcomponent",{"_index":259,"title":{"components/RhythmComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":464,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["rock_organ",{"_index":1377,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["root",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["root'},{'name",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["rotate",{"_index":605,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotate(0deg",{"_index":608,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotate(45deg",{"_index":610,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rotatey(180deg",{"_index":764,"title":{},"body":{"components/PlaybarComponent.html":{}}}],["rotating",{"_index":614,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["routermodule",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":316,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":1540,"title":{},"body":{"index.html":{}}}],["running",{"_index":549,"title":{},"body":{"components/MetronomeComponent.html":{},"index.html":{}}}],["runningmetronome",{"_index":521,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["runningmetronome.getsoundname",{"_index":581,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["rxjs",{"_index":1284,"title":{},"body":{"dependencies.html":{}}}],["rythmsimg",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["s",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["sass/vars",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["save",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["savemenucomponent",{"_index":261,"title":{"components/SaveMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scaffolding",{"_index":1550,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":868,"title":{},"body":{"components/RhythmComponent.html":{}}}],["sdk\\/|se(c",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["seashore",{"_index":1481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sec",{"_index":534,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["seconds",{"_index":840,"title":{},"body":{"components/RhythmComponent.html":{},"classes/SoundPlayer.html":{}}}],["section",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{},"components/RhythmComponent.html":{}}}],["section>div",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{}}}],["see",{"_index":555,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Tempo.html":{}}}],["select",{"_index":662,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["selected",{"_index":850,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["selected>article",{"_index":1224,"title":{},"body":{"components/TrackComponent.html":{}}}],["selectedtrack",{"_index":1168,"title":{},"body":{"components/TrackComponent.html":{}}}],["selectedtrackid",{"_index":771,"title":{},"body":{"components/RhythmComponent.html":{}}}],["selectedtrackindex",{"_index":772,"title":{},"body":{"components/RhythmComponent.html":{}}}],["selectnote",{"_index":1089,"title":{},"body":{"components/TempoComponent.html":{}}}],["selector",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["selecttrack",{"_index":1162,"title":{},"body":{"components/TrackComponent.html":{}}}],["send",{"_index":343,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["serve",{"_index":1542,"title":{},"body":{"index.html":{}}}],["server",{"_index":1539,"title":{},"body":{"index.html":{}}}],["set",{"_index":449,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{}}}],["setactive",{"_index":441,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["setactive(active",{"_index":446,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["setaddon",{"_index":738,"title":{},"body":{"classes/NoteRepresentation.html":{}}}],["setaddon(addon",{"_index":114,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setbottom",{"_index":893,"title":{},"body":{"classes/Signature.html":{}}}],["setbottom(bottom",{"_index":919,"title":{},"body":{"classes/Signature.html":{}}}],["setbpm",{"_index":524,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["setbpm(bpm",{"_index":535,"title":{},"body":{"components/MetronomeComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["setduration",{"_index":700,"title":{},"body":{"classes/Note.html":{}}}],["setduration(duration",{"_index":710,"title":{},"body":{"classes/Note.html":{}}}],["setinstrument",{"_index":1111,"title":{},"body":{"classes/Track.html":{}}}],["setinstrument(instrument",{"_index":1140,"title":{},"body":{"classes/Track.html":{}}}],["setnote",{"_index":1008,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["setnote(note",{"_index":1020,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["setnotes",{"_index":1112,"title":{},"body":{"classes/Track.html":{}}}],["setnotes(notes",{"_index":1142,"title":{},"body":{"classes/Track.html":{}}}],["setnumber",{"_index":21,"title":{},"body":{"classes/AddOn.html":{}}}],["setnumber(number",{"_index":41,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setplan",{"_index":1113,"title":{},"body":{"classes/Track.html":{}}}],["setplan(plan",{"_index":1144,"title":{},"body":{"classes/Track.html":{}}}],["setselectedtrackid",{"_index":779,"title":{},"body":{"components/RhythmComponent.html":{}}}],["setselectedtrackid(id",{"_index":802,"title":{},"body":{"components/RhythmComponent.html":{}}}],["setsolomuted",{"_index":1163,"title":{},"body":{"components/TrackComponent.html":{}}}],["setsolomuted(bool",{"_index":1179,"title":{},"body":{"components/TrackComponent.html":{}}}],["settempo",{"_index":525,"title":{},"body":{"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{}}}],["settempo(tempo",{"_index":541,"title":{},"body":{"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{}}}],["settimecode",{"_index":701,"title":{},"body":{"classes/Note.html":{}}}],["settimecode(timecode",{"_index":712,"title":{},"body":{"classes/Note.html":{}}}],["settimeout(function(starttapvar",{"_index":837,"title":{},"body":{"components/RhythmComponent.html":{}}}],["settop",{"_index":894,"title":{},"body":{"classes/Signature.html":{}}}],["settop(top",{"_index":921,"title":{},"body":{"classes/Signature.html":{}}}],["settopandbottom",{"_index":895,"title":{},"body":{"classes/Signature.html":{}}}],["settopandbottom(top",{"_index":923,"title":{},"body":{"classes/Signature.html":{}}}],["setusehook",{"_index":22,"title":{},"body":{"classes/AddOn.html":{}}}],["setusehook(usehook",{"_index":44,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["setvolume",{"_index":964,"title":{},"body":{"classes/SoundPlayer.html":{},"components/TrackComponent.html":{}}}],["setvolume(volume",{"_index":980,"title":{},"body":{"classes/SoundPlayer.html":{},"components/TrackComponent.html":{}}}],["shadow(0",{"_index":1093,"title":{},"body":{"components/TempoComponent.html":{}}}],["shakuhachi",{"_index":1436,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shamisen",{"_index":1465,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shanai",{"_index":1470,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shar|sie",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["show",{"_index":346,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["shrink",{"_index":878,"title":{},"body":{"components/RhythmComponent.html":{}}}],["sig",{"_index":955,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signal",{"_index":340,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["signature",{"_index":630,"title":{"classes/Signature.html":{}},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"coverage.html":{}}}],["signature's",{"_index":910,"title":{},"body":{"classes/Signature.html":{}}}],["signature'},{'name",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["signature(4",{"_index":946,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.component.html",{"_index":945,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.component.sass",{"_index":944,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.getbottomnumber",{"_index":954,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature.gettop",{"_index":953,"title":{},"body":{"components/SignatureComponent.html":{}}}],["signature/signature.component",{"_index":304,"title":{},"body":{"modules/AppModule.html":{}}}],["signaturecomponent",{"_index":263,"title":{"components/SignatureComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signaturecomponent#bottom|bottom",{"_index":927,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#bottom|bottom}'s",{"_index":933,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#top|top",{"_index":926,"title":{},"body":{"classes/Signature.html":{}}}],["signaturecomponent#top|top}'s",{"_index":931,"title":{},"body":{"classes/Signature.html":{}}}],["signature|signature",{"_index":952,"title":{},"body":{"components/SignatureComponent.html":{}}}],["similar",{"_index":949,"title":{},"body":{"components/SignatureComponent.html":{}}}],["simple",{"_index":402,"title":{},"body":{"components/DashboardComponent.html":{}}}],["simplechanges",{"_index":641,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sitar",{"_index":1463,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteen",{"_index":1302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteen_note",{"_index":1310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sixteenth",{"_index":1331,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["size",{"_index":370,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["sizing",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{}}}],["slap_bass_1",{"_index":1395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slap_bass_2",{"_index":1396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["slice",{"_index":1227,"title":{},"body":{"components/TrackComponent.html":{}}}],["slope",{"_index":456,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["smooth",{"_index":870,"title":{},"body":{"components/RhythmComponent.html":{}}}],["solid",{"_index":476,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["solo",{"_index":810,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["soloed",{"_index":811,"title":{},"body":{"components/RhythmComponent.html":{}}}],["soloedtrack",{"_index":780,"title":{},"body":{"components/RhythmComponent.html":{}}}],["soloedtrack(bool",{"_index":805,"title":{},"body":{"components/RhythmComponent.html":{}}}],["solomuted",{"_index":1166,"title":{},"body":{"components/TrackComponent.html":{}}}],["something",{"_index":1527,"title":{},"body":{"miscellaneous/functions.html":{}}}],["soprano_sax",{"_index":1423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sound",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/SoundPlayer.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sound'},{'name",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["sound.component",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["sound.component.html",{"_index":622,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.sass",{"_index":621,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts",{"_index":619,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["sound.component.ts:111",{"_index":652,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:25",{"_index":656,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:30",{"_index":659,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:35",{"_index":639,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:39",{"_index":638,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:43",{"_index":631,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:48",{"_index":655,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:68",{"_index":642,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:89",{"_index":653,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.component.ts:96",{"_index":646,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["sound.onended",{"_index":991,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["sound/metronome",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["soundplan",{"_index":1236,"title":{},"body":{"components/TrackComponent.html":{}}}],["soundplayer",{"_index":958,"title":{"classes/SoundPlayer.html":{}},"body":{"classes/SoundPlayer.html":{},"coverage.html":{}}}],["sounds",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["sown",{"_index":36,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["space",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{}}}],["span",{"_index":489,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["span:first",{"_index":957,"title":{},"body":{"components/SignatureComponent.html":{}}}],["span>span",{"_index":1088,"title":{},"body":{"components/TempoComponent.html":{}}}],["spec\\.ts",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specify",{"_index":1334,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../basic",{"_index":1292,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../binary",{"_index":1293,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../instrument.ts",{"_index":1295,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../metronome.ts",{"_index":1296,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../note",{"_index":1581,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../ternary",{"_index":1297,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":287,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/metronome.ts",{"_index":1487,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/classes/note",{"_index":6,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/classes/note.ts",{"_index":692,"title":{},"body":{"classes/Note.html":{},"coverage.html":{}}}],["src/app/classes/note.ts:11",{"_index":706,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:13",{"_index":703,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:25",{"_index":708,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:28",{"_index":713,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:32",{"_index":707,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:35",{"_index":711,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:40",{"_index":709,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:8",{"_index":705,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/note.ts:9",{"_index":704,"title":{},"body":{"classes/Note.html":{}}}],["src/app/classes/signature.ts",{"_index":885,"title":{},"body":{"classes/Signature.html":{},"coverage.html":{}}}],["src/app/classes/signature.ts:10",{"_index":904,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:100",{"_index":912,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:109",{"_index":911,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:118",{"_index":908,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:15",{"_index":897,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:37",{"_index":913,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:45",{"_index":922,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:56",{"_index":906,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:65",{"_index":920,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:75",{"_index":924,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/signature.ts:87",{"_index":916,"title":{},"body":{"classes/Signature.html":{}}}],["src/app/classes/sound",{"_index":959,"title":{},"body":{"classes/SoundPlayer.html":{},"coverage.html":{}}}],["src/app/classes/tempo.ts",{"_index":1002,"title":{},"body":{"classes/Tempo.html":{},"coverage.html":{}}}],["src/app/classes/tempo.ts:10",{"_index":1011,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:14",{"_index":1010,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:32",{"_index":1014,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:40",{"_index":1021,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:49",{"_index":1013,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:57",{"_index":1018,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:70",{"_index":1017,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:78",{"_index":1015,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/tempo.ts:86",{"_index":1016,"title":{},"body":{"classes/Tempo.html":{}}}],["src/app/classes/track.ts",{"_index":1099,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/app/classes/track.ts:12",{"_index":1119,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:16",{"_index":1120,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:23",{"_index":1124,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:27",{"_index":1115,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:48",{"_index":1132,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:52",{"_index":1133,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:55",{"_index":1141,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:59",{"_index":1139,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:62",{"_index":1145,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:66",{"_index":1138,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:69",{"_index":1135,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:7",{"_index":1121,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:73",{"_index":1137,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:82",{"_index":1143,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:86",{"_index":1128,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:90",{"_index":1129,"title":{},"body":{"classes/Track.html":{}}}],["src/app/classes/track.ts:94",{"_index":1131,"title":{},"body":{"classes/Track.html":{}}}],["src/app/create",{"_index":328,"title":{},"body":{"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":391,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/enums/basic",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/enums/binary",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/enums/instrument.ts",{"_index":1358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/enums/ternary",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/export",{"_index":433,"title":{},"body":{"components/ExportMenuComponent.html":{},"coverage.html":{}}}],["src/app/main",{"_index":440,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/measure/measure.component.ts",{"_index":504,"title":{},"body":{"components/MeasureComponent.html":{},"coverage.html":{}}}],["src/app/metronome",{"_index":618,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"coverage.html":{}}}],["src/app/metronome/metronome.component.ts",{"_index":517,"title":{},"body":{"components/MetronomeComponent.html":{},"coverage.html":{}}}],["src/app/metronome/metronome.component.ts:19",{"_index":560,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:24",{"_index":554,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:29",{"_index":548,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:34",{"_index":551,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:54",{"_index":536,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:67",{"_index":542,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:80",{"_index":527,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:87",{"_index":543,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/metronome/metronome.component.ts:95",{"_index":545,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["src/app/note/note.component.ts",{"_index":729,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["src/app/playbar/playbar.component.ts",{"_index":754,"title":{},"body":{"components/PlaybarComponent.html":{},"coverage.html":{}}}],["src/app/rhythm/rhythm.component.ts",{"_index":765,"title":{},"body":{"components/RhythmComponent.html":{},"coverage.html":{}}}],["src/app/rhythm/rhythm.component.ts:107",{"_index":791,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:121",{"_index":806,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:15",{"_index":826,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:17",{"_index":822,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:18",{"_index":825,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:21",{"_index":820,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:22",{"_index":821,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:23",{"_index":819,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:25",{"_index":818,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:27",{"_index":823,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:28",{"_index":824,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:29",{"_index":817,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:36",{"_index":801,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:39",{"_index":784,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:45",{"_index":815,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:59",{"_index":814,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:67",{"_index":788,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:77",{"_index":804,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/rhythm/rhythm.component.ts:82",{"_index":803,"title":{},"body":{"components/RhythmComponent.html":{}}}],["src/app/save",{"_index":884,"title":{},"body":{"components/SaveMenuComponent.html":{},"coverage.html":{}}}],["src/app/signature/signature.component.ts",{"_index":943,"title":{},"body":{"components/SignatureComponent.html":{},"coverage.html":{}}}],["src/app/signature/signature.component.ts:20",{"_index":947,"title":{},"body":{"components/SignatureComponent.html":{}}}],["src/app/tempo/tempo.component.ts",{"_index":1034,"title":{},"body":{"components/TempoComponent.html":{},"coverage.html":{}}}],["src/app/tempo/tempo.component.ts:100",{"_index":1049,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:110",{"_index":1053,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:119",{"_index":1056,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:18",{"_index":1069,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:23",{"_index":1067,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:28",{"_index":1066,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:32",{"_index":1064,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:37",{"_index":1046,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:56",{"_index":1058,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:69",{"_index":1057,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:77",{"_index":1063,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/tempo/tempo.component.ts:85",{"_index":1059,"title":{},"body":{"components/TempoComponent.html":{}}}],["src/app/track/track.component.ts",{"_index":1157,"title":{},"body":{"components/TrackComponent.html":{},"coverage.html":{}}}],["src/app/track/track.component.ts:14",{"_index":1171,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:16",{"_index":1185,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:17",{"_index":1186,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:20",{"_index":1188,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:21",{"_index":1170,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:22",{"_index":1172,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:24",{"_index":1184,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:25",{"_index":1173,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:29",{"_index":1169,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:34",{"_index":1177,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:38",{"_index":1174,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:53",{"_index":1183,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:56",{"_index":1180,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:60",{"_index":1176,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:64",{"_index":1181,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:73",{"_index":1182,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:89",{"_index":1178,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/app/track/track.component.ts:98",{"_index":1175,"title":{},"body":{"components/TrackComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":501,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1533,"title":{"index.html":{}},"body":{}}],["starting",{"_index":1523,"title":{},"body":{"miscellaneous/functions.html":{}}}],["startrecord",{"_index":773,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starts",{"_index":544,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["starttap",{"_index":781,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starttap(evt",{"_index":813,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starttapvar",{"_index":774,"title":{},"body":{"components/RhythmComponent.html":{}}}],["starttime",{"_index":976,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["statements",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":67,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["steel_drums",{"_index":1473,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sticky",{"_index":463,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["stop",{"_index":526,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["stopmetronome",{"_index":627,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["stops",{"_index":546,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["store",{"_index":693,"title":{},"body":{"classes/Note.html":{}}}],["stored",{"_index":1555,"title":{},"body":{"index.html":{}}}],["stores",{"_index":1299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stretch",{"_index":1228,"title":{},"body":{"components/TrackComponent.html":{}}}],["string",{"_index":69,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/functions.html":{}}}],["string_ensemble_1",{"_index":1407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["string_ensemble_2",{"_index":1408,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["style",{"_index":475,"title":{},"body":{"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["styles",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["styles/menu",{"_index":439,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/PlaybarComponent.html":{},"components/SaveMenuComponent.html":{}}}],["styleurls",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["such",{"_index":514,"title":{},"body":{"components/MeasureComponent.html":{}}}],["support",{"_index":1574,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":403,"title":{},"body":{"components/DashboardComponent.html":{}}}],["svg",{"_index":72,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{},"modules.html":{}}}],["sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["synth_bass_1",{"_index":1397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_bass_2",{"_index":1398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_brass_1",{"_index":1421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_brass_2",{"_index":1422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_choir",{"_index":1413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_drum",{"_index":1477,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_strings_1",{"_index":1409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["synth_strings_2",{"_index":1410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["s|devi|dica|dmob|do(c|p)o|ds(12",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["t",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["tab",{"_index":445,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["table",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":396,"title":{},"body":{"components/DashboardComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["taiko_drum",{"_index":1475,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["takes",{"_index":531,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["tango_accordion",{"_index":1382,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tap",{"_index":857,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tap_button_size",{"_index":858,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tdg",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["tel(i|m)|tim",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["telephone_ring",{"_index":1483,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["templateurl",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tempo",{"_index":522,"title":{"classes/Tempo.html":{}},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"coverage.html":{}}}],["tempo#bpm|bpm",{"_index":1026,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["tempo#note|note",{"_index":1024,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["tempo's",{"_index":1019,"title":{},"body":{"classes/Tempo.html":{},"components/TempoComponent.html":{}}}],["tempo'},{'name",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tempo(basicnote.quarter_note",{"_index":558,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["tempo):void",{"_index":847,"title":{},"body":{"components/RhythmComponent.html":{}}}],["tempo.component.html",{"_index":1036,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo.component.sass",{"_index":1035,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo.getbpm",{"_index":1086,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo/tempo.component",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["tempocomponent",{"_index":265,"title":{"components/TempoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tempocomponent|tempocomponent",{"_index":950,"title":{},"body":{"components/SignatureComponent.html":{}}}],["tempooutput",{"_index":1045,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo|tempo",{"_index":1072,"title":{},"body":{"components/TempoComponent.html":{}}}],["tempo|tempo}'s",{"_index":1082,"title":{},"body":{"components/TempoComponent.html":{}}}],["tenor_sax",{"_index":1425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ternary",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ternarynote",{"_index":64,"title":{},"body":{"classes/AddOn.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"miscellaneous/enumerations.html":{}}}],["ternarynote._4n",{"_index":728,"title":{},"body":{"classes/Note.html":{}}}],["test",{"_index":1160,"title":{},"body":{"components/TrackComponent.html":{},"index.html":{}}}],["tests",{"_index":1562,"title":{},"body":{"index.html":{}}}],["text",{"_index":371,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["themselves",{"_index":1336,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.active",{"_index":451,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.addon",{"_index":116,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.addon.getnumber",{"_index":121,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.addon.getusehook",{"_index":123,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.bottom",{"_index":930,"title":{},"body":{"classes/Signature.html":{}}}],["this.bpm",{"_index":1028,"title":{},"body":{"classes/Tempo.html":{}}}],["this.convertimgnametopath(imgname",{"_index":108,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.create.emit(true",{"_index":351,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["this.duration",{"_index":717,"title":{},"body":{"classes/Note.html":{}}}],["this.endtapvar",{"_index":839,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.endtapvar.gettime",{"_index":844,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.gettrackindex(id",{"_index":855,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.id",{"_index":1150,"title":{},"body":{"classes/Track.html":{}}}],["this.imgspaths.indexof(imgname",{"_index":111,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.length",{"_index":101,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.push(this.convertimgnametopath(imgname",{"_index":106,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths.splice(index",{"_index":107,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.imgspaths[i",{"_index":102,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.instrument",{"_index":1152,"title":{},"body":{"classes/Track.html":{}}}],["this.intrumentinput.nativeelement.focus",{"_index":1203,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.ismodifyingbpm",{"_index":1080,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.ismodifyingnote",{"_index":1076,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.isplaying",{"_index":690,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["this.isplaying.emit(value",{"_index":966,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.isplaying.emlit(value",{"_index":988,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.isrunning",{"_index":578,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.isselected",{"_index":1205,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.issolo.emit(false",{"_index":1199,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.issolo.emit(true",{"_index":1201,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.metronome",{"_index":669,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.metronome.start",{"_index":683,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.metronome.startfor(nbtick",{"_index":689,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.metronome.stop",{"_index":691,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.mode",{"_index":681,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.modifiablebpm",{"_index":1073,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.modifiableinstrument",{"_index":1193,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.mute",{"_index":1198,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.note",{"_index":1027,"title":{},"body":{"classes/Tempo.html":{}}}],["this.notes",{"_index":1155,"title":{},"body":{"classes/Track.html":{}}}],["this.notes[i",{"_index":1156,"title":{},"body":{"classes/Track.html":{}}}],["this.number",{"_index":55,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.plan",{"_index":1154,"title":{},"body":{"classes/Track.html":{}}}],["this.playmetronome",{"_index":677,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.recording",{"_index":832,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.retrievenotetype",{"_index":725,"title":{},"body":{"classes/Note.html":{}}}],["this.runningmetronome",{"_index":567,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.setbpm(bpm",{"_index":572,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.setbpm(this.tempo.getbpm",{"_index":575,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.start",{"_index":579,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.runningmetronome.stop",{"_index":580,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.selectedtrack.emit(null",{"_index":1208,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.selectedtrack.emit(this.track.getid",{"_index":1207,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.selectedtrackid",{"_index":851,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.selectedtrackindex",{"_index":854,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.signature.getbottomnumber",{"_index":687,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.signature.gettop",{"_index":685,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.solomuted",{"_index":1202,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.sound",{"_index":670,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"classes/SoundPlayer.html":{}}}],["this.sound.currenttime",{"_index":993,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.sound.load",{"_index":1001,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.sound.pause",{"_index":995,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.sound.play",{"_index":992,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.sound.volume",{"_index":1000,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["this.startrecord",{"_index":833,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.startrecord.gettime",{"_index":842,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.starttapvar",{"_index":838,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.starttapvar.gettime",{"_index":841,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.stop",{"_index":570,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["this.stopmetronome",{"_index":679,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["this.tempo",{"_index":574,"title":{},"body":{"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{}}}],["this.tempo.getbpm",{"_index":576,"title":{},"body":{"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{}}}],["this.tempo.getnotenumber",{"_index":686,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{}}}],["this.tempo.setbpm(bpm",{"_index":571,"title":{},"body":{"components/MetronomeComponent.html":{},"components/TempoComponent.html":{}}}],["this.tempo.setbpm(this.modifiablebpm",{"_index":1081,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.tempo.setnote(note",{"_index":1074,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.tempooutput.emit(this.tempo",{"_index":1077,"title":{},"body":{"components/TempoComponent.html":{}}}],["this.timecode",{"_index":716,"title":{},"body":{"classes/Note.html":{}}}],["this.top",{"_index":929,"title":{},"body":{"classes/Signature.html":{}}}],["this.track.getid",{"_index":1209,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.track.getinstrument",{"_index":1194,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.track.setplan((this.track.getplan",{"_index":1195,"title":{},"body":{"components/TrackComponent.html":{}}}],["this.tracks.push(new",{"_index":830,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.tracks[this.selectedtrackindex].addnote(new",{"_index":845,"title":{},"body":{"components/RhythmComponent.html":{}}}],["this.type",{"_index":724,"title":{},"body":{"classes/Note.html":{}}}],["this.usehook",{"_index":56,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["this.volume",{"_index":1200,"title":{},"body":{"components/TrackComponent.html":{}}}],["tick",{"_index":532,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{}}}],["time",{"_index":530,"title":{},"body":{"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"miscellaneous/functions.html":{}}}],["timecode",{"_index":696,"title":{},"body":{"classes/Note.html":{},"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["timer",{"_index":836,"title":{},"body":{"components/RhythmComponent.html":{}}}],["times",{"_index":905,"title":{},"body":{"classes/Signature.html":{}}}],["timpani",{"_index":1406,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tinkle_bell",{"_index":1471,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["title",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["toc",{"_index":1488,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["todo",{"_index":438,"title":{},"body":{"components/ExportMenuComponent.html":{},"components/MeasureComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TrackComponent.html":{}}}],["toggle",{"_index":654,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"components/TempoComponent.html":{}}}],["togglemode",{"_index":628,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["togglemodifybpm",{"_index":1043,"title":{},"body":{"components/TempoComponent.html":{}}}],["togglemodifyinstrument",{"_index":1164,"title":{},"body":{"components/TrackComponent.html":{}}}],["togglemodifynote",{"_index":1044,"title":{},"body":{"components/TempoComponent.html":{}}}],["togglerecording",{"_index":782,"title":{},"body":{"components/RhythmComponent.html":{}}}],["togglesolomuted",{"_index":1165,"title":{},"body":{"components/TrackComponent.html":{}}}],["top",{"_index":10,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/TrackComponent.html":{}}}],["top's",{"_index":914,"title":{},"body":{"classes/Signature.html":{}}}],["tr",{"_index":1323,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":268,"title":{"classes/Track.html":{}},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{}}}],["track#instrument|instrument",{"_index":1146,"title":{},"body":{"classes/Track.html":{}}}],["track#notes|notes",{"_index":1149,"title":{},"body":{"classes/Track.html":{}}}],["track#plan|plan",{"_index":1147,"title":{},"body":{"classes/Track.html":{}}}],["track's",{"_index":808,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["track'},{'name",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["track.component",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["track.component.html",{"_index":333,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TrackComponent.html":{}}}],["track.component.sass",{"_index":332,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/TrackComponent.html":{}}}],["track.component.ts",{"_index":329,"title":{},"body":{"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["track.component.ts:15",{"_index":337,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["track.component.ts:31",{"_index":342,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["track.getinstrument",{"_index":1210,"title":{},"body":{"components/TrackComponent.html":{}}}],["track.nextid",{"_index":1151,"title":{},"body":{"classes/Track.html":{}}}],["track/create",{"_index":302,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"coverage.html":{}}}],["track/track.component",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["trackcomponent",{"_index":267,"title":{"components/TrackComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trackcontent",{"_index":1238,"title":{},"body":{"components/TrackComponent.html":{}}}],["tracks",{"_index":775,"title":{},"body":{"components/RhythmComponent.html":{},"classes/Track.html":{}}}],["transform",{"_index":388,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/PlaybarComponent.html":{},"components/TrackComponent.html":{}}}],["translatex",{"_index":390,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{}}}],["translatey",{"_index":389,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["translatey(100",{"_index":478,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["transparent",{"_index":474,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["tree",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["tremolo_strings",{"_index":1403,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["triplet",{"_index":1324,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["trombone",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["true",{"_index":97,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TrackComponent.html":{},"miscellaneous/variables.html":{}}}],["trumpet",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tslib",{"_index":1286,"title":{},"body":{"dependencies.html":{}}}],["tuba",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tubular_bells",{"_index":1373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twice",{"_index":533,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["two",{"_index":648,"title":{},"body":{"components/MetronomeSoundComponent.html":{},"miscellaneous/enumerations.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1579,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["un",{"_index":407,"title":{},"body":{"components/DashboardComponent.html":{}}}],["undetermined",{"_index":647,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["une",{"_index":353,"title":{},"body":{"components/CreateTrackComponent.html":{},"components/MainMenuComponent.html":{},"components/RhythmComponent.html":{}}}],["unit",{"_index":1561,"title":{},"body":{"index.html":{}}}],["unsoloed",{"_index":812,"title":{},"body":{"components/RhythmComponent.html":{}}}],["unspecified",{"_index":977,"title":{},"body":{"classes/SoundPlayer.html":{}}}],["update",{"_index":645,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["updated",{"_index":635,"title":{},"body":{"components/MetronomeSoundComponent.html":{}}}],["url(\"../../assets/images/metronome/metronome",{"_index":590,"title":{},"body":{"components/MetronomeComponent.html":{}}}],["url(\"../../assets/images/plus.svg",{"_index":385,"title":{},"body":{"components/CreateTrackComponent.html":{}}}],["use",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{},"index.html":{}}}],["used",{"_index":61,"title":{},"body":{"classes/AddOn.html":{},"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/Track.html":{}}}],["usehook",{"_index":17,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["user",{"_index":1050,"title":{},"body":{"components/TempoComponent.html":{}}}],["u|g560|gene|gf",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["v",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["value",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"classes/NoteRepresentation.html":{},"components/RhythmComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":925,"title":{},"body":{"classes/Signature.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/NoteComponent.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["variable",{"_index":1271,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1583,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars.$dark_gray",{"_index":484,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$deep_dark_gray",{"_index":487,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$disabled_opacity",{"_index":500,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$gray",{"_index":471,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$light_gray",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"components/SignatureComponent.html":{},"components/TempoComponent.html":{}}}],["vars.$middle_dark_gray",{"_index":1234,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$orange",{"_index":880,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$phone_max_width",{"_index":492,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["vars.$red",{"_index":882,"title":{},"body":{"components/RhythmComponent.html":{},"components/TrackComponent.html":{}}}],["vars.$transparent_middle_dark_gray",{"_index":1233,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$transparent_orange",{"_index":1226,"title":{},"body":{"components/TrackComponent.html":{}}}],["vars.$transparent_red",{"_index":1230,"title":{},"body":{"components/TrackComponent.html":{}}}],["version",{"_index":1537,"title":{},"body":{"index.html":{}}}],["via",{"_index":1564,"title":{},"body":{"index.html":{}}}],["vibraphone",{"_index":1370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["viewchild",{"_index":1189,"title":{},"body":{"components/TrackComponent.html":{}}}],["viewchild('instruinput",{"_index":1191,"title":{},"body":{"components/TrackComponent.html":{}}}],["viewencapsulation.none",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["viola",{"_index":1400,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["violin",{"_index":1399,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visual",{"_index":59,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["visually",{"_index":1313,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["voice_oohs",{"_index":1412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":43,"title":{},"body":{"classes/AddOn.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/ExportMenuComponent.html":{},"components/MainMenuComponent.html":{},"components/MeasureComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"classes/Note.html":{},"components/NoteComponent.html":{},"classes/NoteRepresentation.html":{},"components/PlaybarComponent.html":{},"components/RhythmComponent.html":{},"components/SaveMenuComponent.html":{},"classes/Signature.html":{},"components/SignatureComponent.html":{},"classes/SoundPlayer.html":{},"classes/Tempo.html":{},"components/TempoComponent.html":{},"classes/Track.html":{},"components/TrackComponent.html":{}}}],["volume",{"_index":983,"title":{},"body":{"classes/SoundPlayer.html":{},"components/TrackComponent.html":{}}}],["votre",{"_index":409,"title":{},"body":{"components/DashboardComponent.html":{}}}],["w])|libw|lynx|m1",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["want",{"_index":1054,"title":{},"body":{"components/TempoComponent.html":{},"miscellaneous/functions.html":{}}}],["wa|abac|ac(er|oo|s",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["webc|whit|wi(g",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["webkit",{"_index":462,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/TempoComponent.html":{}}}],["wether",{"_index":35,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["whether",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/MetronomeComponent.html":{},"components/MetronomeSoundComponent.html":{},"components/TempoComponent.html":{}}}],["whistle",{"_index":1437,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whole",{"_index":1301,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["whole_note",{"_index":1303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whose",{"_index":1116,"title":{},"body":{"classes/Track.html":{}}}],["width",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTrackComponent.html":{},"components/DashboardComponent.html":{},"components/MainMenuComponent.html":{},"components/MetronomeComponent.html":{},"components/RhythmComponent.html":{},"components/TempoComponent.html":{},"components/TrackComponent.html":{}}}],["without",{"_index":87,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["woodblock",{"_index":1474,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["works",{"_index":516,"title":{},"body":{"components/MeasureComponent.html":{},"components/NoteComponent.html":{}}}],["write",{"_index":34,"title":{},"body":{"classes/AddOn.html":{},"classes/NoteRepresentation.html":{}}}],["w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["x",{"_index":866,"title":{},"body":{"components/RhythmComponent.html":{}}}],["xylophone",{"_index":1372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["y",{"_index":865,"title":{},"body":{"components/RhythmComponent.html":{}}}],["your|zeto|zte",{"_index":212,"title":{},"body":{"components/AppComponent.html":{}}}],["z",{"_index":472,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["zone.js",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddOn.html":{"url":"classes/AddOn.html","title":"class - AddOn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddOn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note-representation.ts\n        \n\n            \n                Description\n            \n            \n                The add on on top of a note's representation\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                number\n                            \n                            \n                                    Private\n                                useHook\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumber\n                            \n                            \n                                getUseHook\n                            \n                            \n                                setNumber\n                            \n                            \n                                setUseHook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(number: number, useHook: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note-representation.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        number\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {\n\n                                                        \n                                                \n                                                \n                                                        useHook\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:13\n                            \n                        \n\n                \n                    \n                        The number to write\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            useHook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:17\n                            \n                        \n\n                \n                    \n                        Wether or not the number should be sown with an hook\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUseHook\n                        \n                        \n                    \n                \n            \n            \n                \ngetUseHook()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetNumber(number: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    number\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUseHook\n                        \n                        \n                    \n                \n            \n            \n                \nsetUseHook(useHook: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    useHook\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"./../../environments/environment\";\n\nexport type AddOnJson = {number: number, useHook: boolean};\n\n\n/**\n * The add on on top of a note's representation\n */\nclass AddOn {\n  /**\n   * The number to write\n   */\n  private number: number;\n  /**\n   * Wether or not the number should be sown with an hook\n   */\n  private useHook: boolean;\n\n\n  /**\n   * @param {number} number {@link AddOn#number}\n   * @param {boolean} useHook {@link AddOn#useHook}\n   */\n  constructor(number: number, useHook: boolean) {\n    this.number = number;\n    this.useHook = useHook;\n  }\n\n  /**\n   * @return {@link AddOn#number}\n   */\n  getNumber(): number {\n    return this.number;\n  }\n  /**\n   * @param {number} {@link AddOn#number}\n   */\n  setNumber(number: number): void {\n    this.number = number;\n  }\n\n  /**\n   * @return {@link AddOn#useHook}\n   */\n  getUseHook(): boolean {\n    return this.useHook;\n  }\n  /**\n   * @param {boolean} {@link AddOn#useHook}\n   */\n  setUseHook(useHook: boolean): void {\n    this.useHook = useHook;\n  }\n}\n\n/**\n * This class references the visual representation of any notes.\n *\n * Used in the enums BinaryNote and TernaryNote.\n */\nexport class NoteRepresentation {\n  /**\n   * @ignore\n  */\n  private static dirPath: string = \"../\" + environment.pathsFromApp.rythmsImg;\n  /**\n   * @ignore\n  */\n  private static extension: string = \".svg\";\n\n  /**\n   * The paths to the different parts of the note's Img, in order\n   */\n  private imgsPaths: string[] = new Array();\n  /**\n   * {@link AddOn}\n   */\n  private addOn: AddOn | null = null;\n\n\n  /**\n   * @param {string[]} imgsNames The names of the images, in order, used to form the note without the extention.\n   * @param {AddOnJson|null} addOn Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n   *\n   * @example\n   * let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\n   * let quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n   */\n  constructor(imgsNames: string[], addOn: AddOnJson | null = null) {\n    for(let i = 0 ; i = this.imgsPaths.length) {\n    //}\n    return this.imgsPaths[i];\n  }\n  getImgsPathsLength(): number {\n    return this.imgsPaths.length;\n  }\n  addToImgsPaths(imgName: string, index: number | null): void {\n    if(index == null || index == this.imgsPaths.length) {\n      this.imgsPaths.push(this.convertImgNameToPath(imgName));\n    } else {\n      this.imgsPaths.splice(index, 0, this.convertImgNameToPath(imgName));\n    }\n  }\n  removeFromImgsPaths(imgName: string): void {\n    let index:number = this.imgsPaths.indexOf(imgName);\n    if(index != -1) {\n      this.imgsPaths.splice(index, 1);\n    }\n  }\n  removeFromImgsPathsAt(index: number): void {\n    this.imgsPaths.splice(index, 1);\n  }\n\n  setAddOn(addOn: AddOnJson | null) {\n    if(addOn != null) {\n      this.addOn = new AddOn(addOn.number, addOn.useHook);\n    } else {\n      this.addOn = null;\n    }\n  }\n  getAddOnNumber(): number | null {\n    if(this.addOn != null) {\n      return this.addOn.getNumber();\n    }\n    return null;\n  }\n  getAddOnUseHook(): boolean | null {\n    if(this.addOn != null) {\n      return this.addOn.getUseHook();\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMobile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n      || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4))\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                        Whether or not if the application is being launched from a phone. NOT USED\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Polyrythmique'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        The title of the application\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']//,\n  //encapsulation: ViewEncapsulation.None\n})\n/**\n * The application component, or main component\n */\nexport class AppComponent {\n  /**\n   * The title of the application\n   */\n  title: string = 'Polyrythmique';\n\n  /**\n   * Whether or not if the application is being launched from a phone. NOT USED\n   */\n  isMobile: boolean = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n      || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0,4));\n}\n\n    \n\n    \n        \n  \n\n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                @use \"~sass/vars\"\n\n:host\n  display: flex\n  width: 100%\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateTrackComponent\n\nCreateTrackComponent\n\nAppModule -->\n\nCreateTrackComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nExportMenuComponent\n\nExportMenuComponent\n\nAppModule -->\n\nExportMenuComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\nAppModule -->\n\nMeasureComponent->AppModule\n\n\n\n\n\nMetronomeComponent\n\nMetronomeComponent\n\nAppModule -->\n\nMetronomeComponent->AppModule\n\n\n\n\n\nMetronomeSoundComponent\n\nMetronomeSoundComponent\n\nAppModule -->\n\nMetronomeSoundComponent->AppModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nAppModule -->\n\nNoteComponent->AppModule\n\n\n\n\n\nPlaybarComponent\n\nPlaybarComponent\n\nAppModule -->\n\nPlaybarComponent->AppModule\n\n\n\n\n\nRhythmComponent\n\nRhythmComponent\n\nAppModule -->\n\nRhythmComponent->AppModule\n\n\n\n\n\nSaveMenuComponent\n\nSaveMenuComponent\n\nAppModule -->\n\nSaveMenuComponent->AppModule\n\n\n\n\n\nSignatureComponent\n\nSignatureComponent\n\nAppModule -->\n\nSignatureComponent->AppModule\n\n\n\n\n\nTempoComponent\n\nTempoComponent\n\nAppModule -->\n\nTempoComponent->AppModule\n\n\n\n\n\nTrackComponent\n\nTrackComponent\n\nAppModule -->\n\nTrackComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CreateTrackComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            ExportMenuComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            MeasureComponent\n                        \n                        \n                            MetronomeComponent\n                        \n                        \n                            MetronomeSoundComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            PlaybarComponent\n                        \n                        \n                            RhythmComponent\n                        \n                        \n                            SaveMenuComponent\n                        \n                        \n                            SignatureComponent\n                        \n                        \n                            TempoComponent\n                        \n                        \n                            TrackComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { RhythmComponent } from './rhythm/rhythm.component';\nimport { TrackComponent } from './track/track.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { CreateTrackComponent } from './create-track/create-track.component';\nimport { SignatureComponent } from './signature/signature.component';\nimport { SaveMenuComponent } from './save-menu/save-menu.component';\nimport { ExportMenuComponent } from './export-menu/export-menu.component';\nimport { PlaybarComponent } from './playbar/playbar.component';\nimport { TempoComponent } from './tempo/tempo.component';\nimport { MetronomeComponent } from './metronome/metronome.component';\nimport { MeasureComponent } from './measure/measure.component';\nimport { NoteComponent } from './note/note.component';\nimport { MetronomeSoundComponent } from './metronome-sound/metronome-sound.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainMenuComponent,\n    RhythmComponent,\n    TrackComponent,\n    DashboardComponent,\n    CreateTrackComponent,\n    SignatureComponent,\n    SaveMenuComponent,\n    ExportMenuComponent,\n    PlaybarComponent,\n    TempoComponent,\n    MetronomeComponent,\n    MeasureComponent,\n    NoteComponent,\n    MetronomeSoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { RhythmComponent } from \"./rhythm/rhythm.component\";\nimport { MetronomeComponent } from \"./metronome/metronome.component\";\n\nconst routes: Routes = [{path: \"rhythm\", component: RhythmComponent},\n                        {path: \"rhythm-sound\", component: RhythmComponent},\n                        {path: \"metronome\", component: MetronomeComponent},\n                        {path: \"dashboard\", component: DashboardComponent},\n                        {path: \"\", redirectTo: \"/dashboard\", pathMatch: \"full\"},\n                        {path: \"**\", component: RhythmComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTrackComponent.html":{"url":"components/CreateTrackComponent.html","title":"component - CreateTrackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CreateTrackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/create-track/create-track.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-track\n            \n\n            \n                styleUrls\n                ./create-track.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./create-track.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTrack\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        create\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/create-track/create-track.component.ts:15\n                            \n                        \n                \n                    \n                        The attribute used to emit the signal to create a track to its parent element\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTrack\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTrack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/create-track/create-track.component.ts:31\n                \n            \n\n\n            \n                \n                    Send to its parent element create = true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-create-track',\n  templateUrl: './create-track.component.html',\n  styleUrls: ['./create-track.component.sass']\n})\n/**\n * This compoenent is used to show and receive events for creating a new track\n */\nexport class CreateTrackComponent implements OnInit {\n  /**\n   * The attribute used to emit the signal to create a track to its parent element\n   */\n  @Output() create: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Send to its parent element create = true\n   */\n  createTrack(): void {\n    this.create.emit(true);\n  }\n\n}\n\n    \n\n    \n        \n  Ajouter une piste\n\n\n    \n\n    \n                \n                    ./create-track.component.sass\n                \n                $FONT_SIZE:   1.6em\n$IMG_SIZE:    1.3em\n$MARGIN:      1rem\n\n:host\n  display: flex\n  justify-content: center\n\n\ndiv\n  display: inline-block\n  cursor: pointer\n  font-size: $FONT_SIZE\n  text-align: center\n\np\n  margin: 0\n  position: relative\n  padding: $MARGIN 0\n  padding-left: $MARGIN + 1.6 * 1.3\n\n  &::before\n    content: \"\"\n    position: absolute\n    display: inline-block\n    height: $IMG_SIZE\n    width: $IMG_SIZE\n    background-size: $IMG_SIZE $IMG_SIZE\n    background-image: url(\"../../assets/images/plus.svg\")\n    background-repeat: no-repeat\n    top: 50%\n    transform: translateY(-50%) translateX(-$MARGIN - 1.6 * 1.3)\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Ajouter une piste'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTrackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass']\n})\n/**\n * The home page\n */\nexport class DashboardComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Tableau de bord\n\n\n  Nouveau projet\n\n  \n    \n      Polyrytmie simple\n      \n    \n\n    \n      Polyrytmie sur fond musical\n      \n    \n  \n\n\n\n  Ouvrir un projet\n  \n    \n      Depuis votre appareil\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.sass\n                \n                @use \"~sass/vars\"\n\nsection\n  width: 100%\n  padding: 3.5rem 0\n\nh2, h3\n  text-align: center\n\nh3\n  margin: 0\n\nsection>div\n  width: 60vw\n  margin: auto\n  display: flex\n  justify-content: space-evenly\n\n  &>a, &>div\n    display: flex\n    flex-direction: column\n    justify-content: space-between\n    background-color: vars.$LIGHT_GRAY\n    border-radius: 1.5rem\n    width : 12rem\n    min-height : 12rem\n    padding: 1rem\n    box-sizing: border-box\n\n  &>div\n    cursor: pointer\n\nimg\n  display: block\n  height: 5rem\n  width: 5rem\n  margin: auto\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Tableau de bord  Nouveau projet            Polyrytmie simple                    Polyrytmie sur fond musical              Ouvrir un projet            Depuis votre appareil            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportMenuComponent.html":{"url":"components/ExportMenuComponent.html","title":"component - ExportMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExportMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/export-menu/export-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-export-menu\n            \n\n            \n                styleUrls\n                ./export-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./export-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-export-menu',\n  templateUrl: './export-menu.component.html',\n  styleUrls: ['./export-menu.component.sass']\n})\n/**\n * TODO\n */\nexport class ExportMenuComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./export-menu.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-menu/main-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n            \n                styleUrls\n                ./main-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-menu/main-menu.component.ts:18\n                            \n                        \n                \n                    \n                        The number of the active tab\n               1 -> rhythm\n               2 -> rhythm-sound\n               3 -> metronome\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setActive\n                        \n                        \n                    \n                \n            \n            \n                \nsetActive(active: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main-menu/main-menu.component.ts:34\n                \n            \n\n\n            \n                \n                    Change the active tab\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    active\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The number of the tab to set as active\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.sass']\n})\n/**\n * The main menu of the application.\n */\nexport class MainMenuComponent implements OnInit {\n  /**\n   * The number of the active tab\n   *               1 -> rhythm\n   *               2 -> rhythm-sound\n   *               3 -> metronome\n   */\n  @Input() active: number = 1;\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Change the active tab\n   * @param {number} active The number of the tab to set as active\n   */\n  setActive(active: number): void {\n    this.active = active;\n  }\n}\n\n    \n\n    \n        \n  MENU\n  \n    \n      \n      Créer une polyrythmie\n    \n\n    \n      \n      Créer une polyrythmie depuis une musique\n    \n    \n      \n      Métronome\n    \n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.sass\n                \n                @use \"~sass/vars\"\n\n$WIDTH: 3.5rem\n$SLOPE: ($WIDTH * 49.1) / 120.6\n$ICON_WIDTH: $WIDTH * 0.85\n\naside\n  position: -webkit-sticky\n  position: sticky\n  top: 0\n  right: 0\n  height: 100vh\n  width: $WIDTH\n\nnav\n  height: 100%\n  width: 100%\n  display: flex\n  flex-direction: column\n\nbutton\n  display: none\n\na\n  position: relative\n  display: flex\n  align-items: center\n  justify-content: center\n  padding: 0\n  height: calc(100% / 3)\n  width: 100%\n  background-color: vars.$GRAY\n  z-index: 10\n\n  &::before, &::after\n    content: \"\"\n    position: absolute\n    border-color: transparent transparent transparent vars.$GRAY\n    border-style: solid\n    height: 0\n    width: 0\n  &::before\n    top: 0\n    border-width: $SLOPE 0 0 $WIDTH\n    transform: translateY(-100%)\n  &::after\n    bottom: 0\n    border-width: 0 0 $SLOPE $WIDTH\n    transform: translateY(100%)\n\n  &:first-child::before\n    border: none\n  &:last-child::after\n    border: none\n\n\n.middle\n  background-color: vars.$DARK_GRAY\n  z-index: 9\n\n  &::before, &::after\n    border-color: transparent transparent transparent vars.$DARK_GRAY\n.dark\n  background-color: vars.$DEEP_DARK_GRAY\n  z-index: 8\n\n  &::before, &::after\n    border-color: transparent transparent transparent vars.$DEEP_DARK_GRAY\n\n\nspan\n  display: none\nimg\n  width: $ICON_WIDTH\n\n\n@media (max-width: vars.$PHONE_MAX_WIDTH)\n  aside\n    position: fixed\n    left: 0\n    background-color: vars.$GRAY\n\n  button\n    display: inline-block\n    &:not(.active)+nav\n      display: none\n    //&:not(.active)\n\n  nav\n    width: 40%\n    min-width: 275px\n    justify-content: space-evenly\n    z-index: 2\n\n    &::after\n      content: \"\"\n      width: 500%\n      height: 100vh\n      position: absolute\n      top: 0\n      left: 100%\n      z-index: 1\n      background-color: vars.$DARK_GRAY\n      opacity: 1 - vars.$DISABLED_OPACITY\n\n    a\n      background-color: transparent\n      height: auto\n      justify-content: flex-start\n      padding-left: 1rem\n      box-sizing: border-box\n\n      &::before, &::after\n        border: none\n\n      span\n        display: inline-block\n        padding: 0 0.5rem\n      img\n        width: $ICON_WIDTH * 0.75\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  MENU                  Créer une polyrythmie                    Créer une polyrythmie depuis une musique                    Métronome      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeasureComponent.html":{"url":"components/MeasureComponent.html","title":"component - MeasureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeasureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/measure/measure.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-measure\n            \n\n            \n                styleUrls\n                ./measure.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./measure.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-measure',\n  templateUrl: './measure.component.html',\n  styleUrls: ['./measure.component.sass']\n})\n/**\n * TODO\n * The measures to insert inside the TrackComponent (this last one should have changes afterward, such as moving attributes)\n */\nexport class MeasureComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        measure works!\n\n    \n\n    \n                \n                    ./measure.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'measure works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MeasureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetronomeComponent.html":{"url":"components/MetronomeComponent.html","title":"component - MetronomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetronomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/metronome/metronome.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metronome\n            \n\n            \n                styleUrls\n                ./metronome.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./metronome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isRunning\n                            \n                            \n                                runningMetronome\n                            \n                            \n                                sound\n                            \n                            \n                                tempo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMetronomeMovementLengthInSec\n                            \n                            \n                                setBPM\n                            \n                            \n                                setTempo\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMetronomeMovementLengthInSec\n                        \n                        \n                    \n                \n            \n            \n                \ngetMetronomeMovementLengthInSec()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:80\n                \n            \n\n\n            \n                \n                    Get the BPM at which the metronome beats\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time it takes for the metronome to tick twice (in sec)\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBPM\n                        \n                        \n                    \n                \n            \n            \n                \nsetBPM(bpm: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:54\n                \n            \n\n\n            \n                \n                    Set the BPM at which the metronome beats\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bpm\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The beat per minute ratio the metronome will beat at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTempo\n                        \n                        \n                    \n                \n            \n            \n                \nsetTempo(tempo: Tempo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:67\n                \n            \n\n\n            \n                \n                    Set the tempo of the metronome\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tempo\n                                    \n                                                Tempo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo of the metronome\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            start\n                        \n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:87\n                \n            \n\n\n            \n                \n                    Starts the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome/metronome.component.ts:95\n                \n            \n\n\n            \n                \n                    Stops the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRunning\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:29\n                            \n                        \n\n                \n                    \n                        Whether or not the metronome is running (is being play)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runningMetronome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Metronome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:34\n                            \n                        \n\n                \n                    \n                        The metronome\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metronome.Sound\n\n                        \n                    \n                    \n                        \n                            Default value : Metronome.Sound.TOC\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:24\n                            \n                        \n\n                \n                    \n                        The sound of the metronome. See the metronome's sound attribute for more\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tempo\n\n                        \n                    \n                    \n                        \n                            Default value : new Tempo(BasicNote.QUARTER_NOTE, 60)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome/metronome.component.ts:19\n                            \n                        \n\n                \n                    \n                        The BPM (Beat Per Minute) of the metronome\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tempo } from '../classes/tempo';\nimport { Metronome } from '../classes/metronome';\nimport { BasicNote } from '../enums/basic-note';\n\n@Component({\n  selector: 'app-metronome',\n  templateUrl: './metronome.component.html',\n  styleUrls: ['./metronome.component.sass']\n})\n\n/**\n * Used to define the Metronome\n */\nexport class MetronomeComponent implements OnInit {\n  /**\n   * The BPM (Beat Per Minute) of the metronome\n   */\n  tempo: Tempo = new Tempo(BasicNote.QUARTER_NOTE, 60);\n\n  /**\n   * The sound of the metronome. See the {@link Metronome#sound|metronome's sound attribute} for more\n   */\n  sound: Metronome.Sound = Metronome.Sound.TOC;\n\n  /**\n   * Whether or not the metronome is running (is being play)\n   */\n  isRunning: boolean = false;\n\n  /**\n   * The metronome\n   */\n  runningMetronome: Metronome;\n\n  /**\n  * @ignore\n  */\n  constructor() {\n    this.runningMetronome = new Metronome(this.tempo.getBPM());\n  }\n\n  /**\n  * @ignore\n  */\n  ngOnInit(): void {\n  }\n\n  /**\n  * Set the BPM at which the metronome beats\n  *\n  *@param {number} bpm The beat per minute ratio the metronome will beat at\n  */\n  setBPM(bpm: number): void {\n    if(this.isRunning) {\n      this.stop();\n    }\n    this.tempo.setBPM(bpm);\n    this.runningMetronome.setBPM(bpm);\n  }\n\n  /**\n    * Set the {@link MetronomeCOmponent#tempo|tempo} of the metronome\n    *\n    *@param {Tempo} tempo The new tempo of the metronome\n    */\n  setTempo(tempo: Tempo): void {\n    if(this.isRunning) {\n      this.stop();\n    }\n    this.tempo = tempo;\n    this.runningMetronome.setBPM(this.tempo.getBPM());\n  }\n\n  /**\n  * Get the BPM at which the metronome beats\n  *\n  * @returns {number} The time it takes for the metronome to tick twice (in sec)\n  */\n  getMetronomeMovementLengthInSec(): number {\n    return 1 / (this.tempo.getBPM() / 120);\n  }\n\n  /**\n  * Starts the metronome\n  */\n  start(): void{\n    this.isRunning = true;\n    this.runningMetronome.start();\n  }\n\n  /**\n  * Stops the metronome\n  */\n  stop(): void{\n    this.isRunning = false;\n    this.runningMetronome.stop();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n  \n\n  \n    \n    \n  \n\n  {{ runningMetronome.getSoundName() }}\n\n\n    \n\n    \n                \n                    ./metronome.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n$METRONOME_HEIGHT: 30rem\n$METRONOME_WIDTH: ($METRONOME_HEIGHT * 90) / 112.5\n\n:host\n  display: flex\n  flex-direction: column\n  height: 100%\n\n.controls\n  display: flex\n  justify-content: space-evenly\n  align-items: center\n  font-size: 1.5em\n  margin-bottom: 5rem\n\n  &>span\n    font-size: 1.2em\n\n  button, img\n    width: 5rem\n    height: 5rem\n\n\n.metronome\n    background-image: url(\"../../assets/images/metronome/metronome-base.svg\")\n    background-size: contain\n    background-repeat: no-repeat\n    background-position: center\n    margin: auto\n    width: $METRONOME_WIDTH\n    height: $METRONOME_HEIGHT\n    position: relative\n\n.metronome>img\n  position: absolute\n  left: 50%\n  height: ($METRONOME_HEIGHT * 0.8373333)\n  width: ($METRONOME_WIDTH * 0.1688888)\n  transform-origin: 50% 100%\n  transform: translateX(-50%)\n\n\n@mixin keyframes-animation($name)\n  @-webkit-keyframes #{$name}\n    @content\n\n  @keyframes #{$name}\n    @content\n\n@mixin prefix-property($name, $value)\n  -webkit-#{$name}: $value\n          #{$name}: $value\n\n@include keyframes-animation(rotating)\n  0%\n    @include prefix-property(transform, translateX(-50%) rotate(-45deg))\n  25%\n    @include prefix-property(transform, translateX(-50%) rotate(0deg) linear)\n  50%\n    @include prefix-property(transform, translateX(-50%) rotate(45deg))\n  75%\n    @include prefix-property(transform, translateX(-50%) rotate(0deg) linear)\n  100%\n    @include prefix-property(transform, translateX(-50%) rotate(-45deg))\n\n/*.metronome.run>img\n  -webkit-animation: rotating 2s ease-in-out infinite*/\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ runningMetronome.getSoundName() }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MetronomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MetronomeSoundComponent.html":{"url":"components/MetronomeSoundComponent.html","title":"component - MetronomeSoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MetronomeSoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/metronome-sound/metronome-sound.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-metronome-sound\n            \n\n            \n                styleUrls\n                ./metronome-sound.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./metronome-sound.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                metronome\n                            \n                            \n                                mode\n                            \n                            \n                                sound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                playMetronome\n                            \n                            \n                                stopMetronome\n                            \n                            \n                                toggleMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isPlaying\n                            \n                            \n                                signature\n                            \n                            \n                                tempo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isPlaying\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:43\n                            \n                        \n                \n                    \n                        Whether or not the sound is playing. Used to know when to start the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        signature\n                    \n                \n                \n                    \n                        Type :         Signature\n\n                    \n                \n                \n                    \n                        Default value : new Signature()\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:39\n                            \n                        \n                \n                    \n                        The signature used for the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tempo\n                    \n                \n                \n                    \n                        Type :         Tempo\n\n                    \n                \n                \n                    \n                        Default value : new Tempo()\n                    \n                \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:35\n                            \n                        \n                \n                    \n                        The tempo used for the sound. Get from it's parent component and updated with the parent's binded attribute\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:68\n                \n            \n\n\n            \n                \n                    Called each time the parent's component update the Input attributes of the component.\nUpdate the metronome and start it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The changes get from the parent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            playMetronome\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    playMetronome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:96\n                \n            \n\n\n            \n                \n                    Play the metronome for an undetermined time, two measure or not at all according to the mode of the componenet\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stopMetronome\n                        \n                        \n                    \n                \n            \n            \n                \nstopMetronome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:111\n                \n            \n\n\n            \n                \n                    Stop the metronome\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/metronome-sound/metronome-sound.component.ts:89\n                \n            \n\n\n            \n                \n                    Toggle the mode from 0 -> 1 -> 2 -> 0 ...\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metronome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Metronome\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:48\n                            \n                        \n\n                \n                    \n                        The metronome binded to the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:25\n                            \n                        \n\n                \n                    \n                        The sound mode of the component.\n0: sound all along\n1: sound on the two first empty  measures\n2: no sound\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Metronome.Sound\n\n                        \n                    \n                    \n                        \n                            Default value : Metronome.Sound.TOC\n                        \n                    \n                        \n                            \n                                    Defined in src/app/metronome-sound/metronome-sound.component.ts:30\n                            \n                        \n\n                \n                    \n                        The sound of the metronome. See the metronome's sound attribute for more\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, SimpleChanges, OnChanges, Input } from '@angular/core';\n\nimport { Tempo } from \"../classes/tempo\";\nimport { Signature } from \"../classes/signature\";\nimport { Metronome } from \"../classes/metronome\";\n\n@Component({\n  selector: 'app-metronome-sound',\n  templateUrl: './metronome-sound.component.html',\n  styleUrls: ['./metronome-sound.component.sass']\n})\n/**\n * This component is a button that allows to select the type of sound of the metronome,\n *   which starts when its parent component's attribute binded to the isPlaying attribute\n *   pass to true and stop when this attribute pass to false if the mode correspond to 0 : sound all along\n */\nexport class MetronomeSoundComponent implements OnInit, OnChanges {\n  /**\n   * The sound mode of the component.\n   *\n   * 0: sound all along\n   * 1: sound on the two first empty  measures\n   * 2: no sound\n   */\n  mode: number = 0;\n\n  /**\n   * The sound of the metronome. See the {@link Metronome#sound|metronome's sound attribute} for more\n   */\n  sound: Metronome.Sound = Metronome.Sound.TOC;\n\n  /**\n   * The tempo used for the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"tempo\") tempo: Tempo = new Tempo();\n  /**\n   * The signature used for the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"signature\") signature: Signature = new Signature();\n  /**\n   * Whether or not the sound is playing. Used to know when to start the sound. Get from it's parent component and updated with the parent's binded attribute\n   */\n  @Input(\"isPlaying\") isPlaying: boolean = false;\n\n  /**\n   * The metronome binded to the component\n   */\n  metronome: Metronome;\n\n  /**\n   * @ignore()\n   */\n  constructor() {\n    this.metronome = new Metronome(this.tempo.getBPM(), this.sound);\n  }\n  /**\n   * @ignore()\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Called each time the parent's component update the {@link Input|Input} attributes of the component.\n   * Update the metronome and start it\n   *\n   * @param {SimpleChanges} changes The changes get from the parent\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    for(const propName in changes) {\n      if(changes.hasOwnProperty(propName)) {\n        if(propName === \"tempo\") {\n          this.metronome = new Metronome(this.tempo.getBPM(), this.sound);\n        } else if(propName === \"isPlaying\") {\n          if(changes[\"isPlaying\"].currentValue) {\n            this.playMetronome();\n          } else {\n            if(changes[\"isPlaying\"].previousValue) {\n              this.stopMetronome();\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggle the {@link MetronomeSoundComponent#mode|mode} from 0 -> 1 -> 2 -> 0 ...\n   */\n  toggleMode(): void {\n    this.mode = (this.mode + 1) % 3;\n  }\n\n  /**\n   * Play the metronome for an undetermined time, two measure or not at all according to the {@link MetronomeSoundComponent#mode|mode} of the componenet\n   */\n  async playMetronome(): Promise {\n    if(this.mode == 0) {\n      this.metronome.start();\n    } else if(this.mode == 1) {\n        // The number of tick in two measures\n      let nbTick = (this.signature.getTop() * (this.tempo.getNoteNumber() / this.signature.getBottomNumber())) * 2;\n      await this.metronome.startFor(nbTick);\n      this.isPlaying = false;\n    }\n    return true;\n  }\n\n  /**\n   * Stop the metronome\n   */\n  stopMetronome(): void {\n    this.metronome.stop();\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./metronome-sound.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MetronomeSoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Note.html":{"url":"classes/Note.html","title":"class - Note","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Note\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note.ts\n        \n\n            \n                Description\n            \n            \n                This class is used to store notes\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                duration\n                            \n                            \n                                    Private\n                                isBinary\n                            \n                            \n                                    Private\n                                timecode\n                            \n                            \n                                    Private\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDuration\n                            \n                            \n                                getTimecode\n                            \n                            \n                                retrieveNoteType\n                            \n                            \n                                setDuration\n                            \n                            \n                                setTimecode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timecode: number, duration: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        timecode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        duration\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            duration\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isBinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timecode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BinaryNote | TernaryNote\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDuration\n                        \n                        \n                    \n                \n            \n            \n                \ngetDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTimecode\n                        \n                        \n                    \n                \n            \n            \n                \ngetTimecode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            retrieveNoteType\n                        \n                        \n                    \n                \n            \n            \n                \nretrieveNoteType()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         BinaryNote | TernaryNote\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDuration\n                        \n                        \n                    \n                \n            \n            \n                \nsetDuration(duration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    duration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTimecode\n                        \n                        \n                    \n                \n            \n            \n                \nsetTimecode(timecode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timecode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BinaryNote } from \"../enums/binary-note\";\nimport { TernaryNote } from \"../enums/ternary-note\";\n\n/**\n * This class is used to store notes\n */\nexport class Note {\n  private timecode: number;\n  private duration: number;\n\n  private type: BinaryNote | TernaryNote;\n\n  private isBinary: boolean = true;\n\n\n  constructor(timecode: number, duration: number) {\n    this.timecode = timecode;\n    this.duration = duration;\n\n    // TODO: FOLLOWING LINE TO REPLACE WITH POLYRYTHM LIBRAIRY INTEGRATION\n    this.type = this.retrieveNoteType()\n  }\n\n\n  getTimecode(): number {\n    return this.timecode;\n  }\n  setTimecode(timecode: number): void {\n    this.timecode = timecode;\n  }\n\n  getDuration(): number {\n    return this.duration;\n  }\n  setDuration(duration: number): void {\n    this.duration = duration;\n  }\n\n\n  retrieveNoteType(): BinaryNote | TernaryNote {\n    if(this.isBinary) {\n      return BinaryNote._4N;\n    } else {\n      return TernaryNote._4N;\n    }\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/note/note.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-note\n            \n\n            \n                styleUrls\n                ./note.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.sass']\n})\n/**\n * TODO\n * The notes to insert inside the MeasureComponent which is also to do\n */\nexport class NoteComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        note works!\n\n    \n\n    \n                \n                    ./note.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'note works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoteRepresentation.html":{"url":"classes/NoteRepresentation.html","title":"class - NoteRepresentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoteRepresentation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/note-representation.ts\n        \n\n            \n                Description\n            \n            \n                This class references the visual representation of any notes.\nUsed in the enums BinaryNote and TernaryNote.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addOn\n                            \n                            \n                                    Private\n                                imgsPaths\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToImgsPaths\n                            \n                            \n                                    Private\n                                convertImgNameToPath\n                            \n                            \n                                getAddOnNumber\n                            \n                            \n                                getAddOnUseHook\n                            \n                            \n                                getImgPathAt\n                            \n                            \n                                getImgsPaths\n                            \n                            \n                                getImgsPathsLength\n                            \n                            \n                                removeFromImgsPaths\n                            \n                            \n                                removeFromImgsPathsAt\n                            \n                            \n                                setAddOn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(imgsNames: string[], addOn: AddOnJson | null)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/note-representation.ts:78\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        imgsNames\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The names of the images, in order, used to form the note without the extention.\n\n                                                        \n                                                \n                                                \n                                                        addOn\n                                                  \n                                                        \n                                                                        AddOnJson | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n\n                                                        \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\nlet quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            addOn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AddOn | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:78\n                            \n                        \n\n                \n                    \n                        AddOn\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            imgsPaths\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/note-representation.ts:74\n                            \n                        \n\n                \n                    \n                        The paths to the different parts of the note's Img, in order\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addToImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \naddToImgsPaths(imgName: string, index: number | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    index\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            convertImgNameToPath\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertImgNameToPath(imgName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddOnNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddOnNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAddOnUseHook\n                        \n                        \n                    \n                \n            \n            \n                \ngetAddOnUseHook()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     boolean | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgPathAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgPathAt(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgsPaths()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgsPathsLength\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgsPathsLength()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromImgsPaths\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromImgsPaths(imgName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    imgName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeFromImgsPathsAt\n                        \n                        \n                    \n                \n            \n            \n                \nremoveFromImgsPathsAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAddOn\n                        \n                        \n                    \n                \n            \n            \n                \nsetAddOn(addOn: AddOnJson | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/note-representation.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    addOn\n                                    \n                                                AddOnJson | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { environment } from \"./../../environments/environment\";\n\nexport type AddOnJson = {number: number, useHook: boolean};\n\n\n/**\n * The add on on top of a note's representation\n */\nclass AddOn {\n  /**\n   * The number to write\n   */\n  private number: number;\n  /**\n   * Wether or not the number should be sown with an hook\n   */\n  private useHook: boolean;\n\n\n  /**\n   * @param {number} number {@link AddOn#number}\n   * @param {boolean} useHook {@link AddOn#useHook}\n   */\n  constructor(number: number, useHook: boolean) {\n    this.number = number;\n    this.useHook = useHook;\n  }\n\n  /**\n   * @return {@link AddOn#number}\n   */\n  getNumber(): number {\n    return this.number;\n  }\n  /**\n   * @param {number} {@link AddOn#number}\n   */\n  setNumber(number: number): void {\n    this.number = number;\n  }\n\n  /**\n   * @return {@link AddOn#useHook}\n   */\n  getUseHook(): boolean {\n    return this.useHook;\n  }\n  /**\n   * @param {boolean} {@link AddOn#useHook}\n   */\n  setUseHook(useHook: boolean): void {\n    this.useHook = useHook;\n  }\n}\n\n/**\n * This class references the visual representation of any notes.\n *\n * Used in the enums BinaryNote and TernaryNote.\n */\nexport class NoteRepresentation {\n  /**\n   * @ignore\n  */\n  private static dirPath: string = \"../\" + environment.pathsFromApp.rythmsImg;\n  /**\n   * @ignore\n  */\n  private static extension: string = \".svg\";\n\n  /**\n   * The paths to the different parts of the note's Img, in order\n   */\n  private imgsPaths: string[] = new Array();\n  /**\n   * {@link AddOn}\n   */\n  private addOn: AddOn | null = null;\n\n\n  /**\n   * @param {string[]} imgsNames The names of the images, in order, used to form the note without the extention.\n   * @param {AddOnJson|null} addOn Used to add a number on top of the note. If used, must possess the attributes {number} number and {boolean} useHook\n   *\n   * @example\n   * let quarterNoteRep: NoteRepresentation = new NoteRepresentation([\"4N\"], null);\n   * let quarterNoteTripletRep: NoteRepresentation = new NoteRepresentation([\"4N\"], {\"number\": 3, \"useHook\": true});\n   */\n  constructor(imgsNames: string[], addOn: AddOnJson | null = null) {\n    for(let i = 0 ; i = this.imgsPaths.length) {\n    //}\n    return this.imgsPaths[i];\n  }\n  getImgsPathsLength(): number {\n    return this.imgsPaths.length;\n  }\n  addToImgsPaths(imgName: string, index: number | null): void {\n    if(index == null || index == this.imgsPaths.length) {\n      this.imgsPaths.push(this.convertImgNameToPath(imgName));\n    } else {\n      this.imgsPaths.splice(index, 0, this.convertImgNameToPath(imgName));\n    }\n  }\n  removeFromImgsPaths(imgName: string): void {\n    let index:number = this.imgsPaths.indexOf(imgName);\n    if(index != -1) {\n      this.imgsPaths.splice(index, 1);\n    }\n  }\n  removeFromImgsPathsAt(index: number): void {\n    this.imgsPaths.splice(index, 1);\n  }\n\n  setAddOn(addOn: AddOnJson | null) {\n    if(addOn != null) {\n      this.addOn = new AddOn(addOn.number, addOn.useHook);\n    } else {\n      this.addOn = null;\n    }\n  }\n  getAddOnNumber(): number | null {\n    if(this.addOn != null) {\n      return this.addOn.getNumber();\n    }\n    return null;\n  }\n  getAddOnUseHook(): boolean | null {\n    if(this.addOn != null) {\n      return this.addOn.getUseHook();\n    }\n    return null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaybarComponent.html":{"url":"components/PlaybarComponent.html","title":"component - PlaybarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaybarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/playbar/playbar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playbar\n            \n\n            \n                styleUrls\n                ./playbar.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./playbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-playbar',\n  templateUrl: './playbar.component.html',\n  styleUrls: ['./playbar.component.sass']\n})\n/**\n * TODO\n */\nexport class PlaybarComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n    \n                \n                    ./playbar.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n:host\n  display: flex\n  justify-content: space-between\n\n  &>button:first-child\n    margin-right: 0.75rem\n  &>button:nth-child(2)\n    margin-right: 0.5rem\n\n  &>button:nth-child(1)>img\n    transform: rotateY(180deg)\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlaybarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RhythmComponent.html":{"url":"components/RhythmComponent.html","title":"component - RhythmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RhythmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/rhythm/rhythm.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rhythm\n            \n\n            \n                styleUrls\n                ./rhythm.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./rhythm.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endTapVar\n                            \n                            \n                                nbOfSoloTracks\n                            \n                            \n                                recording\n                            \n                            \n                                selectedTrackId\n                            \n                            \n                                selectedTrackIndex\n                            \n                            \n                                signature\n                            \n                            \n                                startRecord\n                            \n                            \n                                startTapVar\n                            \n                            \n                                tempo\n                            \n                            \n                                tracks\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTrack\n                            \n                            \n                                endTap\n                            \n                            \n                                getTrackIndex\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setSelectedTrackId\n                            \n                            \n                                setTempo\n                            \n                            \n                                soloedTrack\n                            \n                            \n                                startTap\n                            \n                            \n                                toggleRecording\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addTrack\n                        \n                        \n                    \n                \n            \n            \n                \naddTrack(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            endTap\n                        \n                        \n                    \n                \n            \n            \n                \nendTap(evt: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTrackIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetTrackIndex(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:107\n                \n            \n\n\n            \n                \n                    Get the index of a track inside the componenet's tracks array attribute knowing it's id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the track to find in the compoenent's tracks array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            let index: number = getTrackIndex(track.getId());\n                        \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The ondex of the track which id was given in parameter inside the component's tracks array attribute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedTrackId\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedTrackId(id: number | null)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            number | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTempo\n                        \n                        \n                    \n                \n            \n            \n                \nsetTempo(tempo: Tempo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tempo\n                                    \n                                                Tempo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            soloedTrack\n                        \n                        \n                    \n                \n            \n            \n                \nsoloedTrack(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:121\n                \n            \n\n\n            \n                \n                    Function called every time a child componenet track's sound plan change to solo or from solo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        true if a track have been soloed, false if it had been unsoloed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startTap\n                        \n                        \n                    \n                \n            \n            \n                \nstartTap(evt: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleRecording\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleRecording()\n                \n            \n\n\n            \n                \n                    Defined in src/app/rhythm/rhythm.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endTapVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nbOfSoloTracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recording\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrackId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTrackIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Signature\n\n                        \n                    \n                    \n                        \n                            Default value : new Signature()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startRecord\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startTapVar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tempo\n\n                        \n                    \n                    \n                        \n                            Default value : new Tempo()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Track[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/rhythm/rhythm.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { Track } from \"../classes/track\";\nimport { Note } from \"../classes/note\";\nimport { Tempo } from \"../classes/tempo\";\nimport { Signature } from \"../classes/signature\";\n\n\n@Component({\n  selector: 'app-rhythm',\n  templateUrl: './rhythm.component.html',\n  styleUrls: ['./rhythm.component.sass']\n})\nexport class RhythmComponent implements OnInit {\n  tracks: Track[] = new Array();\n\n  signature: Signature = new Signature();\n  tempo: Tempo = new Tempo();\n\n\n  selectedTrackId: number | null = null;\n  selectedTrackIndex: number = -1;\n  recording: boolean = false\n\n  nbOfSoloTracks: number = 0;\n\n  startRecord: Date = new Date();\n  startTapVar: Date = new Date();\n  endTapVar: Date = new Date();\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addTrack(bool: boolean): void {\n    if(bool) {\n      this.tracks.push(new Track());\n    }\n  }\n\n  toggleRecording(): void {\n    if(this.selectedTrackId) {\n      this.recording = !this.recording;\n      this.startRecord = new Date();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  addNote(evt: Event): void {\n\n  }\n\n  startTap(evt: Event): void {\n    let time = ((this.signature.getTop() * (this.tempo.getNoteNumber() / this.signature.getBottomNumber())) / this.tempo.getBPM()) * 120000;\n    let timer = setTimeout(function(startTapVar: Date) {\n      startTapVar = new Date();\n    }, time, this.startTapVar);\n\n  }\n\n  endTap(evt: Event): void {\n    this.endTapVar = new Date();\n\n      // In seconds\n    let timecode: number = (this.startTapVar.getTime() - this.startRecord.getTime()) / 1000;\n    let duration: number = (this.endTapVar.getTime() - this.startTapVar.getTime()) / 1000;\n\n    this.tracks[this.selectedTrackIndex].addNote(new Note(timecode, duration));\n  }\n\n  setTempo(tempo: Tempo):void {\n    this.tempo = tempo;\n  }\n\n\n  setSelectedTrackId(id: number | null): void {\n    if(!this.recording) {\n      // Put the last selected (this.selectedTrackId) track component's inside attribute isSelected as false\n      this.selectedTrackId = id;\n\n      if(id) {\n        this.selectedTrackIndex = this.getTrackIndex(id);\n      } else {\n        this.selectedTrackIndex = -1;\n      }\n    } else {\n      // Reput the (id) track component's inside attribute isSelected as false\n    }\n  }\n\n\n  /**\n   * Get the index of a track inside the componenet's tracks array attribute knowing it's id\n   *\n   * @example\n   * let index: number = getTrackIndex(track.getId());\n   *\n   * @param {number} id The id of the track to find in the compoenent's tracks array\n   * @returns {number} The ondex of the track which id was given in parameter inside the component's tracks array attribute\n   */\n  getTrackIndex(id: number): number {\n    for(let i = 0 ; i \n    \n\n    \n        Créer une polyrythmie\n\n\n  \n  \n\n\n\n  \n    \n      \n      \n    \n\n    \n      \n      \n        \n        \n      \n    \n\n    \n      \n      \n    \n  \n\n  START\n  TAP\n\n  \n    \n\n    \n    \n      \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./rhythm.component.sass\n                \n                @use \"~sass/vars\"\n\n$TAP_BUTTON_SIZE: 8rem\n\n$CONTROLS_HEIGHT: 12rem\n\n$BUTTON_SIZE: 3rem\n\n:host\n  display: flex\n  flex-direction: column\n  width: 100%\n  flex-grow: 1\n  max-height: 100vh\n\n\nsection\n  width: 100%\n\n#tracks\n  padding: 0.5rem 0\n  overflow-y: auto\n  overflow-x: hidden\n  scroll-behavior: smooth\n  max-height: calc(100vh - $CONTROLS_HEIGHT)\n\n#controls\n  margin-top: auto\n  margin-bottom: 2rem\n  padding-top: 0.5rem\n  display: flex\n  height: $CONTROLS_HEIGHT\n  align-items: center\n\n  &>div\n    flex-grow: 1\n\n  button\n    height: $BUTTON_SIZE\n    width: $BUTTON_SIZE\n\n    &>img\n      height: 100%\n      width: 100%\n\n  #generals, #measure-and-track\n    width: calc(100% - 3.5rem)\n    // = 100% - $TAP_BUTTON_SIZE / 2 - 0.5rem\n\n  #generals\n    display: flex\n    justify-content: space-evenly\n    margin-right: 0.5rem\n\n    &>div\n      flex-grow: 1\n      display: flex\n      flex-direction: column\n      justify-content: space-between\n      align-items: center\n    &>div:nth-child(1), &>div:nth-child(2)\n      margin: 2rem 0\n\n      .anacrouse\n        width: 6rem\n\n    app-signature\n      margin-bottom: 0.5rem\n\n  #start-button, #tap-button\n    height: $TAP_BUTTON_SIZE\n    width: $TAP_BUTTON_SIZE\n\n    border-width: 0.75rem\n    border-style: solid\n    border-radius: 50%\n    flex-shrink: 0\n\n  #start-button\n    font-size: 1.8em\n    border-color: vars.$ORANGE\n\n  #tap-button\n    font-size: 2.4em\n    border-color: vars.$RED\n\n  #measure-and-track\n    margin-left: 0.5rem\n    display: flex\n    justify-content: flex-end\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Créer une polyrythmie                                                                                            START  TAP                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RhythmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveMenuComponent.html":{"url":"components/SaveMenuComponent.html","title":"component - SaveMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/save-menu/save-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-save-menu\n            \n\n            \n                styleUrls\n                ./save-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./save-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-save-menu',\n  templateUrl: './save-menu.component.html',\n  styleUrls: ['./save-menu.component.sass']\n})\n/**\n * TODO\n */\nexport class SaveMenuComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./save-menu.component.sass\n                \n                @use \"../styles/menu-parts\"\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Signature.html":{"url":"classes/Signature.html","title":"class - Signature","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Signature\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/signature.ts\n        \n\n            \n                Description\n            \n            \n                This class represent a signature\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bottom\n                            \n                            \n                                    Private\n                                top\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBottom\n                            \n                            \n                                getBottomImgPath\n                            \n                            \n                                getBottomName\n                            \n                            \n                                getBottomNumber\n                            \n                            \n                                getTop\n                            \n                            \n                                    Private\n                                isCompatible\n                            \n                            \n                                setBottom\n                            \n                            \n                                setTop\n                            \n                            \n                                setTopAndBottom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(top: number, bottom: BasicNote)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/signature.ts:15\n                            \n                        \n\n                \n                    \n                            Create a signature object. If top and bottom are not compatible, both are set to default value.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        top\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                (optional) The top of the signature\n\n                                                        \n                                                \n                                                \n                                                        bottom\n                                                  \n                                                        \n                                                                        BasicNote\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bottom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicNote\n\n                        \n                    \n                    \n                        \n                            Default value : BasicNote.QUARTER_NOTE\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/signature.ts:15\n                            \n                        \n\n                \n                    \n                        The note used as time base\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            top\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 4\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/signature.ts:10\n                            \n                        \n\n                \n                    \n                        The number of times of each measure\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottom\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottom()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:56\n                \n            \n\n\n            \n                \n                    Get the bottom's value\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote\n\n                    \n                    \n                        The bottom of the signature\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomImgPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:118\n                \n            \n\n\n            \n                \n                    Get the image path associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The image path of the signature's bottom\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomName\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:109\n                \n            \n\n\n            \n                \n                    Get the name associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the signature's bottom\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBottomNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetBottomNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:100\n                \n            \n\n\n            \n                \n                    Get the number associated to the note of the bottom of the signature\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of the signature's bottom\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTop\n                        \n                        \n                    \n                \n            \n            \n                \ngetTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:37\n                \n            \n\n\n            \n                \n                    Get the top's value\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The top of the signature\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isCompatible\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isCompatible(top: number, bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:87\n                \n            \n\n\n            \n                \n                    Check if the top and bottom\n   number of the signature are compatible\nNOT FINISHED\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBottom\n                        \n                        \n                    \n                \n            \n            \n                \nsetBottom(bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:65\n                \n            \n\n\n            \n                \n                    Set the bottom's value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new bottom of the signature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTop\n                        \n                        \n                    \n                \n            \n            \n                \nsetTop(top: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:45\n                \n            \n\n\n            \n                \n                    Set the top's value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new top of the signature\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTopAndBottom\n                        \n                        \n                    \n                \n            \n            \n                \nsetTopAndBottom(top: number, bottom: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/signature.ts:75\n                \n            \n\n\n            \n                \n                    Set both top and\n   bottom values of the signature\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    top\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bottom\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BasicNote } from \"../enums/basic-note\";\n\n/**\n * This class represent a signature\n */\nexport class Signature {\n  /**\n   * The number of times of each measure\n   */\n  private top: number = 4;\n\n  /**\n   * The note used as time base\n   */\n  private bottom: BasicNote = BasicNote.QUARTER_NOTE;\n\n  /**\n   * Create a signature object. If {@link SignatureComponent#top|top} and {@link SignatureComponent#bottom|bottom} are not compatible, both are set to default value.\n   *\n   * @param {number} top (optional) The top of the signature\n   * @param {BasicNote} top (optional) The bottom of the signature\n   */\n  constructor(top: number = 4, bottom: BasicNote = BasicNote.QUARTER_NOTE) {\n    if(!this.isCompatible(top, bottom)) {\n      this.top = 4;\n      this.bottom = BasicNote.QUARTER_NOTE;\n    }\n    this.top = top;\n    this.bottom = bottom;\n  }\n\n  /**\n   * Get the {@link SignatureComponent#top|top}'s value\n   *\n   * @returns The top of the signature\n   */\n  getTop(): number {\n    return this.top;\n  }\n  /**\n   * Set the {@link SignatureComponent#top|top}'s value\n   *\n   * @param {number} top The new top of the signature\n   */\n  setTop(top: number): void {\n    if(this.isCompatible(top, this.bottom)) {\n      this.top = top;\n    }\n  }\n\n  /**\n   * Get the {@link SignatureComponent#bottom|bottom}'s value\n   *\n   * @returns The bottom of the signature\n   */\n  getBottom(): BasicNote {\n    return this.bottom;\n  }\n\n  /**\n   * Set the {@link SignatureComponent#bottom|bottom}'s value\n   *\n   * @param {BasicNote} bottom The new bottom of the signature\n   */\n  setBottom(bottom: BasicNote): void {\n    if(this.isCompatible(this.top, bottom)) {\n      this.bottom = bottom;\n    }\n  }\n\n  /**\n   * Set both {@link SignatureComponent#top|top} and\n   *   {@link SignatureComponent#bottom|bottom} values of the signature\n   */\n  setTopAndBottom(top: number, bottom: BasicNote) {\n    if(this.isCompatible(top, bottom)) {\n      this.top = top;\n      this.bottom = bottom;\n    }\n  }\n\n  /**\n   * Check if the {@link SignatureComponent#top|top} and {@link SignatureComponent#bottom|bottom}\n   *   number of the signature are compatible\n   * NOT FINISHED\n   */\n  private isCompatible(top: number, bottom: BasicNote): boolean {\n    if(top >= 1 && top % 1 == 1) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Get the {@link BasicNote#getNumber|number} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The number of the signature's bottom\n   */\n  getBottomNumber(): number {\n    return BasicNote.getNumber(this.bottom);\n  }\n\n  /**\n   * Get the {@link BasicNote#name|name} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The name of the signature's bottom\n   */\n  getBottomName(): string {\n    return BasicNote.getName(this.bottom);\n  }\n\n  /**\n   * Get the {@link BasicNote#imgPath|image path} associated to the {@link BasicNote|note} of the {@link SignatureComponent#bottom|bottom} of the signature\n   *\n   * @returns The image path of the signature's bottom\n   */\n  getBottomImgPath(): string {\n    return BasicNote.getImgPath(this.bottom);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignatureComponent.html":{"url":"components/SignatureComponent.html","title":"component - SignatureComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignatureComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signature/signature.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signature\n            \n\n            \n                styleUrls\n                ./signature.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./signature.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                signature\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Signature\n\n                        \n                    \n                    \n                        \n                            Default value : new Signature(4, BasicNote.QUARTER_NOTE)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/signature/signature.component.ts:20\n                            \n                        \n\n                \n                    \n                        The  signature associated to the component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\nimport { BasicNote } from \"../enums/basic-note\";\nimport { Signature } from \"../classes/signature\";\n\n@Component({\n  selector: 'app-signature',\n  templateUrl: './signature.component.html',\n  styleUrls: ['./signature.component.sass']\n})\n/**\n * TODO. Kind of similar to {@link TempoComponent|TempoComponent}\n * Used to define the signature of a project or measure\n */\nexport class SignatureComponent implements OnInit {\n\n  /**\n   * The  {@link Signature|signature} associated to the component\n   */\n  signature: Signature = new Signature(4, BasicNote.QUARTER_NOTE);\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  Signature\n  \n    {{ signature.getTop() }}\n    {{ signature.getBottomNumber() }}\n  \n\n\n    \n\n    \n                \n                    ./signature.component.sass\n                \n                @use \"~sass/vars\"\n\n.sig-root\n  background-color: vars.$LIGHT_GRAY\n  border-radius: 1.5rem\n  padding: 0.75rem 1rem\n\n  p\n   margin: 0 0 0.75rem 0\n   text-align: center\n\n  div\n    display: flex\n    flex-direction: column\n    justify-content: center\n    align-items: center\n\n    span\n      font-size: 1.3em\n      padding: 0.25rem\n      cursor: pointer\n\n    span:first-child\n      margin-bottom: 0.25rem\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Signature      {{ signature.getTop() }}    {{ signature.getBottomNumber() }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignatureComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoundPlayer.html":{"url":"classes/SoundPlayer.html","title":"class - SoundPlayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoundPlayer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/sound-player.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                onended\n                            \n                            \n                                    Private\n                                sound\n                            \n                            \n                                sound\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                pause\n                            \n                            \n                                play\n                            \n                            \n                                playFromTime\n                            \n                            \n                                setVolume\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isPlaying\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onended\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : function(){\n    console.log(\"STOP\");\n    this.isPlaying = false;\n\n    this.isPlaying.emit(value);\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/sound-player.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            sound\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/classes/sound-player.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sound\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/app/classes/sound-player.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/sound-player.ts:51\n                \n            \n\n\n            \n                \n                    Pause the audio if playing\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            play\n                        \n                        \n                    \n                \n            \n            \n                \nplay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/sound-player.ts:32\n                \n            \n\n\n            \n                \n                    Play the audio\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            playFromTime\n                        \n                        \n                    \n                \n            \n            \n                \nplayFromTime(startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/sound-player.ts:41\n                \n            \n\n\n            \n                \n                    Play the sound from a certain point in time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        The time in seconds from which the sound starts playing. If unspecified, the sound starts from the beginning (StartTime = 0s)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVolume\n                        \n                        \n                    \n                \n            \n            \n                \nsetVolume(volume: float)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/sound-player.ts:62\n                \n            \n\n\n            \n                \n                    Set the volume of the sound\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    volume\n                                    \n                                            float\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value of the volume that will be set. Should be included between [0;1]\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        isPlaying\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/classes/sound-player.ts:11\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { environment } from \"./../../environments/environment\";\n\nimport { EventEmitter, Output } from '@angular/core';\n\n\nexport class SoundPlayer {\n\n  /* The audio that plays */\n  private sound;\n\n  @Output() isPlaying: boolean = false;\n  //this.isPlaying.emlit(value);\n\n  /**\n  * @ignore\n  *\n  */\n  constructor(soundName: String) {\n    this.sound = new Audio(\"../\"+environment.pathsFromApp.sounds+soundName);\n  }\n\n  sound.onended = function(){\n    console.log(\"STOP\");\n    this.isPlaying = false;\n\n    this.isPlaying.emit(value);\n  };\n\n  /**\n  * Play the audio\n  */\n  play() {\n    this.isPlaying = true;\n    this.sound.play();\n  }\n\n  /**\n  * Play the sound from a certain point in time\n  * @param {number} startTime The time in seconds from which the sound starts playing. If unspecified, the sound starts from the beginning (StartTime = 0s)\n  */\n  playFromTime(startTime: number = 0) {\n    this.sound.currentTime = startTime;\n    this.isPlaying = true;\n    this.sound.play();\n  }\n\n\n  /**\n  * Pause the audio if playing\n  */\n  pause() {\n    if(!this.sound.paused){\n      this.isPlaying = false;\n      this.sound.pause();\n    }\n  }\n\n  /**\n  *  Set the volume of the sound\n  * @param {float} volume The value of the volume that will be set. Should be included between [0;1]\n  */\n  setVolume(volume: float) {\n    if(volume 1){\n        console.log(\"Tried to set the volume to an amount that exceeds 1. Volume should be included between [0;1]\");\n      }else{\n        this.sound.volume = volume;\n        this.sound.load();\n      }\n    }\n  }\n\n\n\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Tempo.html":{"url":"classes/Tempo.html","title":"class - Tempo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Tempo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/tempo.ts\n        \n\n            \n                Description\n            \n            \n                This class represent a tempo\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bpm\n                            \n                            \n                                    Private\n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBPM\n                            \n                            \n                                getNote\n                            \n                            \n                                getNoteImgPath\n                            \n                            \n                                getNoteName\n                            \n                            \n                                getNoteNumber\n                            \n                            \n                                setBPM\n                            \n                            \n                                setNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: BasicNote, bpm: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/tempo.ts:14\n                            \n                        \n\n                \n                    \n                            Create a tempo object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        BasicNote\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                                \n                                                        bpm\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bpm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/tempo.ts:14\n                            \n                        \n\n                \n                    \n                        The BPM or Beat Per Minute\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            note\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BasicNote\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/tempo.ts:10\n                            \n                        \n\n                \n                    \n                        The note that is beat. See BasicNote for more details\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBPM\n                        \n                        \n                    \n                \n            \n            \n                \ngetBPM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:49\n                \n            \n\n\n            \n                \n                    Get the BPM of the tempo\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNote\n                        \n                        \n                    \n                \n            \n            \n                \ngetNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:32\n                \n            \n\n\n            \n                \n                    Get the note of the tempo\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteImgPath()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:78\n                \n            \n\n\n            \n                \n                    Get the image path of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteName\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteName()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:86\n                \n            \n\n\n            \n                \n                    Get the name of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteNumber()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:70\n                \n            \n\n\n            \n                \n                    Get the number of the note associated to the tempo\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBPM\n                        \n                        \n                    \n                \n            \n            \n                \nsetBPM(bpm: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:57\n                \n            \n\n\n            \n                \n                    Set the BPM of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bpm\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNote\n                        \n                        \n                    \n                \n            \n            \n                \nsetNote(note: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/tempo.ts:40\n                \n            \n\n\n            \n                \n                    Set the note of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's {\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BasicNote } from \"../enums/basic-note\";\n\n/**\n * This class represent a tempo\n */\nexport class Tempo {\n  /**\n   * The note that is beat. See {@link BasicNote|BasicNote} for more details\n   */\n  private note: BasicNote;\n  /**\n   * The BPM or Beat Per Minute\n   */\n  private bpm: number;\n\n  /**\n   * Create a tempo object\n   *\n   * @param {BasicNote|null} note The {@link Tempo#note|note} of the new tempo\n   * @param {number|null} bpm The {@link Tempo#bpm|BPM} of the new tempo\n   */\n  constructor(note: BasicNote = BasicNote.QUARTER_NOTE, bpm: number = 60) {\n    this.note = note;\n    this.bpm = bpm;\n  }\n\n  /**\n   * Get the {@link Tempo#note|note} of the tempo\n   *\n   * @returns The {@link Tempo#note|note} of the tempo\n   */\n  getNote(): BasicNote {\n    return this.note;\n  }\n  /**\n   * Set the {@link Tempo#note|note} of the tempo\n   *\n   * @param {BasicNote} note The new tempo's {@link Tempo#note|note}\n   */\n  setNote(note: BasicNote): void {\n    this.note = note;\n  }\n\n  /**\n   * Get the {@link Tempo#bpm|BPM} of the tempo\n   *\n   * @returns The {@link Tempo#bpm|BPM} of the tempo\n   */\n  getBPM(): number {\n    return this.bpm;\n  }\n  /**\n   * Set the {@link Tempo#bpm|BPM} of the tempo\n   *\n   * @param {number} bpm The new tempo's {@link Tempo#bpm|BPM}\n   */\n  setBPM(bpm: number): boolean {\n    if(bpm >= 1 && bpm % 1 == 0) {\n      this.bpm = bpm;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get the {@link BasicNote#number|number} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#number|number} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteNumber(): number {\n    return BasicNote.getNumber(this.note);\n  }\n  /**\n   * Get the {@link BasicNote#imgPath|image path} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#imgPath|image path} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteImgPath(): string {\n    return BasicNote.getImgPath(this.note);\n  }\n  /**\n   * Get the {@link BasicNote#name|name} of the {@link Tempo#note|note} associated to the tempo\n   *\n   * @returns The {@link BasicNote#name|name} associated to the tempo's {@link Tempo#note|note}\n   */\n  getNoteName(): string {\n    return BasicNote.getName(this.note);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TempoComponent.html":{"url":"components/TempoComponent.html","title":"component - TempoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TempoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tempo/tempo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tempo\n            \n\n            \n                styleUrls\n                ./tempo.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tempo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isModifyingBPM\n                            \n                            \n                                isModifyingNote\n                            \n                            \n                                modifiableBPM\n                            \n                            \n                                tempo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBasicNoteList\n                            \n                            \n                                getImgPath\n                            \n                            \n                                getName\n                            \n                            \n                                setBPM\n                            \n                            \n                                setNote\n                            \n                            \n                                toggleModifyBPM\n                            \n                            \n                                toggleModifyNote\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                tempoOutput\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        tempoOutput\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:37\n                            \n                        \n                \n                    \n                        The attribute that notify the parent component of the new tempo when it is changed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBasicNoteList\n                        \n                        \n                    \n                \n            \n            \n                \ngetBasicNoteList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:100\n                \n            \n\n\n            \n                \n                    Get all the notes that the user can chose as the tempo's note\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote[]\n\n                    \n                    \n                        The notes that the user can chose\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgPath(note: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:110\n                \n            \n\n\n            \n                \n                    Get the path to the image of a note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note we want the path to its image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The path to the image of the note\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \ngetName(note: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:119\n                \n            \n\n\n            \n                \n                    Get the name of a note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note we want the name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the note\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBPM\n                        \n                        \n                    \n                \n            \n            \n                \nsetBPM(bpm: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:69\n                \n            \n\n\n            \n                \n                    Set the BPM of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    bpm\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's BPM\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNote\n                        \n                        \n                    \n                \n            \n            \n                \nsetNote(note: BasicNote)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:56\n                \n            \n\n\n            \n                \n                    Set the note of the tempo\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                BasicNote\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new tempo's note\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModifyBPM\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModifyBPM()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:85\n                \n            \n\n\n            \n                \n                    Toggle if the tempo's BPM is being modified, and modify it if it's the end of the modification\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModifyNote\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModifyNote()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tempo/tempo.component.ts:77\n                \n            \n\n\n            \n                \n                    Toggle if the tempo's note is being modified\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModifyingBPM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:32\n                            \n                        \n\n                \n                    \n                        Whether or note the user is modigying the BPM of the tempo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isModifyingNote\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:28\n                            \n                        \n\n                \n                    \n                        Whether or note the user is modigying the note of the tempo\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiableBPM\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:23\n                            \n                        \n\n                \n                    \n                        The BPM that can be directly modified by the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tempo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tempo\n\n                        \n                    \n                    \n                        \n                            Default value : new Tempo()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tempo/tempo.component.ts:18\n                            \n                        \n\n                \n                    \n                        The current tempo\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\n\nimport { Tempo } from \"../classes/tempo\";\nimport { BasicNote } from \"../enums/basic-note\";\n\n@Component({\n  selector: 'app-tempo',\n  templateUrl: './tempo.component.html',\n  styleUrls: ['./tempo.component.sass']\n})\n/**\n * This component allow the user to modify the tempo\n */\nexport class TempoComponent implements OnInit {\n  /**\n   * The current tempo\n   */\n  tempo: Tempo = new Tempo();\n\n  /**\n   * The BPM that can be directly modified by the user\n   */\n  modifiableBPM: number = 0;\n\n  /**\n   * Whether or note the user is modigying the {@link Tempo#note|note} of the {@link Tempo|tempo}\n   */\n  isModifyingNote: boolean = false;\n  /**\n   * Whether or note the user is modigying the {@link Tempo#bpm|BPM} of the {@link Tempo|tempo}\n   */\n  isModifyingBPM: boolean = false;\n\n  /**\n   * The attribute that notify the parent component of the new tempo when it is changed\n   */\n  @Output() tempoOutput: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.modifiableBPM = this.tempo.getBPM();\n  }\n\n  /**\n   * Set the {@link Tempo#note|note} of the {@link Tempo|tempo}\n   *\n   * @param {BasicNote} note The new tempo's note\n   */\n  setNote(note: BasicNote): void {\n    this.tempo.setNote(note);\n    if(this.isModifyingNote) {\n      this.isModifyingNote = false;\n    }\n    this.tempoOutput.emit(this.tempo);\n  }\n\n  /**\n   * Set the {@link Tempo#bpm|BPM} of the {@link Tempo|tempo}\n   *\n   * @param {number} bpm The new tempo's BPM\n   */\n  setBPM(bpm: number): void {\n    this.tempo.setBPM(bpm);\n    this.tempoOutput.emit(this.tempo);\n  }\n\n  /**\n   * Toggle if the tempo's note is being modified\n   */\n  toggleModifyNote(): void {\n    if(!this.isModifyingBPM) {\n      this.isModifyingNote = !this.isModifyingNote;\n    }\n  }\n  /**\n   * Toggle if the tempo's BPM is being modified, and modify it if it's the end of the modification\n   */\n  toggleModifyBPM(): void {\n    if(!this.isModifyingNote) {\n      this.isModifyingBPM = !this.isModifyingBPM;\n      if(!this.isModifyingBPM) {\n        this.tempo.setBPM(this.modifiableBPM);\n      }\n      this.tempoOutput.emit(this.tempo);\n    }\n  }\n\n  /**\n   * Get all the notes that the user can chose as the {@link Tempo|tempo}'s {@link Tempo#note|note}\n   *\n   * @returns The notes that the user can chose\n   */\n  getBasicNoteList(): BasicNote[] {\n    return BasicNote.values();\n  }\n\n  /**\n   * Get the path to the image of a {@link BasicNote|note}\n   *\n   * @param {BasicNote} note The note we want the path to its image\n   * @returns The path to the image of the note\n   */\n  getImgPath(note: BasicNote): string {\n    return BasicNote.getImgPath(note);\n  }\n  /**\n   * Get the name of a {@link BasicNote|note}\n   *\n   * @param {BasicNote} note The note we want the name\n   * @returns The name of the note\n   */\n  getName(note: BasicNote): string {\n    return BasicNote.getName(note);\n  }\n}\n\n    \n\n    \n        \n  Tempo\n  \n    \n    = {{ tempo.getBPM() }}\n\n    \n      \n      ➤\n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    ./tempo.component.sass\n                \n                @use \"~sass/vars\"\n\n.tempo-root\n  background-color: vars.$LIGHT_GRAY\n  border-radius: 1.5rem\n  padding: 0.75rem 1.5rem\n\n  p\n   margin: 0 0 0.75rem 0\n   text-align: center\n\n  div\n    display: flex\n    justify-content: center\n    align-items: center\n\n    img, img+span\n      padding: 0.25rem\n    img, span>span\n      cursor: pointer\n\n    img\n      height: 1.5em\n\n    img+span\n      font-size: 1.3em\n\n    input\n      max-width: 5rem\n\n.selectNote\n  img\n    height: 1.5em\n    padding: 0.25rem\n    cursor: pointer\n  img:hover\n    -webkit-filter: drop-shadow(0 0 0.05rem rgba(255, 255, 255, .7))\n    filter: drop-shadow(0 0 0.1rem rgba(255, 255, 255, .7))\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Tempo          = {{ tempo.getBPM() }}                ➤              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TempoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/track.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Private\n                                instrument\n                            \n                            \n                                    Private\n                                    Static\n                                nextId\n                            \n                            \n                                    Private\n                                notes\n                            \n                            \n                                    Private\n                                plan\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                clearNotes\n                            \n                            \n                                deleteNotesBetweenTimecodes\n                            \n                            \n                                getId\n                            \n                            \n                                getInstrument\n                            \n                            \n                                getNoteAtIndex\n                            \n                            \n                                getNoteAtTimecode\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlan\n                            \n                            \n                                setInstrument\n                            \n                            \n                                setNotes\n                            \n                            \n                                setPlan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(instrument: string, plan: number, notes: Note[])\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/track.ts:27\n                            \n                        \n\n                \n                    \n                            Create a new track whose attributes corresponds to the parameters. Its id is auto-incremented\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrument\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                (optional) The {\n\n                                                        \n                                                \n                                                \n                                                        plan\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                (optional) The {\n\n                                                        \n                                                \n                                                \n                                                        notes\n                                                  \n                                                        \n                                                                        Note[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                (optional) The {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:12\n                            \n                        \n\n                \n                    \n                        The id of the track\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            instrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:16\n                            \n                        \n\n                \n                    \n                        The instrument used for the sound of the track\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            nextId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:7\n                            \n                        \n\n                \n                    \n                        The auto-increment value for the tracks' ids\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Note[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:27\n                            \n                        \n\n                \n                    \n                        The notes inside the track\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            plan\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/classes/track.ts:23\n                            \n                        \n\n                \n                    \n                        The sound plan of the track\n0 -> \"Normal\" (not solo nor mute)\n1 -> Solo\n2 -> Mute\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addNote\n                        \n                        \n                    \n                \n            \n            \n                \naddNote(note: Note)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                Note\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearNotes\n                        \n                        \n                    \n                \n            \n            \n                \nclearNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteNotesBetweenTimecodes\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteNotesBetweenTimecodes(from: number, to: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInstrument\n                        \n                        \n                    \n                \n            \n            \n                \ngetInstrument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteAtIndex(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Note\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNoteAtTimecode\n                        \n                        \n                    \n                \n            \n            \n                \ngetNoteAtTimecode(timecode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    timecode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Note | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNotes\n                        \n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Note[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPlan\n                        \n                        \n                    \n                \n            \n            \n                \ngetPlan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInstrument\n                        \n                        \n                    \n                \n            \n            \n                \nsetInstrument(instrument: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instrument\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setNotes\n                        \n                        \n                    \n                \n            \n            \n                \nsetNotes(notes: Note[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                                Note[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPlan\n                        \n                        \n                    \n                \n            \n            \n                \nsetPlan(plan: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/classes/track.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plan\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Note } from \"./note\";\n\nexport class Track {\n  /**\n   * The auto-increment value for the tracks' ids\n   */\n  private static nextId: number = 1;\n\n  /**\n   * The id of the track\n   */\n  private id: number;\n  /**\n   * The instrument used for the sound of the track\n   */\n  private instrument: string;\n  /**\n   * The sound plan of the track\n   * 0 -> \"Normal\" (not solo nor mute)\n   * 1 -> Solo\n   * 2 -> Mute\n   */\n  private plan: number;\n  /**\n   * The notes inside the track\n   */\n  private notes: Note[];\n\n  /**\n   * Create a new track whose attributes corresponds to the parameters. Its id is auto-incremented\n   *\n   * @param {string} instrument (optional) The {@link Track#instrument|instrument} of the track\n   * @param {number} plan (optional) The {@link Track#plan|plan sound} of the track. Must be 0, 1 or 2. If incorrect set to 0\n   * @param {Note[]} notes (optional) The {@link Track#notes|notes} of the track.\n   */\n  constructor(instrument: string = \"\", plan: number = 0, notes: Note[] = new Array()) {\n    this.id = Track.nextId;\n    ++Track.nextId;\n\n    this.instrument = instrument;\n    if(plan  2 || plan % 1 != 0) {\n      plan = 0;\n    }\n    this.plan = plan;\n    this.notes = notes;\n  }\n\n  getId(): number {\n    return this.id;\n  }\n\n  getInstrument(): string {\n    return this.instrument;\n  }\n  setInstrument(instrument: string): void {\n    this.instrument = instrument;\n  }\n\n  getPlan(): number {\n    return this.plan;\n  }\n  setPlan(plan: number): void {\n    this.plan = plan;\n  }\n\n  getNotes(): Note[] {\n    return this.notes;\n  }\n  getNoteAtIndex(i: number): Note {\n    return this.notes[i];\n  }\n\n  getNoteAtTimecode(timecode: number): Note | null {\n    for(let i = 0 ; i ();\n  }\n\n  deleteNotesBetweenTimecodes(from: number, to: number): void {\n    for(let i = 0 ; i = from && timecode \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackComponent.html":{"url":"components/TrackComponent.html","title":"component - TrackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TrackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/track/track.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-track\n            \n\n            \n                styleUrls\n                ./track.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./track.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                modifiableInstrument\n                            \n                            \n                                modifyInstrument\n                            \n                            \n                                test\n                            \n                            \n                                volume\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeSoundPlan\n                            \n                            \n                                getId\n                            \n                            \n                                mute\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectTrack\n                            \n                            \n                                setSoloMuted\n                            \n                            \n                                setVolume\n                            \n                            \n                                toggleModifyInstrument\n                            \n                            \n                                toggleSoloMuted\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                soloMuted\n                            \n                            \n                                track\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSolo\n                            \n                            \n                                selectedTrack\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/track/track.component.ts:29\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        soloMuted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        track\n                    \n                \n                \n                    \n                        Type :         Track\n\n                    \n                \n                \n                    \n                        Default value : new Track()\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        isSolo\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTrack\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeSoundPlan\n                        \n                        \n                    \n                \n            \n            \n                \nchangeSoundPlan()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mute\n                        \n                        \n                    \n                \n            \n            \n                \nmute()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectTrack\n                        \n                        \n                    \n                \n            \n            \n                \nselectTrack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSoloMuted\n                        \n                        \n                    \n                \n            \n            \n                \nsetSoloMuted(bool: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bool\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVolume\n                        \n                        \n                    \n                \n            \n            \n                \nsetVolume(volume: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    volume\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleModifyInstrument\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleModifyInstrument()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSoloMuted\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSoloMuted()\n                \n            \n\n\n            \n                \n                    Defined in src/app/track/track.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifiableInstrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modifyInstrument\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            test\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NoteRepresentation\n\n                        \n                    \n                    \n                        \n                            Default value : new NoteRepresentation([\"8N\"], null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            volume\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/track/track.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild//, ElementRef\n } from \"@angular/core\";\n\nimport { Track } from \"../classes/track\";\nimport { Note } from \"../classes/note\";\nimport { NoteRepresentation } from \"../classes/note-representation\";\n\n@Component({\n  selector: \"app-track\",\n  templateUrl: \"./track.component.html\",\n  styleUrls: [\"./track.component.sass\"]\n})\nexport class TrackComponent implements OnInit {\n  @Input() track: Track = new Track();\n\n  modifiableInstrument: string = \"\";\n  modifyInstrument = false;\n\n    // Must be between 0 (mute) and 1 (max)\n  volume: number = 1;\n  @Input() soloMuted: boolean = false;\n  @Output() isSolo: EventEmitter = new EventEmitter();\n\n  isSelected: boolean = false;\n  @Output() selectedTrack: EventEmitter = new EventEmitter();\n\n  //@ViewChild('instruInput', { static: true }) intrumentInput: ElementRef;\n\n  test: NoteRepresentation = new NoteRepresentation([\"8N\"], null);\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.modifiableInstrument = this.track.getInstrument();\n  }\n\n  changeSoundPlan(): void {\n      // Change the number of the selected sound plan\n    this.track.setPlan((this.track.getPlan() + 1) % 3);\n\n      // TODO: change the sound track behaviour\n    if(this.track.getPlan() == 2) {\n      this.mute();\n      this.isSolo.emit(false);\n    } else if(this.track.getPlan() == 0) {\n      this.volume = 1;\n    } else {\n      this.isSolo.emit(true);\n    }\n  }\n\n  toggleSoloMuted(): void {\n    this.soloMuted = !this.soloMuted;\n  }\n  setSoloMuted(bool: boolean): void {\n    this.soloMuted = bool;\n  }\n\n  mute(): void {\n    this.volume = 0;\n  }\n\n  setVolume(volume: number): void {\n    if(volume >= 0 && volume {\n        this.intrumentInput.nativeElement.focus();\n      }, 0);*/\n    }\n\n      // TODO: change the sound track's behaviour (with the musical librairy part)\n  }\n\n  selectTrack(): void {\n    this.isSelected = !this.isSelected;\n    if(this.isSelected) {\n      this.selectedTrack.emit(this.track.getId());\n    } else {\n      this.selectedTrack.emit(null);\n    }\n  }\n\n  getId(): number {\n    return this.track.getId();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    \n    \n  \n  \n    \n    -->\n    \n  \n  \n      {{ track.getInstrument() }}\n      Défaut\n    \n      \n      ➤\n    \n  \n\n\n    \n\n    \n                \n                    ./track.component.sass\n                \n                @use \"~sass/vars\"\n\n$HEIGHT: 3rem\n\n$INSTRUMENT_WIDTH: 9rem\n$INSTR_INPUT_HEIGHT: 2rem\n\n$BORDER_WIDTH: 0.25rem\n\n@mixin create-gradient($property, $exterior-color, $interior-color)\n  #{$property}: linear-gradient(to right, $exterior-color, $interior-color 5%, $interior-color 87%, $exterior-color)\n\n%absVertCenteredInteractive\n  cursor: pointer\n  position: absolute\n  top: 50%\n  transform: translateY(-50%)\n\n:host\n  display: block\n  width: 100%\n\n  &.selected>article\n    @include create-gradient(border-image-source, vars.$TRANSPARENT_ORANGE, vars.$ORANGE)\n    border-image-slice: 100% 0 100% 0\n    border-image-width: $BORDER_WIDTH 0 $BORDER_WIDTH 0\n    border-image-repeat: stretch\n\n  &.recording>article\n    @include create-gradient(border-image-source, vars.$TRANSPARENT_RED, vars.$RED)\n\n\narticle\n  display: flex\n  height: $HEIGHT\n  width: 100%\n  @include create-gradient(background-image, vars.$TRANSPARENT_MIDDLE_DARK_GRAY, vars.$MIDDLE_DARK_GRAY)\n  margin: 0.75rem 0\n  padding: 0 0.5rem\n\n  background-clip: padding-box\n\n  border-style: solid\n  border-width: $BORDER_WIDTH 0\n  border-color: transparent\n\n  &>div\n    height: 100%\n\n.soundPlan\n  position: relative\n  justify-content: center\n  width: $HEIGHT\n  //margin-right: $BORDER_WIDTH\n\n  img\n    @extend %absVertCenteredInteractive\n\n.trackContent\n  flex-grow: 1\n  margin: 0 $BORDER_WIDTH\n  display: flex\n  align-items: center\n\n  img\n    display: inline-block\n    max-height: $HEIGHT\n    max-width: $HEIGHT\n    height: 80%\n    width: auto\n\n.instrument\n  position: relative\n  min-width: $INSTRUMENT_WIDTH\n\n  div, span\n    @extend %absVertCenteredInteractive\n  &>div\n    cursor: default\n    width: 100%\n    height: $INSTR_INPUT_HEIGHT\n    display: flex\n\n    input\n      flex-grow: 1\n      max-width: $INSTRUMENT_WIDTH - $INSTR_INPUT_HEIGHT - 1rem\n      border-top-right-radius: 0\n      border-bottom-right-radius: 0\n    button\n      height: 100%\n      width: $INSTR_INPUT_HEIGHT\n      background: vars.$DEEP_DARK_GRAY\n      border-top-left-radius: 0\n      border-bottom-left-radius: 0\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          -->              {{ track.getInstrument() }}      Défaut                ➤      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CreateTrackComponent', 'selector': 'app-create-track'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'ExportMenuComponent', 'selector': 'app-export-menu'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MeasureComponent', 'selector': 'app-measure'},{'name': 'MetronomeComponent', 'selector': 'app-metronome'},{'name': 'MetronomeSoundComponent', 'selector': 'app-metronome-sound'},{'name': 'NoteComponent', 'selector': 'app-note'},{'name': 'PlaybarComponent', 'selector': 'app-playbar'},{'name': 'RhythmComponent', 'selector': 'app-rhythm'},{'name': 'SaveMenuComponent', 'selector': 'app-save-menu'},{'name': 'SignatureComponent', 'selector': 'app-signature'},{'name': 'TempoComponent', 'selector': 'app-tempo'},{'name': 'TrackComponent', 'selector': 'app-track'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TrackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/classes/note-representation.ts\n            \n            class\n            AddOn\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/classes/note-representation.ts\n            \n            class\n            NoteRepresentation\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/classes/note.ts\n            \n            class\n            Note\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/classes/signature.ts\n            \n            class\n            Signature\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/classes/sound-player.ts\n            \n            class\n            SoundPlayer\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/classes/tempo.ts\n            \n            class\n            Tempo\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/classes/track.ts\n            \n            class\n            Track\n            \n                31 %\n                (6/19)\n            \n        \n        \n            \n                \n                src/app/create-track/create-track.component.ts\n            \n            component\n            CreateTrackComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getImgPath\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getJSON\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getName\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            getNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/enums/basic-note.ts\n            \n            function\n            values\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/enums/binary-note.ts\n            \n            function\n            getRepresentation\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/export-menu/export-menu.component.ts\n            \n            component\n            ExportMenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/measure/measure.component.ts\n            \n            component\n            MeasureComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/metronome-sound/metronome-sound.component.ts\n            \n            component\n            MetronomeSoundComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/metronome/metronome.component.ts\n            \n            component\n            MetronomeComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/playbar/playbar.component.ts\n            \n            component\n            PlaybarComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/rhythm/rhythm.component.ts\n            \n            component\n            RhythmComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                src/app/save-menu/save-menu.component.ts\n            \n            component\n            SaveMenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/signature/signature.component.ts\n            \n            component\n            SignatureComponent\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/tempo/tempo.component.ts\n            \n            component\n            TempoComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/track/track.component.ts\n            \n            component\n            TrackComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.4\n        \n            @angular/common : ~11.0.4\n        \n            @angular/compiler : ~11.0.4\n        \n            @angular/core : ~11.0.4\n        \n            @angular/forms : ~11.0.4\n        \n            @angular/platform-browser : ~11.0.4\n        \n            @angular/platform-browser-dynamic : ~11.0.4\n        \n            @angular/router : ~11.0.4\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BasicNote   (src/.../basic-note.ts)\n                        \n                        \n                            BinaryNote   (src/.../binary-note.ts)\n                        \n                        \n                            Intrument   (src/.../instrument.ts)\n                        \n                        \n                            Sound   (src/.../metronome.ts)\n                        \n                        \n                            TernaryNote   (src/.../ternary-note.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/basic-note.ts\n    \n        \n            \n                \n                    \n                        \n                        BasicNote\n                    \n                \n                    \n                        \n                            The enum that stores the primal notes from the whole note to sixteen note\n\n                        \n                    \n                        \n                            \n                                 WHOLE_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 1, \"name\": \"Whole note\", \"img\": \"whole-note.svg\"}\n                            \n                        \n                        \n                            \n                                 HALF_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 2, \"name\": \"Half note\", \"img\": \"half-note.svg\"}\n                            \n                        \n                        \n                            \n                                 QUARTER_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 4, \"name\": \"Quarter note\", \"img\": \"quarter-note.svg\"}\n                            \n                        \n                        \n                            \n                                 HEIGHT_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 8, \"name\": \"Height note\", \"img\": \"height-note.svg\"}\n                            \n                        \n                        \n                            \n                                 SIXTEEN_NOTE\n                            \n                        \n                        \n                            \n                                Value : {\"number\": 16, \"name\": \"Sixteen note\", \"img\": \"sixteen-note.svg\"}\n                            \n                        \n            \n        \n\n    src/app/enums/binary-note.ts\n    \n        \n            \n                \n                    \n                        \n                        BinaryNote\n                    \n                \n                    \n                        \n                            This enum list every note type that can be visually created.\nVALUES NOTATION :\n   All values start by _ due to the fact that a value cannot start by a number.\n   R -> rest\n   D -> dotted\n   TR -> triplet\n   1N -> whole note\n   2N -> half note\n   4N -> quarter note\n   8N -> eight note\n   16N -> sixteenth note\n   A number not followed by a N but by an _ specify the number of linked notes after it\n   following themselves. ex : 28N = two eight note or eight note eight note.\n\n                        \n                    \n                        \n                            \n                                 _4N\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 _4N_TR\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 _4_8N\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 _2_8N\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 _2_16N\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 _16N_8N_16N\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n                        \n                            \n                                 _8N_2_16N\n                            \n                        \n                        \n                            \n                                Value : 7\n                            \n                        \n                        \n                            \n                                 _2_16N_8N\n                            \n                        \n                        \n                            \n                                Value : 8\n                            \n                        \n                        \n                            \n                                 _4_16N\n                            \n                        \n                        \n                            \n                                Value : 9\n                            \n                        \n                        \n                            \n                                 _1N_R\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 _2N_R\n                            \n                        \n                        \n                            \n                                Value : 11\n                            \n                        \n                        \n                            \n                                 _4N_R\n                            \n                        \n                        \n                            \n                                Value : 12\n                            \n                        \n                        \n                            \n                                 _8N_R\n                            \n                        \n                        \n                            \n                                Value : 13\n                            \n                        \n                        \n                            \n                                 _16N_R\n                            \n                        \n                        \n                            \n                                Value : 14\n                            \n                        \n            \n        \n\n    src/app/enums/instrument.ts\n    \n        \n            \n                \n                    \n                        \n                        Intrument\n                    \n                \n                        \n                            \n                                 ACOUSTIC_GRAND_PIANO\n                            \n                        \n                        \n                            \n                                 BRIGHT_ACOUSTIC_PIANO\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GRAND_PIANO\n                            \n                        \n                        \n                            \n                                 HONKYTONK_PIANO\n                            \n                        \n                        \n                            \n                                 ELECTRIC_PIANO_1\n                            \n                        \n                        \n                            \n                                 ELECTRIC_PIANO_2\n                            \n                        \n                        \n                            \n                                 HARPSICHORD\n                            \n                        \n                        \n                            \n                                 CLAVINET\n                            \n                        \n                        \n                            \n                                 CELESTA\n                            \n                        \n                        \n                            \n                                 GLOCKENSPIEL\n                            \n                        \n                        \n                            \n                                 MUSIC_BOX\n                            \n                        \n                        \n                            \n                                 VIBRAPHONE\n                            \n                        \n                        \n                            \n                                 MARIMBA\n                            \n                        \n                        \n                            \n                                 XYLOPHONE\n                            \n                        \n                        \n                            \n                                 TUBULAR_BELLS\n                            \n                        \n                        \n                            \n                                 DULCIMER\n                            \n                        \n                        \n                            \n                                 DRAWBAR_ORGAN\n                            \n                        \n                        \n                            \n                                 PERCUSSIVE_ORGAN\n                            \n                        \n                        \n                            \n                                 ROCK_ORGAN\n                            \n                        \n                        \n                            \n                                 CHURCH_ORGAN\n                            \n                        \n                        \n                            \n                                 REED_ORGAN\n                            \n                        \n                        \n                            \n                                 ACCORDION\n                            \n                        \n                        \n                            \n                                 HARMONICA\n                            \n                        \n                        \n                            \n                                 TANGO_ACCORDION\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_GUITAR_NYLON\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_GUITAR_STEEL\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_JAZZ\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_CLEAN\n                            \n                        \n                        \n                            \n                                 ELECTRIC_GUITAR_MUTED\n                            \n                        \n                        \n                            \n                                 OVERDRIVEN_GUITAR\n                            \n                        \n                        \n                            \n                                 DISTORTION_GUITAR\n                            \n                        \n                        \n                            \n                                 GUITAR_HARMONICS\n                            \n                        \n                        \n                            \n                                 ACOUSTIC_BASS\n                            \n                        \n                        \n                            \n                                 ELECTRIC_BASS_FINGER\n                            \n                        \n                        \n                            \n                                 ELECTRIC_BASS_PICK\n                            \n                        \n                        \n                            \n                                 FRETLESS_BASS\n                            \n                        \n                        \n                            \n                                 SLAP_BASS_1\n                            \n                        \n                        \n                            \n                                 SLAP_BASS_2\n                            \n                        \n                        \n                            \n                                 SYNTH_BASS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_BASS_2\n                            \n                        \n                        \n                            \n                                 VIOLIN\n                            \n                        \n                        \n                            \n                                 VIOLA\n                            \n                        \n                        \n                            \n                                 CELLO\n                            \n                        \n                        \n                            \n                                 CONTRABASS\n                            \n                        \n                        \n                            \n                                 TREMOLO_STRINGS\n                            \n                        \n                        \n                            \n                                 PIZZICATO_STRINGS\n                            \n                        \n                        \n                            \n                                 ORCHESTRAL_HARP\n                            \n                        \n                        \n                            \n                                 TIMPANI\n                            \n                        \n                        \n                            \n                                 STRING_ENSEMBLE_1\n                            \n                        \n                        \n                            \n                                 STRING_ENSEMBLE_2\n                            \n                        \n                        \n                            \n                                 SYNTH_STRINGS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_STRINGS_2\n                            \n                        \n                        \n                            \n                                 CHOIR_AAHS\n                            \n                        \n                        \n                            \n                                 VOICE_OOHS\n                            \n                        \n                        \n                            \n                                 SYNTH_CHOIR\n                            \n                        \n                        \n                            \n                                 ORCHESTRA_HIT\n                            \n                        \n                        \n                            \n                                 TRUMPET\n                            \n                        \n                        \n                            \n                                 TROMBONE\n                            \n                        \n                        \n                            \n                                 TUBA\n                            \n                        \n                        \n                            \n                                 MUTED_TRUMPET\n                            \n                        \n                        \n                            \n                                 FRENCH_HORN\n                            \n                        \n                        \n                            \n                                 BRASS_SECTION\n                            \n                        \n                        \n                            \n                                 SYNTH_BRASS_1\n                            \n                        \n                        \n                            \n                                 SYNTH_BRASS_2\n                            \n                        \n                        \n                            \n                                 SOPRANO_SAX\n                            \n                        \n                        \n                            \n                                 ALTO_SAX\n                            \n                        \n                        \n                            \n                                 TENOR_SAX\n                            \n                        \n                        \n                            \n                                 BARITONE_SAX\n                            \n                        \n                        \n                            \n                                 OBOE\n                            \n                        \n                        \n                            \n                                 ENGLISH_HORN\n                            \n                        \n                        \n                            \n                                 BASSOON\n                            \n                        \n                        \n                            \n                                 CLARINET\n                            \n                        \n                        \n                            \n                                 PICCOLO\n                            \n                        \n                        \n                            \n                                 FLUTE\n                            \n                        \n                        \n                            \n                                 RECORDER\n                            \n                        \n                        \n                            \n                                 PAN_FLUTE\n                            \n                        \n                        \n                            \n                                 BLOWN_BOTTLE\n                            \n                        \n                        \n                            \n                                 SHAKUHACHI\n                            \n                        \n                        \n                            \n                                 WHISTLE\n                            \n                        \n                        \n                            \n                                 OCARINA\n                            \n                        \n                        \n                            \n                                 LEAD_1_SQUARE\n                            \n                        \n                        \n                            \n                                 LEAD_2_SAWTOOTH\n                            \n                        \n                        \n                            \n                                 LEAD_3_CALLIOPE\n                            \n                        \n                        \n                            \n                                 LEAD_4_CHIFF\n                            \n                        \n                        \n                            \n                                 LEAD_5_CHARANG\n                            \n                        \n                        \n                            \n                                 LEAD_6_VOICE\n                            \n                        \n                        \n                            \n                                 LEAD_7_FIFTHS\n                            \n                        \n                        \n                            \n                                 LEAD_8_BASS_AND_LEAD\n                            \n                        \n                        \n                            \n                                 PAD_1_NEW_AGE\n                            \n                        \n                        \n                            \n                                 PAD_2_WARM\n                            \n                        \n                        \n                            \n                                 PAD_3_POLYSYNTH\n                            \n                        \n                        \n                            \n                                 PAD_4_CHOIR\n                            \n                        \n                        \n                            \n                                 PAD_5_BOWED\n                            \n                        \n                        \n                            \n                                 PAD_6_METALLIC\n                            \n                        \n                        \n                            \n                                 PAD_7_HALO\n                            \n                        \n                        \n                            \n                                 PAD_8_SWEEP\n                            \n                        \n                        \n                            \n                                 FX_1_RAIN\n                            \n                        \n                        \n                            \n                                 FX_2_SOUNDTRACK\n                            \n                        \n                        \n                            \n                                 FX_3_CRYSTAL\n                            \n                        \n                        \n                            \n                                 FX_4_ATMOSPHERE\n                            \n                        \n                        \n                            \n                                 FX_5_BRIGHTNESS\n                            \n                        \n                        \n                            \n                                 FX_6_GOBLINS\n                            \n                        \n                        \n                            \n                                 FX_7_ECHOES\n                            \n                        \n                        \n                            \n                                 FX_8_SCIFI\n                            \n                        \n                        \n                            \n                                 SITAR\n                            \n                        \n                        \n                            \n                                 BANJO\n                            \n                        \n                        \n                            \n                                 SHAMISEN\n                            \n                        \n                        \n                            \n                                 KOTO\n                            \n                        \n                        \n                            \n                                 KALIMBA\n                            \n                        \n                        \n                            \n                                 BAGPIPE\n                            \n                        \n                        \n                            \n                                 FIDDLE\n                            \n                        \n                        \n                            \n                                 SHANAI\n                            \n                        \n                        \n                            \n                                 TINKLE_BELL\n                            \n                        \n                        \n                            \n                                 AGOGO\n                            \n                        \n                        \n                            \n                                 STEEL_DRUMS\n                            \n                        \n                        \n                            \n                                 WOODBLOCK\n                            \n                        \n                        \n                            \n                                 TAIKO_DRUM\n                            \n                        \n                        \n                            \n                                 MELODIC_TOM\n                            \n                        \n                        \n                            \n                                 SYNTH_DRUM\n                            \n                        \n                        \n                            \n                                 REVERSE_CYMBAL\n                            \n                        \n                        \n                            \n                                 GUITAR_FRET_NOISE\n                            \n                        \n                        \n                            \n                                 BREATH_NOISE\n                            \n                        \n                        \n                            \n                                 SEASHORE\n                            \n                        \n                        \n                            \n                                 BIRD_TWEET\n                            \n                        \n                        \n                            \n                                 TELEPHONE_RING\n                            \n                        \n                        \n                            \n                                 HELICOPTER\n                            \n                        \n                        \n                            \n                                 APPLAUSE\n                            \n                        \n                        \n                            \n                                 GUNSHOT\n                            \n                        \n            \n        \n\n    src/app/classes/metronome.ts\n    \n        \n            \n                \n                    \n                        \n                        Sound\n                    \n                \n                        \n                            \n                                 TOC\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/toc.wav\n                            \n                        \n                        \n                            \n                                 CLOCK_1\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/clock-1.wav\n                            \n                        \n                        \n                            \n                                 CLOCK_2\n                            \n                        \n                        \n                            \n                                Value : ../../assets/sounds/metronome/clock-2.wav\n                            \n                        \n            \n        \n\n    src/app/enums/ternary-note.ts\n    \n        \n            \n                \n                    \n                        \n                        TernaryNote\n                    \n                \n                    \n                        \n                            This enum list every ternary note that can be visually created.\nVALUES NOTATION :\n   All values start by _ due to the fact that a value cannot start by a number.\n   R -> rest\n   D -> dotted\n   DU -> duplet\n   2N -> half note\n   4N -> quarter note\n   8N -> eight note\n   16N -> sixteenth note\n   A number not followed by a N but by an _ specify the number of linked notes after it\n   following themselves. ex : 28N = two eight note or eight note eight note.\n\n                        \n                    \n                        \n                            \n                                 _4N\n                            \n                        \n                        \n                            \n                                 _D_4N\n                            \n                        \n                        \n                            \n                                 _8N\n                            \n                        \n                        \n                            \n                                 _3_8N\n                            \n                        \n                        \n                            \n                                 _2_16N\n                            \n                        \n                        \n                            \n                                 _6_16N\n                            \n                        \n                        \n                            \n                                 _8N_4_16N\n                            \n                        \n                        \n                            \n                                 _4_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_2_16N_8N\n                            \n                        \n                        \n                            \n                                 _8N_16N_8N\n                            \n                        \n                        \n                            \n                                 _2_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _2_16N_2_8N\n                            \n                        \n                        \n                            \n                                 _D_8N_3_16N\n                            \n                        \n                        \n                            \n                                 _3_16N_D_8N\n                            \n                        \n                        \n                            \n                                 _2_16N_8N_2_16N\n                            \n                        \n                        \n                            \n                                 _DU\n                            \n                        \n                        \n                            \n                                 _8N_R\n                            \n                        \n                        \n                            \n                                 _16N_R\n                            \n                        \n                        \n                            \n                                 _D_2N_R\n                            \n                        \n                        \n                            \n                                 _D_4N_R\n                            \n                        \n                        \n                            \n                                 _D_8N_R\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getImgPath   (src/.../basic-note.ts)\n                        \n                        \n                            getJSON   (src/.../basic-note.ts)\n                        \n                        \n                            getName   (src/.../basic-note.ts)\n                        \n                        \n                            getNumber   (src/.../basic-note.ts)\n                        \n                        \n                            getRepresentation   (src/.../binary-note.ts)\n                        \n                        \n                            values   (src/.../basic-note.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/enums/basic-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getImgPath\n                        \n                        \n                    \n                \n            \n            \n                \ngetImgPath(note)\n                \n            \n\n\n\n\n            \n                \n                    Get the path to the image of the note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note that we want the image path to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The complete path to the image of the note, from the app repertory\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getJSON\n                        \n                        \n                    \n                \n            \n            \n                \ngetJSON(note)\n                \n            \n\n\n\n\n            \n                \n                    Get the value of the BasicNote on its JSON form\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note that we want the JSON value of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        The JSON associated to the note. It's form is {number: {number}, name: {string}, img: {string}}, were img is the name of the image with it's extension, that doesn't include the path to the image\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \ngetName(note)\n                \n            \n\n\n\n\n            \n                \n                    Get the name of the note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note that we want the name of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the note, in english, starting with a capital..\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumber\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumber(note)\n                \n            \n\n\n\n\n            \n                \n                    Get the number associated to the note\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note that we want the number of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The number of the note, as the denominator of it's time duration. Whole note is 1, half note 2...\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            values\n                        \n                        \n                    \n                \n            \n            \n                \nvalues()\n                \n            \n\n\n\n\n            \n                \n                    Get all the BasicNote values\nTO CHANGE FOR SOMETHING DYNAMIC\n\n\n                    \n                    \n                    \n                        Returns :         BasicNote[]\n\n                    \n                    \n                        All the possible BasicNote's values\n\n                    \n                \n            \n        \n    \n    src/app/enums/binary-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getRepresentation\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepresentation(note)\n                \n            \n\n\n\n\n            \n                \n                    Get the representation of the binary note.\nTO COMPLETE\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    note\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The note we wants the representation of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NoteRepresentation | null\n\n                    \n                    \n                        The {\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPolyrythmique\nThis project was generated with Angular CLI version 11.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCreateTrackComponent\n\nCreateTrackComponent\n\nAppModule -->\n\nCreateTrackComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nExportMenuComponent\n\nExportMenuComponent\n\nAppModule -->\n\nExportMenuComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nMeasureComponent\n\nMeasureComponent\n\nAppModule -->\n\nMeasureComponent->AppModule\n\n\n\n\n\nMetronomeComponent\n\nMetronomeComponent\n\nAppModule -->\n\nMetronomeComponent->AppModule\n\n\n\n\n\nMetronomeSoundComponent\n\nMetronomeSoundComponent\n\nAppModule -->\n\nMetronomeSoundComponent->AppModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nAppModule -->\n\nNoteComponent->AppModule\n\n\n\n\n\nPlaybarComponent\n\nPlaybarComponent\n\nAppModule -->\n\nPlaybarComponent->AppModule\n\n\n\n\n\nRhythmComponent\n\nRhythmComponent\n\nAppModule -->\n\nRhythmComponent->AppModule\n\n\n\n\n\nSaveMenuComponent\n\nSaveMenuComponent\n\nAppModule -->\n\nSaveMenuComponent->AppModule\n\n\n\n\n\nSignatureComponent\n\nSignatureComponent\n\nAppModule -->\n\nSignatureComponent->AppModule\n\n\n\n\n\nTempoComponent\n\nTempoComponent\n\nAppModule -->\n\nTempoComponent->AppModule\n\n\n\n\n\nTrackComponent\n\nTrackComponent\n\nAppModule -->\n\nTrackComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        6 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AddOnJson   (src/.../note-representation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/classes/note-representation.ts\n    \n    \n        \n            \n                \n                    \n                    AddOnJson\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n                \n                    \n                        The environment variables when the application is in production\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\n  pathsFromApp: {\n    img: \"../assets/images/\",\n    rythmsImg: \"../assets/images/rythms/\",\n    notesImg: \"../assets/images/notes/\",\n    sounds: \"../assets/sounds/\"\n  }\n}\n                        \n                    \n\n                \n                    \n                        The environment variables when the application is in debug mode\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
